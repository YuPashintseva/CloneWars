[{"C:\\Users\\Juliy\\Desktop\\RS_SCHOOL\\CloneWars\\CloneWars\\rsclone\\src\\index.js":"1","C:\\Users\\Juliy\\Desktop\\RS_SCHOOL\\CloneWars\\CloneWars\\rsclone\\src\\App.js":"2","C:\\Users\\Juliy\\Desktop\\RS_SCHOOL\\CloneWars\\CloneWars\\rsclone\\src\\components\\FilmList.js":"3","C:\\Users\\Juliy\\Desktop\\RS_SCHOOL\\CloneWars\\CloneWars\\rsclone\\src\\components\\MovieRow.js":"4","C:\\Users\\Juliy\\Desktop\\RS_SCHOOL\\CloneWars\\CloneWars\\rsclone\\src\\components\\FilmPage.js":"5","C:\\Users\\Juliy\\Desktop\\RS_SCHOOL\\CloneWars\\CloneWars\\rsclone\\src\\components\\CaurouselMain.js":"6","C:\\Users\\Juliy\\Desktop\\RS_SCHOOL\\CloneWars\\CloneWars\\rsclone\\src\\components\\ModalWindow.js":"7"},{"size":677,"mtime":1610948240885,"results":"8","hashOfConfig":"9"},{"size":7779,"mtime":1610996849047,"results":"10","hashOfConfig":"9"},{"size":5693,"mtime":1610996813223,"results":"11","hashOfConfig":"9"},{"size":841,"mtime":1610948240877,"results":"12","hashOfConfig":"9"},{"size":3153,"mtime":1610971522662,"results":"13","hashOfConfig":"9"},{"size":7473,"mtime":1610971523295,"results":"14","hashOfConfig":"9"},{"size":3463,"mtime":1610978629568,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1qc3per",{"filePath":"18","messages":"19","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"20","messages":"21","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"22","messages":"23","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"25"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"25"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"25"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"25"},"C:\\Users\\Juliy\\Desktop\\RS_SCHOOL\\CloneWars\\CloneWars\\rsclone\\src\\index.js",["35","36","37","38"],"C:\\Users\\Juliy\\Desktop\\RS_SCHOOL\\CloneWars\\CloneWars\\rsclone\\src\\App.js",["39","40","41","42","43","44","45","46","47","48","49","50","51","52"],"C:\\Users\\Juliy\\Desktop\\RS_SCHOOL\\CloneWars\\CloneWars\\rsclone\\src\\components\\FilmList.js",["53","54","55","56","57"],"C:\\Users\\Juliy\\Desktop\\RS_SCHOOL\\CloneWars\\CloneWars\\rsclone\\src\\components\\MovieRow.js",["58","59","60","61","62","63"],"import React from \"react\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\n\r\nclass MovieRow extends React.Component {\r\n  render() {\r\n    return (\r\n  \r\n   \r\n      <option className=\"search__item\" value={this.props.movie.title}>\r\n        {this.props.movie.overview}\r\n        \r\n      </option>\r\n    \r\n    \r\n      // <div className=\"search__item\" key={this.props.movie.id}>\r\n      //   <div className=\"search__item-image\"><img className=\"img\" alt=\"poster\" src={this.props.movie.poster_path} /></div>\r\n      //   <div className=\"search__item-about\">\r\n      //     <h3>{this.props.movie.title}</h3>\r\n      //   <p>{this.props.movie.overview}</p>\r\n      //   </div>\r\n      // </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MovieRow;\r\n",["64","65"],"C:\\Users\\Juliy\\Desktop\\RS_SCHOOL\\CloneWars\\CloneWars\\rsclone\\src\\components\\FilmPage.js",["66","67","68","69"],"import React from 'react';\r\n\r\nimport star from './assets/megastar.png';\r\nimport FilmList from './FilmList';\r\nimport { Helmet } from \"react-helmet\";\r\nimport CarouselMain from './CaurouselMain';\r\n\r\n\r\n class FilmPage extends React.Component{\r\n    constructor() {\r\n        super();\r\n        this.state = {video:\"\",dat:JSON.parse(sessionStorage.getItem(\"val\"))};\r\n     \r\n        //this.data = props.value;\r\n    }\r\n    async componentDidMount(){\r\n     const response = await fetch(`https://api.themoviedb.org/3/movie/${this.state.dat.id}/videos?api_key=fb0fcc2d34caffc53da53d676fbf678a&language=en-US`);\r\n     const res = await response.json();\r\n     this.setState({ video: res.results[0]?res.results[0].key:''});\r\n     let val = JSON.parse(sessionStorage.getItem(\"val\"));\r\n     this.setState({dat: val});\r\n     \r\n    }\r\n\r\n    render(){\r\n       \r\n        return(\r\n            \r\n            <div id = \"fp\" className=\" container-fluid wrapper wrapperStyle\">\r\n               \r\n               <div id = \"upperBlock\" className=\"wrapper\">\r\n                 <div className=\"row\"></div>\r\n                 <div className=\"row\">\r\n\r\n                     <h2 className=\"col\">{this.state.dat.original_title}</h2>\r\n                    \r\n                     \r\n                     <h4 className=\"col-auto\">Average Vote: {this.state.dat.vote_average}\r\n                     <img src={star} ></img>\r\n                     </h4>\r\n                     \r\n                     \r\n                     <h4 className=\"col-auto\">Votes: {this.state.dat.vote_count}</h4>\r\n                \r\n               </div>\r\n               </div>\r\n               <div id = \"briefInfo\" className=\"wrapper\">\r\n                   <h5>Release Date: {this.state.dat.release_date}</h5>\r\n                   <div></div>\r\n                </div>\r\n\r\n               <div id = \"photoVideo\" className=\"row\" style={{padding:'1% 5% 1% 5%', margin:'0%', border:'0%'}}>\r\n                   \r\n               <img  width=\"36%\" height =\"auto\" src={`https://image.tmdb.org/t/p/original/${this.state.dat.poster_path}`} alt={this.state.dat.title} style={{ margin:'2%'}}/>\r\n               {this.state.video?(\r\n               <iframe  width=\"56%\" height=\"auto\" src={`https://www.youtube.com/embed/${this.state.video}`} style={{ margin:'2%'}}/>\r\n               ):(\r\n               <div style={{color:'white', margin:'0% 5% 5% 1%',maxWidth:'45%'}}>Sorry, there seems to be no video provided for this film. <hr/>The Universe wants you to watch it without spoilers, apparently.</div>\r\n               )}\r\n               </div>\r\n               <div style={{  margin: \"8px\"}}>\r\n               <h4 style={{  fontWeight: \"bolder\"}}>Overview:</h4>\r\n              <h5 > {this.state.dat.overview}</h5></div>\r\n             \r\n               <div id = \"videoCarousel\" className=\"wrapper\"></div>\r\n               <div id = \"photoCarousel\" className=\"wrapper\"></div>\r\n               <div id = \"cast\"></div>\r\n               <div className=\"head-text\">\r\n                Actors\r\n               </div>\r\n               <CarouselMain type={\"actors\"} filmId={this.state.dat.id} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default FilmPage;","C:\\Users\\Juliy\\Desktop\\RS_SCHOOL\\CloneWars\\CloneWars\\rsclone\\src\\components\\CaurouselMain.js",["70"],"import React from 'react';\r\nimport Carousel from \"react-multi-carousel\";\r\nimport \"react-multi-carousel/lib/styles.css\";\r\nimport { Helmet } from \"react-helmet\";\r\n\r\nclass CarouselMain extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {dataMain: [], type: \"films\"}\r\n        console.log(\"herehere\", this.props);\r\n\r\n    }\r\n\r\n    async componentDidMount() {\r\n      let responseMain = await fetch('https://api.themoviedb.org/3/movie/popular?api_key=fb0fcc2d34caffc53da53d676fbf678a&language=en-US&page=2');\r\n      if (this.props.type) {\r\n        if (this.props.type === 'films') {\r\n          responseMain = await fetch('https://api.themoviedb.org/3/movie/popular?api_key=fb0fcc2d34caffc53da53d676fbf678a&language=en-US&page=2');\r\n        } else if (this.props.type === 'people') {\r\n          responseMain = await fetch('https://api.themoviedb.org/3/person/popular?api_key=fb0fcc2d34caffc53da53d676fbf678a&language=en-US&page=2');\r\n        } else {\r\n          responseMain = await fetch('https://api.themoviedb.org/3/movie/464052/credits?api_key=fb0fcc2d34caffc53da53d676fbf678a&language=en-US');\r\n          if (this.props.filmId) {\r\n            responseMain = await fetch(`https://api.themoviedb.org/3/movie/${this.props.filmId}/credits?api_key=fb0fcc2d34caffc53da53d676fbf678a&language=en-US`);\r\n          }\r\n        }\r\n        this.setState({ type: this.props.type })\r\n       }\r\n      const jsonMain = await responseMain.json();\r\n      this.setState({ dataMain: jsonMain});\r\n      console.log(\"test111:\",this.state.dataMain.cast)\r\n  }\r\n    render() {\r\n\r\n       if (this.state.dataMain.results){\r\n          if (this.state.type === \"films\") {\r\n            const responsive = {\r\n              superLargeDesktop: {\r\n                breakpoint: { max: 4000, min: 3000 },\r\n                items: 5\r\n              },\r\n              desktop: {\r\n                breakpoint: { max: 3000, min: 1024 },\r\n                items: 1\r\n              },\r\n              tablet: {\r\n                breakpoint: { max: 1024, min: 464 },\r\n                items: 1\r\n              },\r\n              mobile: {\r\n                breakpoint: { max: 464, min: 0 },\r\n                items: 1\r\n              }\r\n            };\r\n            return(\r\n              <div className=\"main-carousel-wrapper\">\r\n                <Carousel                 \r\n                  swipeable={false}\r\n                  draggable={false}\r\n                  showDots={false}\r\n                  responsive={responsive}\r\n                  ssr={true}\r\n                  infinite={false}\r\n                  autoPlaySpeed={1000}\r\n                  keyBoardControl={true}\r\n                  customTransition=\"all .5\"\r\n                  transitionDuration={1000}\r\n                  containerClass=\"carousel-container\"\r\n                  removeArrowOnDeviceType={[\"tablet\", \"mobile\"]}\r\n                  dotListClass=\"custom-dot-list-style\"\r\n                  itemClass=\"carousel-item-padding\"\r\n                  centerMode={false}\r\n                  slidesToSlide={3}\r\n                >\r\n                {this.state.dataMain.results.map(el => (\r\n                    <div className=\"main-carousel-img\">\r\n                      <img className=\"poster-img-main\" src={`https://image.tmdb.org/t/p/original/${el.backdrop_path}`} alt={el.title}/>\r\n                      <h2><span>{el.title}</span></h2>\r\n                    </div>\r\n                ))};\r\n                </Carousel>\r\n              </div>\r\n            );\r\n          } else if (this.state.type === \"people\") {\r\n            const responsive = {\r\n              superLargeDesktop: {\r\n                breakpoint: { max: 4000, min: 3000 },\r\n                items: 5\r\n              },\r\n              desktop: {\r\n                breakpoint: { max: 3000, min: 1024 },\r\n                items: 5\r\n              },\r\n              tablet: {\r\n                breakpoint: { max: 1024, min: 464 },\r\n                items: 4\r\n              },\r\n              mobile: {\r\n                breakpoint: { max: 464, min: 0 },\r\n                items: 2\r\n              }\r\n            };\r\n            return(\r\n              <div className=\"main-carousel-wrapper\">\r\n                <Carousel                 \r\n                  swipeable={false}\r\n                  draggable={false}\r\n                  showDots={false}\r\n                  responsive={responsive}\r\n                  ssr={true}\r\n                  infinite={false}\r\n                  autoPlaySpeed={1000}\r\n                  keyBoardControl={true}\r\n                  customTransition=\"all .5\"\r\n                  transitionDuration={1000}\r\n                  containerClass=\"carousel-container\"\r\n                  removeArrowOnDeviceType={[\"tablet\", \"mobile\"]}\r\n                  dotListClass=\"custom-dot-list-style\"\r\n                  itemClass=\"carousel-item-padding\"\r\n                  centerMode={false}\r\n                  slidesToSlide={3}\r\n                >\r\n                {this.state.dataMain.results.map(el => (\r\n                    <div className=\"main-carousel-img\">\r\n                      <img className=\"poster-img-main rounded-img\" src={`https://image.tmdb.org/t/p/original/${el.profile_path}`} alt={el.profile_path}/>\r\n                      <h2 className=\"star-name-carousel\"><span>{el.name}</span></h2>\r\n                    </div>\r\n                ))};\r\n                </Carousel>\r\n              </div>\r\n            );\r\n          }\r\n          \r\n        } else if ((this.state.type === \"actors\") && (this.state.dataMain.cast)) {\r\n          const responsive = {\r\n            superLargeDesktop: {\r\n              breakpoint: { max: 4000, min: 3000 },\r\n              items: 5\r\n            },\r\n            desktop: {\r\n              breakpoint: { max: 3000, min: 1024 },\r\n              items: 5\r\n            },\r\n            tablet: {\r\n              breakpoint: { max: 1024, min: 464 },\r\n              items: 4\r\n            },\r\n            mobile: {\r\n              breakpoint: { max: 464, min: 0 },\r\n              items: 2\r\n            }\r\n          };\r\n          return(\r\n            <div className=\"main-carousel-wrapper\">\r\n              <Carousel                 \r\n                swipeable={false}\r\n                draggable={false}\r\n                showDots={false}\r\n                responsive={responsive}\r\n                ssr={true}\r\n                infinite={false}\r\n                autoPlaySpeed={1000}\r\n                keyBoardControl={true}\r\n                customTransition=\"all .5\"\r\n                transitionDuration={1000}\r\n                containerClass=\"carousel-container\"\r\n                removeArrowOnDeviceType={[\"tablet\", \"mobile\"]}\r\n                dotListClass=\"custom-dot-list-style\"\r\n                itemClass=\"carousel-item-padding\"\r\n                centerMode={false}\r\n                slidesToSlide={3}\r\n              >\r\n              {this.state.dataMain.cast.map(el => (\r\n                <div>\r\n                  <div className=\"main-carousel-img\">\r\n                    {el.profile_path && <img className=\"poster-img-main rounded-img\" src={`https://image.tmdb.org/t/p/original/${el.profile_path}`} alt={el.profile_path}/>}\r\n                    <h2 className=\"star-name-carousel\"><span>{el.name}</span></h2>\r\n                  </div>\r\n                </div>\r\n              ))};\r\n              </Carousel>\r\n            </div>\r\n          );\r\n        }\r\n        \r\n        else {\r\n          return (<div>Wait a little</div>)\r\n        }\r\n    }\r\n}\r\n\r\nexport default CarouselMain;","C:\\Users\\Juliy\\Desktop\\RS_SCHOOL\\CloneWars\\CloneWars\\rsclone\\src\\components\\ModalWindow.js",["71"],"import React from 'react'\r\nimport { Button, Modal, Container, Row, Col, Image } from 'react-bootstrap'\r\nimport { Helmet } from \"react-helmet\";\r\n\r\nclass ModalWindow extends React.Component{\r\n    render(){\r\n        if (this.props.toWatchList) {\r\n            if (localStorage.getItem('films')) {\r\n                let arr = JSON.parse(localStorage.getItem('films'));\r\n                if (! arr.includes(this.props.filmInfo.id)) {\r\n                    arr.push(this.props.filmInfo.id);\r\n                }\r\n                localStorage.setItem('films', JSON.stringify(arr));\r\n            } else { \r\n                localStorage.setItem('films', JSON.stringify([this.props.filmInfo.id]));\r\n            }\r\n            return(\r\n                <div>\r\n                    <Modal className=\"main-modal\" show={true} size=\"lg\" aria-labelledby=\"contained-modal-title-vcenter\" centered>\r\n                        <Modal.Header closeButton onClick={this.props.handleModalShowHide}>\r\n                         <Modal.Title id=\"contained-modal-title-vcenter\">{this.props.filmInfo.original_title}</Modal.Title>\r\n                        </Modal.Header>\r\n                        <Modal.Body className=\"show-grid\">\r\n                        <Container>\r\n                            <Row>\r\n                               Successfully added to WatchList\r\n                            </Row>\r\n                        </Container>\r\n                        \r\n                        </Modal.Body>\r\n                        <Modal.Footer>\r\n                        <Button variant=\"secondary\" onClick={this.props.handleModalShowHide}>\r\n                            Close\r\n                        </Button>\r\n                        </Modal.Footer>\r\n                    </Modal>\r\n                </div>\r\n            )\r\n        } else {\r\n            return (\r\n                <div>\r\n                    <Modal className=\"main-modal\" show={true} size=\"lg\" aria-labelledby=\"contained-modal-title-vcenter\" centered>\r\n                        <Modal.Header closeButton onClick={this.props.handleModalShowHide}>\r\n                        <Modal.Title id=\"contained-modal-title-vcenter\">{this.props.filmInfo.original_title}</Modal.Title>\r\n                        </Modal.Header>\r\n                        <Modal.Body className=\"show-grid\">\r\n                        <Container>\r\n                            <Row>\r\n                                <Col xs={6} md={4}>\r\n                                <Image className=\"poster-img-modal\" src={`https://image.tmdb.org/t/p/original/${this.props.filmInfo.poster_path}`} alt={this.props.filmInfo.title} thumbnail />\r\n                                </Col>\r\n                                <Col xs={12} md={8}>\r\n                                <strong>Overview: </strong>  {this.props.filmInfo.overview} <br/><br/>\r\n                                <strong>Release date: </strong> {this.props.filmInfo.release_date}\r\n                                </Col>\r\n                            </Row>\r\n                        </Container>\r\n                        \r\n                        </Modal.Body>\r\n                        <Modal.Footer>\r\n                        <Button variant=\"secondary\" onClick={this.props.handleModalShowHide}>\r\n                            Close\r\n                        </Button>\r\n                        </Modal.Footer>\r\n                    </Modal>\r\n                </div>\r\n            );\r\n        }\r\n\r\n    }\r\n    \r\n}\r\n\r\nexport default ModalWindow;",{"ruleId":"72","severity":1,"message":"73","line":5,"column":10,"nodeType":"74","messageId":"75","endLine":5,"endColumn":16},{"ruleId":"72","severity":1,"message":"76","line":6,"column":35,"nodeType":"74","messageId":"75","endLine":6,"endColumn":41},{"ruleId":"72","severity":1,"message":"77","line":6,"column":43,"nodeType":"74","messageId":"75","endLine":6,"endColumn":48},{"ruleId":"72","severity":1,"message":"78","line":6,"column":50,"nodeType":"74","messageId":"75","endLine":6,"endColumn":54},{"ruleId":"72","severity":1,"message":"79","line":1,"column":8,"nodeType":"74","messageId":"75","endLine":1,"endColumn":16},{"ruleId":"72","severity":1,"message":"80","line":10,"column":27,"nodeType":"74","messageId":"75","endLine":10,"endColumn":33},{"ruleId":"72","severity":1,"message":"76","line":10,"column":35,"nodeType":"74","messageId":"75","endLine":10,"endColumn":41},{"ruleId":"72","severity":1,"message":"73","line":12,"column":10,"nodeType":"74","messageId":"75","endLine":12,"endColumn":16},{"ruleId":"72","severity":1,"message":"81","line":13,"column":10,"nodeType":"74","messageId":"75","endLine":13,"endColumn":17},{"ruleId":"82","severity":1,"message":"83","line":117,"column":11,"nodeType":"84","endLine":117,"endColumn":39},{"ruleId":"85","severity":1,"message":"86","line":118,"column":13,"nodeType":"84","endLine":118,"endColumn":61},{"ruleId":"82","severity":1,"message":"83","line":133,"column":19,"nodeType":"84","endLine":133,"endColumn":43},{"ruleId":"82","severity":1,"message":"83","line":137,"column":17,"nodeType":"84","endLine":137,"endColumn":41},{"ruleId":"82","severity":1,"message":"83","line":140,"column":17,"nodeType":"84","endLine":140,"endColumn":50},{"ruleId":"87","severity":1,"message":"88","line":184,"column":19,"nodeType":"84","endLine":188,"endColumn":20},{"ruleId":"89","severity":1,"message":"90","line":195,"column":17,"nodeType":"84","endLine":195,"endColumn":48},{"ruleId":"85","severity":1,"message":"86","line":197,"column":19,"nodeType":"84","endLine":197,"endColumn":65},{"ruleId":"82","severity":1,"message":"91","line":228,"column":13,"nodeType":"84","endLine":228,"endColumn":47},{"ruleId":"72","severity":1,"message":"92","line":1,"column":17,"nodeType":"74","messageId":"75","endLine":1,"endColumn":26},{"ruleId":"72","severity":1,"message":"73","line":9,"column":10,"nodeType":"74","messageId":"75","endLine":9,"endColumn":16},{"ruleId":"72","severity":1,"message":"80","line":13,"column":22,"nodeType":"74","messageId":"75","endLine":13,"endColumn":28},{"ruleId":"72","severity":1,"message":"76","line":14,"column":5,"nodeType":"74","messageId":"75","endLine":14,"endColumn":11},{"ruleId":"72","severity":1,"message":"77","line":15,"column":5,"nodeType":"74","messageId":"75","endLine":15,"endColumn":10},{"ruleId":"72","severity":1,"message":"73","line":2,"column":10,"nodeType":"74","messageId":"75","endLine":2,"endColumn":16},{"ruleId":"72","severity":1,"message":"81","line":3,"column":10,"nodeType":"74","messageId":"75","endLine":3,"endColumn":17},{"ruleId":"72","severity":1,"message":"80","line":4,"column":27,"nodeType":"74","messageId":"75","endLine":4,"endColumn":33},{"ruleId":"72","severity":1,"message":"76","line":4,"column":35,"nodeType":"74","messageId":"75","endLine":4,"endColumn":41},{"ruleId":"72","severity":1,"message":"77","line":4,"column":43,"nodeType":"74","messageId":"75","endLine":4,"endColumn":48},{"ruleId":"72","severity":1,"message":"78","line":4,"column":50,"nodeType":"74","messageId":"75","endLine":4,"endColumn":54},{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","replacedBy":"96"},{"ruleId":"72","severity":1,"message":"97","line":4,"column":8,"nodeType":"74","messageId":"75","endLine":4,"endColumn":16},{"ruleId":"72","severity":1,"message":"73","line":5,"column":10,"nodeType":"74","messageId":"75","endLine":5,"endColumn":16},{"ruleId":"85","severity":1,"message":"86","line":39,"column":22,"nodeType":"84","endLine":39,"endColumn":39},{"ruleId":"98","severity":1,"message":"99","line":56,"column":16,"nodeType":"84","endLine":56,"endColumn":133},{"ruleId":"72","severity":1,"message":"73","line":4,"column":10,"nodeType":"74","messageId":"75","endLine":4,"endColumn":16},{"ruleId":"72","severity":1,"message":"73","line":3,"column":10,"nodeType":"74","messageId":"75","endLine":3,"endColumn":16},"no-unused-vars","'Helmet' is defined but never used.","Identifier","unusedVar","'Switch' is defined but never used.","'Route' is defined but never used.","'Link' is defined but never used.","'ReactDOM' is defined but never used.","'Router' is defined but never used.","'NavLink' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'createRef' is defined but never used.","no-native-reassign",["100"],"no-negated-in-lhs",["101"],"'FilmList' is defined but never used.","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","no-global-assign","no-unsafe-negation"]