[{"C:\\Users\\KiguradzeLeo\\Documents\\GitHub\\CloneWars\\rsclone\\src\\index.js":"1","C:\\Users\\KiguradzeLeo\\Documents\\GitHub\\CloneWars\\rsclone\\src\\App.js":"2","C:\\Users\\KiguradzeLeo\\Documents\\GitHub\\CloneWars\\rsclone\\src\\components\\WatchList.js":"3","C:\\Users\\KiguradzeLeo\\Documents\\GitHub\\CloneWars\\rsclone\\src\\components\\FilmPage.js":"4","C:\\Users\\KiguradzeLeo\\Documents\\GitHub\\CloneWars\\rsclone\\src\\components\\MovieRow.js":"5","C:\\Users\\KiguradzeLeo\\Documents\\GitHub\\CloneWars\\rsclone\\src\\components\\FilmList.js":"6","C:\\Users\\KiguradzeLeo\\Documents\\GitHub\\CloneWars\\rsclone\\src\\components\\CaurouselMain.js":"7","C:\\Users\\KiguradzeLeo\\Documents\\GitHub\\CloneWars\\rsclone\\src\\components\\ModalWindow.js":"8","C:\\Users\\KiguradzeLeo\\Documents\\GitHub\\CloneWars\\rsclone\\src\\components\\Statistics.js":"9"},{"size":677,"mtime":1610879117319,"results":"10","hashOfConfig":"11"},{"size":8466,"mtime":1611120490131,"results":"12","hashOfConfig":"11"},{"size":1943,"mtime":1611117612407,"results":"13","hashOfConfig":"11"},{"size":3102,"mtime":1611044736652,"results":"14","hashOfConfig":"11"},{"size":841,"mtime":1610884804913,"results":"15","hashOfConfig":"11"},{"size":5699,"mtime":1611034225633,"results":"16","hashOfConfig":"11"},{"size":8065,"mtime":1611045157832,"results":"17","hashOfConfig":"11"},{"size":4223,"mtime":1611117612383,"results":"18","hashOfConfig":"11"},{"size":1288,"mtime":1611122384399,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"23"},"1oj9p7d",{"filePath":"24","messages":"25","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"23"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"23"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"23"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"23"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"23"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"23"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"23"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\KiguradzeLeo\\Documents\\GitHub\\CloneWars\\rsclone\\src\\index.js",["47","48","49","50"],"import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\n//import reportWebVitals from './reportWebVitals';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n       <Router>\r\n    <App />\r\n    </Router>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n//reportWebVitals();\r\n",["51","52"],"C:\\Users\\KiguradzeLeo\\Documents\\GitHub\\CloneWars\\rsclone\\src\\App.js",["53","54","55","56","57","58","59","60","61","62","63","64","65","66"],"import ReactDOM from \"react-dom\";\r\nimport FilmList from \"./components/FilmList\";\r\nimport FilmPage from \"./components/FilmPage\";\r\nimport MovieRow from \"./components/MovieRow\";\r\nimport mainLogo from \"./logo-imdb.png\";\r\nimport rsschool from \"./components/assets/rs_school_js.svg\";\r\nimport \"./App.css\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { Component } from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\nimport $ from \"jquery\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport Watchlist from \"./components/WatchList\";\r\nimport Statistics from \"./components/Statistics\";\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.incrementWatchListNumber = this.incrementWatchListNumber.bind(this)\r\n    this.state = {watchlist: 0};\r\n    this.performSearch(\"\");\r\n  }\r\n\r\n  incrementWatchListNumber(filmid) {\r\n    let arr = JSON.parse(localStorage.getItem('films'));\r\n    if (arr) {\r\n      if (! arr.includes(filmid)) {\r\n        this.setState({watchlist: this.state.watchlist + 1});\r\n      }\r\n    } else {\r\n      this.setState({watchlist: this.state.watchlist + 1});\r\n    }   \r\n  }\r\n\r\n  decrementWatchListNumber() {\r\n    let currentNum = this.state.watchlist;\r\n    if (currentNum > 1) {\r\n      currentNum -= 1;\r\n    }\r\n    this.setState({watchlist: currentNum});\r\n  }\r\n\r\n  defineNumberWatchList() {\r\n    if (localStorage.getItem('films')) {\r\n      this.setState({watchlist: JSON.parse(localStorage.getItem('films')).length/2});\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.defineNumberWatchList();\r\n  }\r\n\r\n  performSearch(searchTerm) {\r\n    const urlString =\r\n      \"https://api.themoviedb.org/3/search/movie?api_key=c9ebd652172bbcdaa5b3746fa2e60207&query=\" +\r\n      searchTerm;\r\n    $.ajax({\r\n      url: urlString,\r\n      success: (searchResults) => {\r\n        console.log(\"Fetched data successfully\");\r\n        console.log(searchResults);\r\n        const results = searchResults.results;\r\n\r\n        var movieRows = [];\r\n\r\n        results.forEach((movie) => {\r\n          movie.poster_path =\r\n            \"https://image.tmdb.org/t/p/w600_and_h900_bestv2\" +\r\n            movie.poster_path;\r\n          console.log(movie.poster_path);\r\n          const filmDATA = JSON.parse(sessionStorage.getItem(\"fullInf\"));\r\n          const currFilm = filmDATA.filter(\r\n            (el) => el.original_title === movie.title\r\n          );\r\n          let movieRow;\r\n          if (currFilm[0]) {\r\n            movieRow = <MovieRow key={movie.id} movie={movie} />;\r\n          }\r\n          movieRows.push(movieRow);\r\n        });\r\n\r\n        this.setState({ rows: movieRows });\r\n      },\r\n      error: (xhr, status, err) => {\r\n        console.log(\"failed to fetch data\");\r\n      },\r\n    });\r\n  }\r\n\r\n  searchCnangeHandler(event) {\r\n    console.log(event.target.value);\r\n    const boundObject = this;\r\n    const searchTerm = event.target.value;\r\n    boundObject.performSearch(searchTerm);\r\n  }\r\n  changeLinkState() {\r\n    const inp = document.querySelector(\"input\");\r\n    const datl = document.querySelector(\"#datalistOptions\").childNodes;\r\n    const filmDATA = JSON.parse(sessionStorage.getItem(\"fullInf\"));\r\n\r\n    const currFilm = filmDATA.filter((el) => el.original_title === inp.value);\r\n\r\n    sessionStorage.setItem(\"val\", JSON.stringify(currFilm[0]));\r\n\r\n    let flag = true;\r\n    datl.forEach((el) => {\r\n      if (el.value === inp.value) flag = false;\r\n    });\r\n    if (\r\n      !flag &&\r\n      document.querySelector(\"#photoVideo\") &&\r\n      document.querySelector(\"h2\").innerHTML !== inp.value\r\n    )\r\n      window.location.reload();\r\n    return flag;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <nav\r\n          className=\"navbar navbar-expand-lg navbar-dark bg-dark\"\r\n          style={{ margin: \"3px 0\" }}\r\n        >\r\n          <a className=\"navbar-brand\">\r\n          <Link to='/'><img className=\"navbar-mainlogo\" src={mainLogo}></img></Link>\r\n          </a>\r\n          <button\r\n            className=\"navbar-toggler navbar-toggler-right\"\r\n            type=\"button\"\r\n            data-toggle=\"collapse\"\r\n            data-target=\"#navb\"\r\n          >\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n\r\n          <div className=\"collapse navbar-collapse\" id=\"navb\">\r\n            <ul className=\"navbar-nav mr-auto\">\r\n              <li className=\"nav-item\">\r\n                <Link style={{ textDecoration: 'none' }} to= \"/WatchList\">\r\n                  <a className=\"nav-link\"><div className=\"wl\">WatchList <div className=\"watchlist-num\">{this.state.watchlist}</div></div></a>\r\n                </Link>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link\">Settings</a>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <Link to = \"/Statistics\">\r\n                <a className=\"nav-link\">Statistics</a>\r\n                </Link>\r\n              </li>\r\n            </ul>\r\n\r\n            <form className=\"container-fluid my-2 my-lg-0\">\r\n              <Link to=\"/FilmPage\">\r\n                <input\r\n                  className=\"form-control mr-sm-2\"\r\n                  onChange={this.searchCnangeHandler.bind(this)}\r\n                  type=\"text\"\r\n                  list=\"datalistOptions\"\r\n                  id=\"exampleDataList\"\r\n                  placeholder=\"Search\"\r\n                  style={{ cursor: \"pointer\" }}\r\n                  onClick={(event) => {\r\n                    if (this.changeLinkState()) event.preventDefault();\r\n                  }}\r\n                />\r\n              </Link>\r\n              <datalist id=\"datalistOptions\">{this.state.rows}</datalist>\r\n            </form>\r\n          </div>\r\n        </nav>\r\n\r\n        <div id=\"ourRoot\" className=\"d-flex justify-content-around\">\r\n          <div id=\"fl\" className=\"films-list\">\r\n            <Route exact path=\"/\">\r\n              <FilmList watchListincrement = {this.incrementWatchListNumber} />\r\n            </Route>\r\n\r\n            <Route path=\"/FilmPage\">\r\n              <FilmPage />\r\n            </Route>\r\n\r\n            <Route path=\"/WatchList\">\r\n             <Watchlist />\r\n            </Route>\r\n\r\n            <Route path=\"/Statistics\">\r\n             <Statistics />\r\n            </Route>\r\n          </div>\r\n        </div>\r\n\r\n        <footer className=\"bg-dark text-center text-lg-start\">\r\n          <div className=\"container p-4\">\r\n            <div className=\"row\">\r\n              <div className=\"col-lg-6 col-md-12 mb-4 mb-md-0\">\r\n                <h5 className=\"text-uppercase yellow-text\"> The Rolling Scopes School</h5>\r\n                <p>\r\n                  Бесплатный курс «JavaScript/Front-end» от сообщества The\r\n                  Rolling Scopes -{\" \"}\r\n                  <a\r\n                    className=\"footer__link\"\r\n                    target=\"_blank\"\r\n                    href=\"https://rs.school/js/\"\r\n                  >\r\n                    rs.school/js\r\n                  </a>\r\n                </p>\r\n              </div>\r\n\r\n              <div className=\"col-lg-3 col-md-6 mb-4 mb-md-0\">\r\n                <h5 className=\"text-uppercase\"></h5>\r\n                <div>\r\n                  <img className=\"footer__image\" src={rsschool}></img>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"col-lg-3 col-md-6 mb-4 mb-md-0\">\r\n                <h5 className=\"text-uppercase mb-0 yellow-text\">Developed by:</h5>\r\n\r\n                <ul className=\"list-unstyled\">\r\n                  <li>\r\n                    <a className=\"\" href=\"https://github.com/YuPashintseva\">\r\n                      YuPashintseva\r\n                    </a>\r\n                  </li>\r\n                  <li>\r\n                    <a className=\"\" href=\"https://github.com/anatkig\">\r\n                      anatkig\r\n                    </a>\r\n                  </li>\r\n                  <li>\r\n                    <a className=\"\" href=\"https://github.com/vegas-muffin\">\r\n                      vegas-muffin\r\n                    </a>\r\n                  </li>\r\n                </ul>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"text-center p-3\">\r\n            {\" \"}\r\n            &copy; 2021 Copyright{\" \"}\r\n            <a className=\"text-dark\" href=\"#\">\r\n              IMDb-clone\r\n            </a>\r\n          </div>\r\n        </footer>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\KiguradzeLeo\\Documents\\GitHub\\CloneWars\\rsclone\\src\\components\\WatchList.js",["67","68","69","70"],"import React from 'react';\r\nimport { Button, Modal, Container, Row, Col, Image } from 'react-bootstrap';\r\n\r\n\r\nclass Watchlist extends React.Component{\r\n    constructor() {\r\n        super();\r\n    }\r\n    render() {\r\n        let filmsList = JSON.parse(localStorage.getItem('films'));\r\n        if (filmsList) {\r\n            return (\r\n                <div id = \"fp\" className=\"container-fluid wrapperStyle\">\r\n                    <div className=\"top-menu-wrapper\">\r\n                        <div className=\"head-text\">Your Watchlist</div>\r\n                        <button className=\"back-button\" >Back</button>\r\n                    </div>\r\n                    <div>\r\n                    {filmsList.map(el => (\r\n                        <Row className=\"row-bottom-padding\">\r\n                            <Col xs={6} md={4}>\r\n                                {el[0] ? <Image className=\"poster-img-modal img-watchlist\" src={`https://image.tmdb.org/t/p/original/${el[0]}`} alt={el[0]} thumbnail />: null}\r\n                            </Col>\r\n                            <Col xs={12} md={8}>\r\n                                {el[3] ? <div><strong>Title: </strong> {el[3]}</div> : null}\r\n                                {el[1] ? <div><strong>Release date: </strong>  {el[1]}</div> : null}\r\n                                {el[2] ? <div><strong>Stars: </strong> {el[2]}</div> : null}\r\n                                {el[4] ? <div><strong>Overview: </strong> {el[4]}</div> : null}\r\n                            </Col>\r\n                        </Row>\r\n                        \r\n                    ))}\r\n                    </div>\r\n                </div>\r\n            )\r\n        } else {\r\n            return (<div id = \"fp\" className=\"container-fluid wrapperStyle\">\r\n                        <div className=\"head-text\">Your Watchlist</div>\r\n                        Nothing was found\r\n                    </div>);\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport default Watchlist;","C:\\Users\\KiguradzeLeo\\Documents\\GitHub\\CloneWars\\rsclone\\src\\components\\FilmPage.js",["71","72","73","74"],"import React from 'react';\r\n\r\nimport star from './assets/megastar.png';\r\nimport FilmList from './FilmList';\r\nimport { Helmet } from \"react-helmet\";\r\nimport CarouselMain from './CaurouselMain';\r\n\r\n\r\n class FilmPage extends React.Component{\r\n    constructor() {\r\n        super();\r\n        this.state = {video:\"\",dat:JSON.parse(sessionStorage.getItem(\"val\"))};\r\n    }\r\n    async componentDidMount(){\r\n     const response = await fetch(`https://api.themoviedb.org/3/movie/${this.state.dat.id}/videos?api_key=fb0fcc2d34caffc53da53d676fbf678a&language=en-US`);\r\n     const res = await response.json();\r\n     this.setState({ video: res.results[0]?res.results[0].key:''});\r\n     let val = JSON.parse(sessionStorage.getItem(\"val\"));\r\n     this.setState({dat: val});\r\n     \r\n    }\r\n\r\n    render(){\r\n       \r\n        return(\r\n            \r\n            <div id = \"fp\" className=\" container-fluid wrapperStyle\">\r\n               \r\n               <div id = \"upperBlock\" className=\"wrapper\">\r\n                 <div className=\"row\"></div>\r\n                 <div className=\"row\">\r\n\r\n                     <h2 className=\"col\">{this.state.dat.original_title}</h2>\r\n                    \r\n                     \r\n                     <h4 className=\"col-auto\">Average Vote: {this.state.dat.vote_average}\r\n                     <img src={star} ></img>\r\n                     </h4>\r\n                     \r\n                     \r\n                     <h4 className=\"col-auto\">Votes: {this.state.dat.vote_count}</h4>\r\n                \r\n               </div>\r\n               </div>\r\n               <div id = \"briefInfo\" className=\"wrapper\">\r\n                   <h5>Release Date: {this.state.dat.release_date}</h5>\r\n                   <div></div>\r\n                </div>\r\n\r\n               <div id = \"photoVideo\" className=\"row\" style={{padding:'1% 5% 1% 5%', margin:'0%', border:'0%'}}>\r\n                   \r\n               <img  width=\"36%\" height =\"auto\" src={`https://image.tmdb.org/t/p/original/${this.state.dat.poster_path}`} alt={this.state.dat.title} style={{ margin:'2%'}}/>\r\n               {this.state.video?(\r\n               <iframe  width=\"56%\" height=\"auto\" src={`https://www.youtube.com/embed/${this.state.video}`} style={{ margin:'2%'}}/>\r\n               ):(\r\n               <div style={{color:'white', margin:'0% 5% 5% 1%',maxWidth:'45%'}}>Sorry, there seems to be no video provided for this film. <hr/>The Universe wants you to watch it without spoilers, apparently.</div>\r\n               )}\r\n               </div>\r\n               <div style={{  margin: \"8px\"}}>\r\n               <h4 style={{  fontWeight: \"bolder\"}}>Overview:</h4>\r\n              <h5 > {this.state.dat.overview}</h5></div>\r\n             \r\n               <div id = \"videoCarousel\" className=\"wrapper\"></div>\r\n               <div id = \"photoCarousel\" className=\"wrapper\"></div>\r\n               <div id = \"cast\"></div>\r\n               <div className=\"head-text\">\r\n                Actors\r\n               </div>\r\n               <CarouselMain type={\"actors\"} filmId={this.state.dat.id} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default FilmPage;","C:\\Users\\KiguradzeLeo\\Documents\\GitHub\\CloneWars\\rsclone\\src\\components\\MovieRow.js",["75","76","77","78","79","80"],"import React from \"react\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\n\r\nclass MovieRow extends React.Component {\r\n  render() {\r\n    return (\r\n  \r\n   \r\n      <option className=\"search__item\" value={this.props.movie.title}>\r\n        {this.props.movie.overview}\r\n        \r\n      </option>\r\n    \r\n    \r\n      // <div className=\"search__item\" key={this.props.movie.id}>\r\n      //   <div className=\"search__item-image\"><img className=\"img\" alt=\"poster\" src={this.props.movie.poster_path} /></div>\r\n      //   <div className=\"search__item-about\">\r\n      //     <h3>{this.props.movie.title}</h3>\r\n      //   <p>{this.props.movie.overview}</p>\r\n      //   </div>\r\n      // </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MovieRow;\r\n","C:\\Users\\KiguradzeLeo\\Documents\\GitHub\\CloneWars\\rsclone\\src\\components\\FilmList.js",["81","82","83","84","85"],"import React, { createRef } from 'react';\r\nimport Carousel from \"react-multi-carousel\";\r\nimport ModalWindow from './ModalWindow';\r\nimport CaurouselMain from './CaurouselMain';\r\nimport 'react-multi-carousel/lib/styles.css';\r\nimport star from './assets/star.png'\r\nimport play from './assets/play.png'\r\nimport info from './assets/info-grey.png';\r\nimport { Helmet } from \"react-helmet\";\r\n\r\n\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Link\r\n  } from \"react-router-dom\";\r\n\r\n\r\nconst responsive = {\r\n    superLargeDesktop: {\r\n      breakpoint: { max: 4000, min: 3000 },\r\n      items: 5\r\n    },\r\n    desktop: {\r\n      breakpoint: { max: 3000, min: 1024 },\r\n      items: 5\r\n    },\r\n    tablet: {\r\n      breakpoint: { max: 1024, min: 464 },\r\n      items: 3\r\n    },\r\n    mobile: {\r\n      breakpoint: { max: 464, min: 0 },\r\n      items: 1\r\n    }\r\n  };\r\n\r\nclass FilmList extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {data: [], dataMain: [], value: \"\", showHide: false, currFilmInfo: {}, showAlert: false};\r\n        this.handleModalShowHide = this.handleModalShowHide.bind(this);\r\n        this.handleModalShowHide2 = this.handleModalShowHide2.bind(this);\r\n\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const response = await fetch('https://api.themoviedb.org/3/movie/popular?api_key=fb0fcc2d34caffc53da53d676fbf678a&language=en-US&page=1');\r\n        const json = await response.json();\r\n        this.setState({ data: json});\r\n        sessionStorage.setItem('fullInf',JSON.stringify(json.results))\r\n    }\r\n\r\n    returnState(){\r\n        return this.state;\r\n    }\r\n\r\n    handleModalShowHide(film, isneedAlert) {\r\n        this.setState({ showHide: !this.state.showHide });\r\n        this.setState({ showAlert: isneedAlert });\r\n        this.setState({ currFilmInfo: film });\r\n    }\r\n\r\n    handleModalShowHide2() {\r\n        this.setState({ showHide: !this.state.showHide });\r\n    }\r\n\r\n\r\n    render() {\r\n        let mod = '';\r\n        if (this.state.data.results) {\r\n            if (this.state.showHide) {\r\n                mod = <ModalWindow handleModalShowHide = {this.handleModalShowHide2} filmInfo = {this.state.currFilmInfo} toWatchList={this.state.showAlert} />\r\n            }\r\n            return (\r\n                <div>\r\n                <CaurouselMain type={\"films\"} />\r\n                <div className=\"head-text\">\r\n                    What to watch\r\n                </div>\r\n                {mod}\r\n                <Carousel\r\n                swipeable={false}\r\n                draggable={false}\r\n                showDots={false}\r\n                responsive={responsive}\r\n                ssr={true}\r\n                infinite={false}\r\n                autoPlaySpeed={1000}\r\n                keyBoardControl={true}\r\n                customTransition=\"all .5\"\r\n                transitionDuration={1000}\r\n                containerClass=\"carousel-container\"\r\n                removeArrowOnDeviceType={[\"tablet\", \"mobile\"]}\r\n                dotListClass=\"custom-dot-list-style\"\r\n                itemClass=\"carousel-item-padding\"\r\n                centerMode={false}\r\n                slidesToSlide={3}\r\n            >\r\n            \r\n            {this.state.data.results.map(el => (\r\n                \r\n                <div element={el.id} key ={el.id}>\r\n                    <div className=\"films-list-img App-link\" >\r\n                      <Link style={{ textDecoration: 'none', color: 'white' }} to= \"/FilmPage\" > \r\n                            <img className=\"poster-img\" onMouseOver={()=> {sessionStorage.removeItem(\"val\");sessionStorage.setItem(\"val\",JSON.stringify(el))}}  src={`https://image.tmdb.org/t/p/original/${el.poster_path}`} alt={el.title}/>\r\n                            </Link>    \r\n                       \r\n                        <div className=\"bottom-content-wrapper\">\r\n                            <div className=\"rating\">\r\n                                <div><img src={star} alt=\"star icon\" /></div>\r\n                                <div className=\"vote_average\">{el.vote_average}</div>\r\n                            </div>\r\n                           <Link style={{ textDecoration: 'none', color: 'white' }} to= \"/FilmPage\">\r\n                                <div className=\"film-title\" onMouseOver={()=>{ sessionStorage.removeItem(\"val\");sessionStorage.setItem(\"val\",JSON.stringify(el))}}>{el.title}</div>\r\n                            </Link> \r\n                            \r\n                            <button type=\"button\" className=\"add-to-watchlist-btn\" onClick = {() => {this.handleModalShowHide(el, true); this.props.watchListincrement(el.id); }}>+ Watchlist</button>\r\n                            <div className=\"additional-info\">\r\n                                <div className=\"trailer\">\r\n                                    <img src={play} alt=\"play button\" className=\"play-button\"/>  Trailer\r\n                                </div>\r\n                                <div className=\"info-button-wrapper\">\r\n                                    <img src={info} alt=\"info button\" className=\"info-button\" onClick = {() => this.handleModalShowHide(el, false)}/> \r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                   \r\n                </div>\r\n            ))};\r\n                \r\n            </Carousel>\r\n            <div className=\"head-text\">\r\n                Popular people\r\n            </div>\r\n            <CaurouselMain type={\"people\"} />\r\n            </div>\r\n            );\r\n        } else {\r\n            return (\r\n                <div>Wait...</div>\r\n            );\r\n        }\r\n    \r\n    }\r\n\r\n}\r\n\r\n\r\nexport default FilmList;","C:\\Users\\KiguradzeLeo\\Documents\\GitHub\\CloneWars\\rsclone\\src\\components\\CaurouselMain.js",["86","87","88","89"],"import React from 'react';\r\nimport Carousel from \"react-multi-carousel\";\r\nimport \"react-multi-carousel/lib/styles.css\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link\r\n} from \"react-router-dom\";\r\n\r\nclass CarouselMain extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {dataMain: [], type: \"films\"}\r\n        console.log(\"herehere\", this.props);\r\n\r\n    }\r\n\r\n    async componentDidMount() {\r\n      let responseMain = await fetch('https://api.themoviedb.org/3/movie/popular?api_key=fb0fcc2d34caffc53da53d676fbf678a&language=en-US&page=2');\r\n      if (this.props.type) {\r\n        if (this.props.type === 'films') {\r\n          responseMain = await fetch('https://api.themoviedb.org/3/movie/popular?api_key=fb0fcc2d34caffc53da53d676fbf678a&language=en-US&page=2');\r\n        } else if (this.props.type === 'people') {\r\n          responseMain = await fetch('https://api.themoviedb.org/3/person/popular?api_key=fb0fcc2d34caffc53da53d676fbf678a&language=en-US&page=2');\r\n        } else {\r\n          responseMain = await fetch('https://api.themoviedb.org/3/movie/464052/credits?api_key=fb0fcc2d34caffc53da53d676fbf678a&language=en-US');\r\n          if (this.props.filmId) {\r\n            responseMain = await fetch(`https://api.themoviedb.org/3/movie/${this.props.filmId}/credits?api_key=fb0fcc2d34caffc53da53d676fbf678a&language=en-US`);\r\n          }\r\n        }\r\n        this.setState({ type: this.props.type })\r\n       }\r\n      const jsonMain = await responseMain.json();\r\n      this.setState({ dataMain: jsonMain});\r\n      console.log(\"test111:\",this.state.dataMain.cast)\r\n  }\r\n    render() {\r\n\r\n       if (this.state.dataMain.results){\r\n          if (this.state.type === \"films\") {\r\n            const responsive = {\r\n              superLargeDesktop: {\r\n                breakpoint: { max: 4000, min: 3000 },\r\n                items: 5\r\n              },\r\n              desktop: {\r\n                breakpoint: { max: 3000, min: 1024 },\r\n                items: 1\r\n              },\r\n              tablet: {\r\n                breakpoint: { max: 1024, min: 464 },\r\n                items: 1\r\n              },\r\n              mobile: {\r\n                breakpoint: { max: 464, min: 0 },\r\n                items: 1\r\n              }\r\n            };\r\n            return(\r\n              <div className=\"main-carousel-wrapper\">\r\n                <Carousel                 \r\n                  swipeable={false}\r\n                  draggable={false}\r\n                  showDots={false}\r\n                  responsive={responsive}\r\n                  ssr={true}\r\n                  infinite={false}\r\n                  autoPlaySpeed={1000}\r\n                  keyBoardControl={true}\r\n                  customTransition=\"all .5\"\r\n                  transitionDuration={1000}\r\n                  containerClass=\"carousel-container\"\r\n                  removeArrowOnDeviceType={[\"tablet\", \"mobile\"]}\r\n                  dotListClass=\"custom-dot-list-style\"\r\n                  itemClass=\"carousel-item-padding\"\r\n                  centerMode={false}\r\n                  slidesToSlide={3}\r\n                >\r\n                {this.state.dataMain.results.map(el => (\r\n                    <div className=\"main-carousel-img\">\r\n                      <Link to='/FilmPage'>\r\n                      <img className=\"poster-img-main\" onMouseOver={()=> {sessionStorage.removeItem(\"val\");sessionStorage.setItem(\"val\",JSON.stringify(el))}}  src={`https://image.tmdb.org/t/p/original/${el.backdrop_path}`} alt={el.title}/>\r\n                      </Link>\r\n                      <h2><span>{el.title}</span></h2>\r\n                    </div>\r\n                ))};\r\n                </Carousel>\r\n              </div>\r\n            );\r\n          } else if (this.state.type === \"people\") {\r\n            const responsive = {\r\n              superLargeDesktop: {\r\n                breakpoint: { max: 4000, min: 3000 },\r\n                items: 5\r\n              },\r\n              desktop: {\r\n                breakpoint: { max: 3000, min: 1024 },\r\n                items: 5\r\n              },\r\n              tablet: {\r\n                breakpoint: { max: 1024, min: 464 },\r\n                items: 4\r\n              },\r\n              mobile: {\r\n                breakpoint: { max: 464, min: 0 },\r\n                items: 2\r\n              }\r\n            };\r\n            return(\r\n              <div className=\"main-carousel-wrapper\">\r\n                <Carousel                 \r\n                  swipeable={false}\r\n                  draggable={false}\r\n                  showDots={false}\r\n                  responsive={responsive}\r\n                  ssr={true}\r\n                  infinite={false}\r\n                  autoPlaySpeed={1000}\r\n                  keyBoardControl={true}\r\n                  customTransition=\"all .5\"\r\n                  transitionDuration={1000}\r\n                  containerClass=\"carousel-container\"\r\n                  removeArrowOnDeviceType={[\"tablet\", \"mobile\"]}\r\n                  dotListClass=\"custom-dot-list-style\"\r\n                  itemClass=\"carousel-item-padding\"\r\n                  centerMode={false}\r\n                  slidesToSlide={3}\r\n                >\r\n                {this.state.dataMain.results.map(el => (\r\n                    <div className=\"main-carousel-img\">\r\n                      <Link to='/FilmPage'>\r\n                      <img className=\"poster-img-main rounded-img\" onMouseOver={()=> {sessionStorage.removeItem(\"val\");sessionStorage.setItem(\"val\",JSON.stringify(el))}} src={`https://image.tmdb.org/t/p/original/${el.profile_path}`} alt={el.profile_path}/>\r\n                      </Link>\r\n                      <h2 className=\"star-name-carousel\"><div>{el.name}</div></h2>\r\n                    </div>\r\n                ))};\r\n                </Carousel>\r\n              </div>\r\n            );\r\n          }\r\n          \r\n        } else if ((this.state.type === \"actors\") && (this.state.dataMain.cast)) {\r\n          const responsive = {\r\n            superLargeDesktop: {\r\n              breakpoint: { max: 4000, min: 3000 },\r\n              items: 5\r\n            },\r\n            desktop: {\r\n              breakpoint: { max: 3000, min: 1024 },\r\n              items: 5\r\n            },\r\n            tablet: {\r\n              breakpoint: { max: 1024, min: 464 },\r\n              items: 4\r\n            },\r\n            mobile: {\r\n              breakpoint: { max: 464, min: 0 },\r\n              items: 2\r\n            }\r\n          };\r\n          return(\r\n            <div className=\"main-carousel-wrapper\">\r\n              <Carousel                 \r\n                swipeable={false}\r\n                draggable={false}\r\n                showDots={false}\r\n                responsive={responsive}\r\n                ssr={true}\r\n                infinite={false}\r\n                autoPlaySpeed={1000}\r\n                keyBoardControl={true}\r\n                customTransition=\"all .5\"\r\n                transitionDuration={1000}\r\n                containerClass=\"carousel-container\"\r\n                removeArrowOnDeviceType={[\"tablet\", \"mobile\"]}\r\n                dotListClass=\"custom-dot-list-style\"\r\n                itemClass=\"carousel-item-padding\"\r\n                centerMode={false}\r\n                slidesToSlide={3}\r\n              >\r\n              {this.state.dataMain.cast.map(el => (\r\n                <div>\r\n                  <div className=\"main-carousel-img\">\r\n                    {el.profile_path && <Link to='/FilmPage'><img className=\"poster-img-main rounded-img\" onMouseOver={()=> {sessionStorage.removeItem(\"val\");sessionStorage.setItem(\"val\",JSON.stringify(el))}} src={`https://image.tmdb.org/t/p/original/${el.profile_path}`} alt={el.profile_path}/></Link>}\r\n                    <div><h2 className=\"star-name-carousel\"><div>{el.name}</div></h2></div>\r\n                  </div>\r\n                </div>\r\n              ))};\r\n              </Carousel>\r\n            </div>\r\n          );\r\n        }\r\n        \r\n        else {\r\n          return (<div>Wait a little</div>)\r\n        }\r\n    }\r\n}\r\n\r\nexport default CarouselMain;","C:\\Users\\KiguradzeLeo\\Documents\\GitHub\\CloneWars\\rsclone\\src\\components\\ModalWindow.js",["90"],"import React from 'react'\r\nimport { Button, Modal, Container, Row, Col, Image } from 'react-bootstrap'\r\nimport { Helmet } from \"react-helmet\";\r\n\r\nclass ModalWindow extends React.Component{\r\n    render(){\r\n        let msgText = 'Successfully added to WatchList';\r\n        if (this.props.toWatchList) {\r\n            if (localStorage.getItem('films')) {\r\n                let arr = JSON.parse(localStorage.getItem('films'));\r\n                if (! arr.includes(this.props.filmInfo.id)) {\r\n                    arr.push(this.props.filmInfo.id);\r\n                    let infoArr = [];\r\n                    infoArr.push(this.props.filmInfo.poster_path);\r\n                    infoArr.push(this.props.filmInfo.release_date);\r\n                    infoArr.push(this.props.filmInfo.vote_average);\r\n                    infoArr.push(this.props.filmInfo.title);\r\n                    infoArr.push(this.props.filmInfo.overview);\r\n                    arr.push(infoArr);\r\n                } else {\r\n                    msgText = 'It is already in Watchlist';\r\n                }\r\n                localStorage.setItem('films', JSON.stringify(arr));\r\n            } else { \r\n                console.log(\"filmInfo\",this.props.filmInfo);\r\n                localStorage.setItem('films', JSON.stringify([this.props.filmInfo.id, [this.props.filmInfo.poster_path,this.props.filmInfo.release_date, this.props.filmInfo.vote_average, this.props.filmInfo.title, this.props.filmInfo.overview]]));\r\n            }\r\n            return(\r\n                <div>\r\n                    <Modal className=\"main-modal\" show={true} size=\"lg\" aria-labelledby=\"contained-modal-title-vcenter\" centered>\r\n                        <Modal.Header closeButton onClick={this.props.handleModalShowHide}>\r\n                         <Modal.Title id=\"contained-modal-title-vcenter\">{this.props.filmInfo.original_title}</Modal.Title>\r\n                        </Modal.Header>\r\n                        <Modal.Body className=\"show-grid\">\r\n                        <Container>\r\n                            <Row>\r\n                               {msgText}\r\n                            </Row>\r\n                        </Container>\r\n                        \r\n                        </Modal.Body>\r\n                        <Modal.Footer>\r\n                        <Button variant=\"secondary\" onClick={this.props.handleModalShowHide}>\r\n                            Close\r\n                        </Button>\r\n                        </Modal.Footer>\r\n                    </Modal>\r\n                </div>\r\n            )\r\n        } else {\r\n            return (\r\n                <div>\r\n                    <Modal className=\"main-modal\" show={true} size=\"lg\" aria-labelledby=\"contained-modal-title-vcenter\" centered>\r\n                        <Modal.Header closeButton onClick={this.props.handleModalShowHide}>\r\n                        <Modal.Title id=\"contained-modal-title-vcenter\">{this.props.filmInfo.original_title}</Modal.Title>\r\n                        </Modal.Header>\r\n                        <Modal.Body className=\"show-grid\">\r\n                        <Container>\r\n                            <Row>\r\n                                <Col xs={6} md={4}>\r\n                                    <Image className=\"poster-img-modal\" src={`https://image.tmdb.org/t/p/original/${this.props.filmInfo.poster_path}`} alt={this.props.filmInfo.title} thumbnail />\r\n                                </Col>\r\n                                <Col xs={12} md={8}>\r\n                                <strong>Overview: </strong>  {this.props.filmInfo.overview} <br/><br/>\r\n                                <strong>Release date: </strong> {this.props.filmInfo.release_date}\r\n                                </Col>\r\n                            </Row>\r\n                        </Container>\r\n                        \r\n                        </Modal.Body>\r\n                        <Modal.Footer>\r\n                        <Button variant=\"secondary\" onClick={this.props.handleModalShowHide}>\r\n                            Close\r\n                        </Button>\r\n                        </Modal.Footer>\r\n                    </Modal>\r\n                </div>\r\n            );\r\n        }\r\n\r\n    }\r\n    \r\n}\r\n\r\nexport default ModalWindow;","C:\\Users\\KiguradzeLeo\\Documents\\GitHub\\CloneWars\\rsclone\\src\\components\\Statistics.js",["91"],{"ruleId":"92","severity":1,"message":"93","line":5,"column":10,"nodeType":"94","messageId":"95","endLine":5,"endColumn":16},{"ruleId":"92","severity":1,"message":"96","line":6,"column":35,"nodeType":"94","messageId":"95","endLine":6,"endColumn":41},{"ruleId":"92","severity":1,"message":"97","line":6,"column":43,"nodeType":"94","messageId":"95","endLine":6,"endColumn":48},{"ruleId":"92","severity":1,"message":"98","line":6,"column":50,"nodeType":"94","messageId":"95","endLine":6,"endColumn":54},{"ruleId":"99","replacedBy":"100"},{"ruleId":"101","replacedBy":"102"},{"ruleId":"92","severity":1,"message":"103","line":1,"column":8,"nodeType":"94","messageId":"95","endLine":1,"endColumn":16},{"ruleId":"92","severity":1,"message":"104","line":10,"column":27,"nodeType":"94","messageId":"95","endLine":10,"endColumn":33},{"ruleId":"92","severity":1,"message":"96","line":10,"column":35,"nodeType":"94","messageId":"95","endLine":10,"endColumn":41},{"ruleId":"92","severity":1,"message":"93","line":12,"column":10,"nodeType":"94","messageId":"95","endLine":12,"endColumn":16},{"ruleId":"92","severity":1,"message":"105","line":13,"column":10,"nodeType":"94","messageId":"95","endLine":13,"endColumn":17},{"ruleId":"106","severity":1,"message":"107","line":126,"column":11,"nodeType":"108","endLine":126,"endColumn":39},{"ruleId":"109","severity":1,"message":"110","line":127,"column":24,"nodeType":"108","endLine":127,"endColumn":72},{"ruleId":"106","severity":1,"message":"107","line":142,"column":19,"nodeType":"108","endLine":142,"endColumn":43},{"ruleId":"106","severity":1,"message":"107","line":146,"column":17,"nodeType":"108","endLine":146,"endColumn":41},{"ruleId":"106","severity":1,"message":"107","line":150,"column":17,"nodeType":"108","endLine":150,"endColumn":41},{"ruleId":"111","severity":1,"message":"112","line":203,"column":19,"nodeType":"108","endLine":207,"endColumn":20},{"ruleId":"113","severity":1,"message":"114","line":214,"column":17,"nodeType":"108","endLine":214,"endColumn":48},{"ruleId":"109","severity":1,"message":"110","line":216,"column":19,"nodeType":"108","endLine":216,"endColumn":65},{"ruleId":"106","severity":1,"message":"115","line":247,"column":13,"nodeType":"108","endLine":247,"endColumn":47},{"ruleId":"92","severity":1,"message":"116","line":2,"column":10,"nodeType":"94","messageId":"95","endLine":2,"endColumn":16},{"ruleId":"92","severity":1,"message":"117","line":2,"column":18,"nodeType":"94","messageId":"95","endLine":2,"endColumn":23},{"ruleId":"92","severity":1,"message":"118","line":2,"column":25,"nodeType":"94","messageId":"95","endLine":2,"endColumn":34},{"ruleId":"119","severity":1,"message":"120","line":6,"column":5,"nodeType":"121","messageId":"122","endLine":8,"endColumn":6},{"ruleId":"92","severity":1,"message":"123","line":4,"column":8,"nodeType":"94","messageId":"95","endLine":4,"endColumn":16},{"ruleId":"92","severity":1,"message":"93","line":5,"column":10,"nodeType":"94","messageId":"95","endLine":5,"endColumn":16},{"ruleId":"109","severity":1,"message":"110","line":37,"column":22,"nodeType":"108","endLine":37,"endColumn":39},{"ruleId":"124","severity":1,"message":"125","line":54,"column":16,"nodeType":"108","endLine":54,"endColumn":133},{"ruleId":"92","severity":1,"message":"93","line":2,"column":10,"nodeType":"94","messageId":"95","endLine":2,"endColumn":16},{"ruleId":"92","severity":1,"message":"105","line":3,"column":10,"nodeType":"94","messageId":"95","endLine":3,"endColumn":17},{"ruleId":"92","severity":1,"message":"104","line":4,"column":27,"nodeType":"94","messageId":"95","endLine":4,"endColumn":33},{"ruleId":"92","severity":1,"message":"96","line":4,"column":35,"nodeType":"94","messageId":"95","endLine":4,"endColumn":41},{"ruleId":"92","severity":1,"message":"97","line":4,"column":43,"nodeType":"94","messageId":"95","endLine":4,"endColumn":48},{"ruleId":"92","severity":1,"message":"98","line":4,"column":50,"nodeType":"94","messageId":"95","endLine":4,"endColumn":54},{"ruleId":"92","severity":1,"message":"126","line":1,"column":17,"nodeType":"94","messageId":"95","endLine":1,"endColumn":26},{"ruleId":"92","severity":1,"message":"93","line":9,"column":10,"nodeType":"94","messageId":"95","endLine":9,"endColumn":16},{"ruleId":"92","severity":1,"message":"104","line":13,"column":22,"nodeType":"94","messageId":"95","endLine":13,"endColumn":28},{"ruleId":"92","severity":1,"message":"96","line":14,"column":5,"nodeType":"94","messageId":"95","endLine":14,"endColumn":11},{"ruleId":"92","severity":1,"message":"97","line":15,"column":5,"nodeType":"94","messageId":"95","endLine":15,"endColumn":10},{"ruleId":"92","severity":1,"message":"93","line":4,"column":10,"nodeType":"94","messageId":"95","endLine":4,"endColumn":16},{"ruleId":"92","severity":1,"message":"104","line":6,"column":20,"nodeType":"94","messageId":"95","endLine":6,"endColumn":26},{"ruleId":"92","severity":1,"message":"96","line":7,"column":3,"nodeType":"94","messageId":"95","endLine":7,"endColumn":9},{"ruleId":"92","severity":1,"message":"97","line":8,"column":3,"nodeType":"94","messageId":"95","endLine":8,"endColumn":8},{"ruleId":"92","severity":1,"message":"93","line":3,"column":10,"nodeType":"94","messageId":"95","endLine":3,"endColumn":16},{"ruleId":"119","severity":1,"message":"120","line":5,"column":5,"nodeType":"121","messageId":"122","endLine":7,"endColumn":6},"no-unused-vars","'Helmet' is defined but never used.","Identifier","unusedVar","'Switch' is defined but never used.","'Route' is defined but never used.","'Link' is defined but never used.","no-native-reassign",["127"],"no-negated-in-lhs",["128"],"'ReactDOM' is defined but never used.","'Router' is defined but never used.","'NavLink' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'Button' is defined but never used.","'Modal' is defined but never used.","'Container' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'FilmList' is defined but never used.","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","'createRef' is defined but never used.","no-global-assign","no-unsafe-negation"]