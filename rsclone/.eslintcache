[{"C:\\Users\\KiguradzeLeo\\Documents\\GitHub\\CloneWars\\rsclone\\src\\index.js":"1","C:\\Users\\KiguradzeLeo\\Documents\\GitHub\\CloneWars\\rsclone\\src\\App.js":"2","C:\\Users\\KiguradzeLeo\\Documents\\GitHub\\CloneWars\\rsclone\\src\\components\\FilmPage.js":"3","C:\\Users\\KiguradzeLeo\\Documents\\GitHub\\CloneWars\\rsclone\\src\\components\\FilmList.js":"4","C:\\Users\\KiguradzeLeo\\Documents\\GitHub\\CloneWars\\rsclone\\src\\components\\MovieRow.js":"5","C:\\Users\\KiguradzeLeo\\Documents\\GitHub\\CloneWars\\rsclone\\src\\components\\ModalWindow.js":"6","C:\\Users\\KiguradzeLeo\\Documents\\GitHub\\CloneWars\\rsclone\\src\\components\\CaurouselMain.js":"7"},{"size":677,"mtime":1610879117319,"results":"8","hashOfConfig":"9"},{"size":6255,"mtime":1610903102214,"results":"10","hashOfConfig":"9"},{"size":2920,"mtime":1610894963533,"results":"11","hashOfConfig":"9"},{"size":5323,"mtime":1610894861871,"results":"12","hashOfConfig":"9"},{"size":841,"mtime":1610884804913,"results":"13","hashOfConfig":"9"},{"size":1819,"mtime":1610863561952,"results":"14","hashOfConfig":"9"},{"size":2519,"mtime":1610863551319,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1oj9p7d",{"filePath":"18","messages":"19","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"20","messages":"21","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"23"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"23"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"23"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"23"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"23"},"C:\\Users\\KiguradzeLeo\\Documents\\GitHub\\CloneWars\\rsclone\\src\\index.js",["36","37","38","39"],"C:\\Users\\KiguradzeLeo\\Documents\\GitHub\\CloneWars\\rsclone\\src\\App.js",["40","41","42","43","44","45","46","47","48","49","50","51"],"C:\\Users\\KiguradzeLeo\\Documents\\GitHub\\CloneWars\\rsclone\\src\\components\\FilmPage.js",["52","53","54","55"],"import React from 'react';\r\n\r\nimport star from './assets/megastar.png';\r\nimport FilmList from './FilmList';\r\nimport { Helmet } from \"react-helmet\";\r\n\r\n\r\n class FilmPage extends React.Component{\r\n    constructor() {\r\n        super();\r\n        this.state = {video:\"\",dat:JSON.parse(sessionStorage.getItem(\"val\"))};\r\n     \r\n        //this.data = props.value;\r\n    }\r\n    async componentDidMount(){\r\n     const response = await fetch(`https://api.themoviedb.org/3/movie/${this.state.dat.id}/videos?api_key=fb0fcc2d34caffc53da53d676fbf678a&language=en-US`);\r\n     const res = await response.json();\r\n     this.setState({ video: res.results[0]?res.results[0].key:''});\r\n     this.setState({dat: JSON.parse(sessionStorage.getItem(\"val\"))});\r\n     \r\n    }\r\n\r\n    render(){\r\n       \r\n        return(\r\n            \r\n            <div id = \"fp\" className=\" container-fluid wrapper wrapperStyle\">\r\n               \r\n               <div id = \"upperBlock\" className=\"wrapper\">\r\n                 <div className=\"row\"></div>\r\n                 <div className=\"row\">\r\n\r\n                     <h2 className=\"col\">{this.state.dat.original_title}</h2>\r\n                    \r\n                     \r\n                     <h4 className=\"col-auto\">Average Vote: {this.state.dat.vote_average}\r\n                     <img src={star} ></img>\r\n                     </h4>\r\n                     \r\n                     \r\n                     <h4 className=\"col-auto\">Votes: {this.state.dat.vote_count}</h4>\r\n                \r\n               </div>\r\n               </div>\r\n               <div id = \"briefInfo\" className=\"wrapper\">\r\n                   <h5>Release Date: {this.state.dat.release_date}</h5>\r\n                   <div></div>\r\n                </div>\r\n\r\n               <div id = \"photoVideo\" className=\"row\" style={{padding:'1% 5% 1% 5%', margin:'0%', border:'0%'}}>\r\n                   \r\n               <img  width=\"36%\" height =\"auto\" src={`https://image.tmdb.org/t/p/original/${this.state.dat.poster_path}`} alt={this.state.dat.title} style={{ margin:'2%'}}/>\r\n               {this.state.video?(\r\n               <iframe  width=\"56%\" height=\"auto\" src={`https://www.youtube.com/embed/${this.state.video}`} style={{ margin:'2%'}}/>\r\n               ):(\r\n               <div style={{color:'white', margin:'0% 5% 5% 1%',maxWidth:'45%'}}>Sorry, there seems to be no video provided for this film. <hr/>The Universe wants you to watch it without spoilers, apparently.</div>\r\n               )}\r\n               </div>\r\n               <div style={{  margin: \"8px\"}}>\r\n               <h4 style={{  fontWeight: \"bolder\"}}>Overview:</h4>\r\n              <h5 > {this.state.dat.overview}</h5></div>\r\n             \r\n               <div id = \"videoCarousel\" className=\"wrapper\"></div>\r\n               <div id = \"photoCarousel\" className=\"wrapper\"></div>\r\n               <div id = \"cast\"></div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default FilmPage;",["56","57"],"C:\\Users\\KiguradzeLeo\\Documents\\GitHub\\CloneWars\\rsclone\\src\\components\\FilmList.js",["58","59","60","61","62"],"import React, { createRef } from 'react';\r\nimport Carousel from \"react-multi-carousel\";\r\nimport ModalWindow from './ModalWindow';\r\nimport CaurouselMain from './CaurouselMain';\r\nimport 'react-multi-carousel/lib/styles.css';\r\nimport star from './assets/star.png'\r\nimport play from './assets/play.png'\r\nimport info from './assets/info-grey.png';\r\nimport { Helmet } from \"react-helmet\";\r\n\r\n\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Link\r\n  } from \"react-router-dom\";\r\n\r\n\r\nconst responsive = {\r\n    superLargeDesktop: {\r\n      breakpoint: { max: 4000, min: 3000 },\r\n      items: 5\r\n    },\r\n    desktop: {\r\n      breakpoint: { max: 3000, min: 1024 },\r\n      items: 5\r\n    },\r\n    tablet: {\r\n      breakpoint: { max: 1024, min: 464 },\r\n      items: 3\r\n    },\r\n    mobile: {\r\n      breakpoint: { max: 464, min: 0 },\r\n      items: 1\r\n    }\r\n  };\r\n\r\nclass FilmList extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {data: [], dataMain: [], value: \"\", showHide: false, currFilmInfo: {}};\r\n        this.handleModalShowHide = this.handleModalShowHide.bind(this);\r\n        this.handleModalShowHide2 = this.handleModalShowHide2.bind(this);\r\n\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const response = await fetch('https://api.themoviedb.org/3/movie/popular?api_key=fb0fcc2d34caffc53da53d676fbf678a&language=en-US&page=1');\r\n        const json = await response.json();\r\n        this.setState({ data: json});\r\n        sessionStorage.setItem('fullInf',JSON.stringify(json.results))\r\n    }\r\n\r\n    returnState(){\r\n        return this.state;\r\n    }\r\n\r\n    handleModalShowHide(film) {\r\n        this.setState({ showHide: !this.state.showHide });\r\n        this.setState({ currFilmInfo: film });\r\n    }\r\n\r\n    handleModalShowHide2() {\r\n        this.setState({ showHide: !this.state.showHide });\r\n    }\r\n\r\n\r\n    render() {\r\n        let mod = '';\r\n        if (this.state.data.results) {\r\n            if (this.state.showHide) {\r\n                mod = <ModalWindow handleModalShowHide = {this.handleModalShowHide2} filmInfo = {this.state.currFilmInfo} />\r\n            }\r\n            return (\r\n                <div>\r\n                <CaurouselMain />\r\n                <div className=\"head-text\">\r\n                    What to watch\r\n                </div>\r\n                {mod}\r\n                <Carousel\r\n                swipeable={false}\r\n                draggable={false}\r\n                showDots={false}\r\n                responsive={responsive}\r\n                ssr={true}\r\n                infinite={false}\r\n                autoPlaySpeed={1000}\r\n                keyBoardControl={true}\r\n                customTransition=\"all .5\"\r\n                transitionDuration={1000}\r\n                containerClass=\"carousel-container\"\r\n                removeArrowOnDeviceType={[\"tablet\", \"mobile\"]}\r\n                dotListClass=\"custom-dot-list-style\"\r\n                itemClass=\"carousel-item-padding\"\r\n                centerMode={false}\r\n                slidesToSlide={3}\r\n            >\r\n            \r\n            {this.state.data.results.map(el => (\r\n                \r\n                <div element={el.id} key ={el.id}>\r\n                    <div className=\"films-list-img App-link\" >\r\n                      <Link style={{ textDecoration: 'none', color: 'white' }} to= \"/FilmPage\" > \r\n                            <img className=\"poster-img\" onMouseOver={()=> {sessionStorage.removeItem(\"val\");sessionStorage.setItem(\"val\",JSON.stringify(el))}}  src={`https://image.tmdb.org/t/p/original/${el.poster_path}`} alt={el.title}/>\r\n                            </Link>    \r\n                       \r\n                        <div className=\"bottom-content-wrapper\">\r\n                            <div className=\"rating\">\r\n                                <div><img src={star} alt=\"star icon\" /></div>\r\n                                <div className=\"vote_average\">{el.vote_average}</div>\r\n                            </div>\r\n                           <Link style={{ textDecoration: 'none', color: 'white' }} to= \"/FilmPage\">\r\n                                <div className=\"film-title\" onMouseOver={()=>{ sessionStorage.removeItem(\"val\");sessionStorage.setItem(\"val\",JSON.stringify(el))}}>{el.title}</div>\r\n                            </Link>\r\n                            \r\n                            <button type=\"button\" className=\"add-to-watchlist-btn\">+ Watchlist</button>\r\n                            <div className=\"additional-info\">\r\n                                <div className=\"trailer\">\r\n                                    <img src={play} alt=\"play button\" className=\"play-button\"/>  Trailer\r\n                                </div>\r\n                                <div className=\"info-button-wrapper\">\r\n                                    <img src={info} alt=\"info button\" className=\"info-button\" onClick = {() => this.handleModalShowHide(el)}/> \r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                   \r\n                </div>\r\n            ))};\r\n                \r\n            </Carousel>\r\n            </div>\r\n            );\r\n        } else {\r\n            return (\r\n                <div>Wait...</div>\r\n            );\r\n        }\r\n    \r\n    }\r\n\r\n}\r\n\r\n\r\nexport default FilmList;","C:\\Users\\KiguradzeLeo\\Documents\\GitHub\\CloneWars\\rsclone\\src\\components\\MovieRow.js",["63","64","65","66","67","68"],"import React from \"react\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\n\r\nclass MovieRow extends React.Component {\r\n  render() {\r\n    return (\r\n  \r\n   \r\n      <option className=\"search__item\" value={this.props.movie.title}>\r\n        {this.props.movie.overview}\r\n        \r\n      </option>\r\n    \r\n    \r\n      // <div className=\"search__item\" key={this.props.movie.id}>\r\n      //   <div className=\"search__item-image\"><img className=\"img\" alt=\"poster\" src={this.props.movie.poster_path} /></div>\r\n      //   <div className=\"search__item-about\">\r\n      //     <h3>{this.props.movie.title}</h3>\r\n      //   <p>{this.props.movie.overview}</p>\r\n      //   </div>\r\n      // </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MovieRow;\r\n","C:\\Users\\KiguradzeLeo\\Documents\\GitHub\\CloneWars\\rsclone\\src\\components\\ModalWindow.js",["69","70","71"],"import React from 'react'\r\nimport { Button, Modal, Container, Row, Col, Image } from 'react-bootstrap'\r\nimport { Helmet } from \"react-helmet\";\r\n\r\nclass ModalWindow extends React.Component{\r\n    render(){\r\n        {{console.log(\"stupid film\",this.props.filmInfo)}}\r\n        return(\r\n           \r\n            <div>\r\n                <Modal className=\"main-modal\" show={true} size=\"lg\" aria-labelledby=\"contained-modal-title-vcenter\" centered>\r\n                    <Modal.Header closeButton onClick={this.props.handleModalShowHide}>\r\n                     <Modal.Title id=\"contained-modal-title-vcenter\">{this.props.filmInfo.original_title}</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body className=\"show-grid\">\r\n                    <Container>\r\n                        <Row>\r\n                            <Col xs={6} md={4}>\r\n                            <Image className=\"poster-img-modal\" src={`https://image.tmdb.org/t/p/original/${this.props.filmInfo.poster_path}`} alt={this.props.filmInfo.title} thumbnail />\r\n                            </Col>\r\n                            <Col xs={12} md={8}>\r\n                              <strong>Overview: </strong>  {this.props.filmInfo.overview} <br/><br/>\r\n                              <strong>Release date: </strong> {this.props.filmInfo.release_date}\r\n                            </Col>\r\n                        </Row>\r\n                    </Container>\r\n                    \r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={this.props.handleModalShowHide}>\r\n                        Close\r\n                    </Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n            </div>\r\n        )\r\n    }\r\n    \r\n}\r\n\r\nexport default ModalWindow;","C:\\Users\\KiguradzeLeo\\Documents\\GitHub\\CloneWars\\rsclone\\src\\components\\CaurouselMain.js",["72"],"import React from 'react';\r\nimport Carousel from \"react-multi-carousel\";\r\nimport \"react-multi-carousel/lib/styles.css\";\r\nimport { Helmet } from \"react-helmet\";\r\n\r\nclass CarouselMain extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {dataMain: []}\r\n    }\r\n\r\n    async componentDidMount() {\r\n      const responseMain = await fetch('https://api.themoviedb.org/3/movie/popular?api_key=fb0fcc2d34caffc53da53d676fbf678a&language=en-US&page=2');\r\n      const jsonMain = await responseMain.json();\r\n      this.setState({ dataMain: jsonMain});\r\n  }\r\n    render() {\r\n        const responsive = {\r\n            superLargeDesktop: {\r\n              breakpoint: { max: 4000, min: 3000 },\r\n              items: 5\r\n            },\r\n            desktop: {\r\n              breakpoint: { max: 3000, min: 1024 },\r\n              items: 1\r\n            },\r\n            tablet: {\r\n              breakpoint: { max: 1024, min: 464 },\r\n              items: 1\r\n            },\r\n            mobile: {\r\n              breakpoint: { max: 464, min: 0 },\r\n              items: 1\r\n            }\r\n          };\r\n       if (this.state.dataMain.results){\r\n          return(\r\n              <div className=\"main-carousel-wrapper\">\r\n                <Carousel                 \r\n                  swipeable={false}\r\n                  draggable={false}\r\n                  showDots={false}\r\n                  responsive={responsive}\r\n                  ssr={true}\r\n                  infinite={true}\r\n                  autoPlaySpeed={1000}\r\n                  keyBoardControl={true}\r\n                  customTransition=\"all .5\"\r\n                  transitionDuration={1000}\r\n                  containerClass=\"carousel-container\"\r\n                  removeArrowOnDeviceType={[\"tablet\", \"mobile\"]}\r\n                  dotListClass=\"custom-dot-list-style\"\r\n                  itemClass=\"carousel-item-padding\"\r\n                  centerMode={false}\r\n                  slidesToSlide={3}\r\n                >\r\n                {this.state.dataMain.results.map(el => (\r\n                    <div className=\"main-carousel-img\">\r\n                      <img className=\"poster-img-main\" src={`https://image.tmdb.org/t/p/original/${el.backdrop_path}`} alt={el.title}/>\r\n                      <h2><span>{el.title}</span></h2>\r\n                    </div>\r\n                ))};\r\n                </Carousel>\r\n              </div>\r\n          );\r\n        } else {\r\n          return (<div>Wait a little</div>)\r\n        }\r\n    }\r\n}\r\n\r\nexport default CarouselMain;",{"ruleId":"73","severity":1,"message":"74","line":5,"column":10,"nodeType":"75","messageId":"76","endLine":5,"endColumn":16},{"ruleId":"73","severity":1,"message":"77","line":6,"column":35,"nodeType":"75","messageId":"76","endLine":6,"endColumn":41},{"ruleId":"73","severity":1,"message":"78","line":6,"column":43,"nodeType":"75","messageId":"76","endLine":6,"endColumn":48},{"ruleId":"73","severity":1,"message":"79","line":6,"column":50,"nodeType":"75","messageId":"76","endLine":6,"endColumn":54},{"ruleId":"73","severity":1,"message":"80","line":1,"column":8,"nodeType":"75","messageId":"76","endLine":1,"endColumn":16},{"ruleId":"73","severity":1,"message":"81","line":10,"column":27,"nodeType":"75","messageId":"76","endLine":10,"endColumn":33},{"ruleId":"73","severity":1,"message":"77","line":10,"column":35,"nodeType":"75","messageId":"76","endLine":10,"endColumn":41},{"ruleId":"73","severity":1,"message":"74","line":12,"column":10,"nodeType":"75","messageId":"76","endLine":12,"endColumn":16},{"ruleId":"73","severity":1,"message":"82","line":13,"column":10,"nodeType":"75","messageId":"76","endLine":13,"endColumn":17},{"ruleId":"83","severity":1,"message":"84","line":90,"column":13,"nodeType":"85","endLine":90,"endColumn":41},{"ruleId":"86","severity":1,"message":"87","line":91,"column":15,"nodeType":"85","endLine":91,"endColumn":63},{"ruleId":"83","severity":1,"message":"84","line":107,"column":21,"nodeType":"85","endLine":107,"endColumn":45},{"ruleId":"83","severity":1,"message":"84","line":111,"column":19,"nodeType":"85","endLine":111,"endColumn":43},{"ruleId":"83","severity":1,"message":"84","line":114,"column":19,"nodeType":"85","endLine":114,"endColumn":52},{"ruleId":"88","severity":1,"message":"89","line":165,"column":17,"nodeType":"85","endLine":169,"endColumn":18},{"ruleId":"86","severity":1,"message":"87","line":170,"column":19,"nodeType":"85","endLine":170,"endColumn":65},{"ruleId":"73","severity":1,"message":"90","line":4,"column":8,"nodeType":"75","messageId":"76","endLine":4,"endColumn":16},{"ruleId":"73","severity":1,"message":"74","line":5,"column":10,"nodeType":"75","messageId":"76","endLine":5,"endColumn":16},{"ruleId":"86","severity":1,"message":"87","line":37,"column":22,"nodeType":"85","endLine":37,"endColumn":39},{"ruleId":"91","severity":1,"message":"92","line":54,"column":16,"nodeType":"85","endLine":54,"endColumn":133},{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","replacedBy":"96"},{"ruleId":"73","severity":1,"message":"97","line":1,"column":17,"nodeType":"75","messageId":"76","endLine":1,"endColumn":26},{"ruleId":"73","severity":1,"message":"74","line":9,"column":10,"nodeType":"75","messageId":"76","endLine":9,"endColumn":16},{"ruleId":"73","severity":1,"message":"81","line":13,"column":22,"nodeType":"75","messageId":"76","endLine":13,"endColumn":28},{"ruleId":"73","severity":1,"message":"77","line":14,"column":5,"nodeType":"75","messageId":"76","endLine":14,"endColumn":11},{"ruleId":"73","severity":1,"message":"78","line":15,"column":5,"nodeType":"75","messageId":"76","endLine":15,"endColumn":10},{"ruleId":"73","severity":1,"message":"74","line":2,"column":10,"nodeType":"75","messageId":"76","endLine":2,"endColumn":16},{"ruleId":"73","severity":1,"message":"82","line":3,"column":10,"nodeType":"75","messageId":"76","endLine":3,"endColumn":17},{"ruleId":"73","severity":1,"message":"81","line":4,"column":27,"nodeType":"75","messageId":"76","endLine":4,"endColumn":33},{"ruleId":"73","severity":1,"message":"77","line":4,"column":35,"nodeType":"75","messageId":"76","endLine":4,"endColumn":41},{"ruleId":"73","severity":1,"message":"78","line":4,"column":43,"nodeType":"75","messageId":"76","endLine":4,"endColumn":48},{"ruleId":"73","severity":1,"message":"79","line":4,"column":50,"nodeType":"75","messageId":"76","endLine":4,"endColumn":54},{"ruleId":"73","severity":1,"message":"74","line":3,"column":10,"nodeType":"75","messageId":"76","endLine":3,"endColumn":16},{"ruleId":"98","severity":1,"message":"99","line":7,"column":9,"nodeType":"100","messageId":"101","endLine":7,"endColumn":59},{"ruleId":"98","severity":1,"message":"99","line":7,"column":10,"nodeType":"100","messageId":"101","endLine":7,"endColumn":58},{"ruleId":"73","severity":1,"message":"74","line":4,"column":10,"nodeType":"75","messageId":"76","endLine":4,"endColumn":16},"no-unused-vars","'Helmet' is defined but never used.","Identifier","unusedVar","'Switch' is defined but never used.","'Route' is defined but never used.","'Link' is defined but never used.","'ReactDOM' is defined but never used.","'Router' is defined but never used.","'NavLink' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","'FilmList' is defined but never used.","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","no-native-reassign",["102"],"no-negated-in-lhs",["103"],"'createRef' is defined but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","no-global-assign","no-unsafe-negation"]