[{"C:\\Users\\Juliy\\Desktop\\CLONE RS\\CloneWars\\rsclone\\src\\index.js":"1","C:\\Users\\Juliy\\Desktop\\CLONE RS\\CloneWars\\rsclone\\src\\App.js":"2","C:\\Users\\Juliy\\Desktop\\CLONE RS\\CloneWars\\rsclone\\src\\components\\i18next.js":"3","C:\\Users\\Juliy\\Desktop\\CLONE RS\\CloneWars\\rsclone\\src\\components\\FilmList.js":"4","C:\\Users\\Juliy\\Desktop\\CLONE RS\\CloneWars\\rsclone\\src\\components\\SearchArea.js":"5","C:\\Users\\Juliy\\Desktop\\CLONE RS\\CloneWars\\rsclone\\src\\components\\Trailer.js":"6","C:\\Users\\Juliy\\Desktop\\CLONE RS\\CloneWars\\rsclone\\src\\components\\FilmPage.js":"7","C:\\Users\\Juliy\\Desktop\\CLONE RS\\CloneWars\\rsclone\\src\\components\\MovieList.js":"8","C:\\Users\\Juliy\\Desktop\\CLONE RS\\CloneWars\\rsclone\\src\\components\\MovieRow.js":"9","C:\\Users\\Juliy\\Desktop\\CLONE RS\\CloneWars\\rsclone\\src\\components\\WatchList.js":"10","C:\\Users\\Juliy\\Desktop\\CLONE RS\\CloneWars\\rsclone\\src\\components\\Footer.js":"11","C:\\Users\\Juliy\\Desktop\\CLONE RS\\CloneWars\\rsclone\\src\\components\\Statistics.js":"12","C:\\Users\\Juliy\\Desktop\\CLONE RS\\CloneWars\\rsclone\\src\\components\\GoogleAuth.js":"13","C:\\Users\\Juliy\\Desktop\\CLONE RS\\CloneWars\\rsclone\\src\\components\\ModalWindow.js":"14","C:\\Users\\Juliy\\Desktop\\CLONE RS\\CloneWars\\rsclone\\src\\components\\CaurouselMain.js":"15","C:\\Users\\Juliy\\Desktop\\CLONE RS\\CloneWars\\rsclone\\src\\components\\Movie.js":"16"},{"size":733,"mtime":1611907573759,"results":"17","hashOfConfig":"18"},{"size":9402,"mtime":1611915752315,"results":"19","hashOfConfig":"18"},{"size":1311,"mtime":1611907573757,"results":"20","hashOfConfig":"18"},{"size":7147,"mtime":1611915476381,"results":"21","hashOfConfig":"18"},{"size":896,"mtime":1611907573726,"results":"22","hashOfConfig":"18"},{"size":649,"mtime":1611907573728,"results":"23","hashOfConfig":"18"},{"size":3069,"mtime":1611907573719,"results":"24","hashOfConfig":"18"},{"size":887,"mtime":1611907573725,"results":"25","hashOfConfig":"18"},{"size":676,"mtime":1611907573725,"results":"26","hashOfConfig":"18"},{"size":2899,"mtime":1611912613105,"results":"27","hashOfConfig":"18"},{"size":2212,"mtime":1611907573720,"results":"28","hashOfConfig":"18"},{"size":3493,"mtime":1611907573728,"results":"29","hashOfConfig":"18"},{"size":2093,"mtime":1611915477216,"results":"30","hashOfConfig":"18"},{"size":4244,"mtime":1611907573722,"results":"31","hashOfConfig":"18"},{"size":8721,"mtime":1611907573716,"results":"32","hashOfConfig":"18"},{"size":2201,"mtime":1611907573723,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"37"},"fcmh3d",{"filePath":"38","messages":"39","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"37"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"37"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"37"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"37"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"37"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"37"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"37"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"37"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"37"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"37"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"37"},"C:\\Users\\Juliy\\Desktop\\CLONE RS\\CloneWars\\rsclone\\src\\index.js",["79","80","81"],"import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\n\r\nimport \"./components/i18next\";\r\nimport i18next from \"i18next\";\r\n\r\nconst lang = localStorage.getItem(\"lang\") || \"en\";\r\ni18next.changeLanguage(lang);\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Router>\r\n      <App />\r\n    </Router>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n//reportWebVitals();\r\n",["82","83"],"C:\\Users\\Juliy\\Desktop\\CLONE RS\\CloneWars\\rsclone\\src\\App.js",["84","85","86","87","88","89","90","91","92","93","94","95","96","97"],"C:\\Users\\Juliy\\Desktop\\CLONE RS\\CloneWars\\rsclone\\src\\components\\i18next.js",["98","99","100"],"import i18next from \"i18next\";\r\nimport { initReactI18next } from \"react-i18next\";\r\nimport common_en from \"../translations/en\";\r\nimport common_ru from \"../translations/ru\";\r\n\r\nimport Backend from \"i18next-http-backend\";\r\nimport LanguageDetector from \"i18next-browser-languagedetector\";\r\n// don't want to use this?\r\n// have a look at the Quick start guide\r\n// for passing in lng and translations on init\r\n\r\nconst Language = [\"en\", \"ru\"];\r\n\r\nconst resources = {\r\n  en: {\r\n    translation: common_en,\r\n  },\r\n  ru: {\r\n    translation: common_ru,\r\n  },\r\n};\r\n\r\ni18next\r\n  // load translation using http -> see /public/locales (i.e. https://github.com/i18next/react-i18next/tree/master/example/react/public/locales)\r\n  // learn more: https://github.com/i18next/i18next-http-backend\r\n  //.use(Backend)\r\n  // detect user language\r\n  // learn more: https://github.com/i18next/i18next-browser-languageDetector\r\n  //.use(LanguageDetector)\r\n  // pass the i18n instance to react-i18next.\r\n  .use(initReactI18next)\r\n  // init i18next\r\n  // for all options read: https://www.i18next.com/overview/configuration-options\r\n  .init({\r\n    resources,\r\n    lng: \"en\",\r\n    keySeparator: false,\r\n    interpolation: {\r\n      escapeValue: false, // not needed for react as it escapes by default\r\n    },\r\n  });\r\n\r\nexport default i18next;\r\n","C:\\Users\\Juliy\\Desktop\\CLONE RS\\CloneWars\\rsclone\\src\\components\\FilmList.js",["101","102","103","104","105","106","107","108"],"C:\\Users\\Juliy\\Desktop\\CLONE RS\\CloneWars\\rsclone\\src\\components\\SearchArea.js",["109","110","111","112","113","114"],"// import Option from \"./Option\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport ReactHTMLDatalist from \"react-html-datalist\";\r\n\r\nimport i18next from \"i18next\";\r\n\r\nimport Form from \"react-bootstrap/Form\";\r\nimport FormControl from \"react-bootstrap/FormControl\";\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\nconst SearchArea = (props) => {\r\n  return (\r\n    <form\r\n      className=\"container-fluid my-2 my-lg-0\"\r\n      onSubmit={props.handleSubmit}\r\n    >\r\n      <input\r\n        className=\"form-control mr-sm-2\"\r\n        //onChange={this.searchCnangeHandler.bind(this)}\r\n        onChange={props.handleChange}\r\n        type=\"text\"\r\n        list=\"datalistOptions\"\r\n        id=\"exampleDataList\"\r\n        placeholder={i18next.t(\"Search\")}\r\n      />\r\n    </form>\r\n  );\r\n};\r\n\r\n// class SearchArea extends React.Component {\r\n//   render() {\r\n\r\n//   }\r\n// }\r\n\r\nexport default SearchArea;\r\n","C:\\Users\\Juliy\\Desktop\\CLONE RS\\CloneWars\\rsclone\\src\\components\\Trailer.js",["115","116","117","118","119","120","121","122"],"\r\nimport React from 'react';\r\nimport { Button, Modal, Container, Row, Col, Image } from 'react-bootstrap';\r\nimport close from './assets/close.png'\r\n\r\n\r\nclass Trailer extends React.Component{\r\n    constructor() {\r\n        super();\r\n        \r\n    }\r\n    \r\n    render() {  \r\n            return (\r\n                <div id = \"fp\" className=\"container-fluid wrapperStyle\">\r\n                    <div className=\"top-menu-wrapper\">\r\n                        <div className=\"head-text\">Trailer</div>\r\n                    </div>\r\n                    <div>\r\n                    </div>\r\n                </div>\r\n            )\r\n\r\n    }\r\n}\r\n\r\nexport default Trailer;","C:\\Users\\Juliy\\Desktop\\CLONE RS\\CloneWars\\rsclone\\src\\components\\FilmPage.js",["123","124","125"],"import React from 'react';\r\nimport star from './assets/megastar.png';\r\nimport CarouselMain from './CaurouselMain';\r\nimport i18next from \"i18next\";\r\n\r\n\r\n class FilmPage extends React.Component{\r\n    constructor() {\r\n        super();\r\n        this.state = {video:\"\",dat:JSON.parse(sessionStorage.getItem(\"val\"))};\r\n    }\r\n    async componentDidMount(){\r\n     const response = await fetch(`https://api.themoviedb.org/3/movie/${this.state.dat.id}/videos?api_key=fb0fcc2d34caffc53da53d676fbf678a&language=en-US`);\r\n     const res = await response.json();\r\n     this.setState({ video: res.results[0]?res.results[0].key:''});\r\n     let val = JSON.parse(sessionStorage.getItem(\"val\"));\r\n     this.setState({dat: val});\r\n    }\r\n  \r\n    render(){\r\n       \r\n        return(\r\n            \r\n            <div id = \"fp\" className=\" container-fluid wrapperStyle\">\r\n               \r\n               <div id = \"upperBlock\" className=\"wrapper\">\r\n                 <div className=\"row\"></div>\r\n                 <div className=\"row\">\r\n\r\n                     <h2 className=\"col\">{this.state.dat.original_title}</h2>\r\n                    \r\n                     \r\n                     <h4 className=\"col-auto\">Average Vote: {this.state.dat.vote_average}\r\n                     <img className = \"star\"src={star} ></img>\r\n                     </h4>\r\n                     \r\n                     \r\n                     <h4 className=\"col-auto\">Votes: {this.state.dat.vote_count}</h4>\r\n                \r\n               </div>\r\n               </div>\r\n               <div id = \"briefInfo\" className=\"wrapper\">\r\n                   <h5>Release Date: {this.state.dat.release_date}</h5>\r\n                   <div></div>\r\n                </div>\r\n\r\n               <div id = \"photoVideo\" className=\"row\" style={{padding:'1% 5% 1% 5%', margin:'0%', border:'0%'}}>\r\n                   \r\n               <img  width=\"36%\" height =\"auto\" src={`https://image.tmdb.org/t/p/original/${this.state.dat.poster_path}`} alt={this.state.dat.title} style={{ margin:'2%'}}/>\r\n               {this.state.video?(\r\n               <iframe  width=\"56%\" height=\"auto\" src={`https://www.youtube.com/embed/${this.state.video}`} style={{ margin:'2%'}}/>\r\n               ):(\r\n               <div style={{color:'white', margin:'0% 5% 5% 1%',maxWidth:'45%'}}>Sorry, there seems to be no video provided for this film. <hr/>The Universe wants you to watch it without spoilers, apparently.</div>\r\n               )}\r\n               </div>\r\n               <div style={{  margin: \"8px\"}}>\r\n               <h4 style={{  fontWeight: \"bolder\"}}>Overview:</h4>\r\n              <h5 > {this.state.dat.overview}</h5></div>\r\n             \r\n               <div id = \"videoCarousel\" className=\"wrapper\"></div>\r\n               <div id = \"photoCarousel\" className=\"wrapper\"></div>\r\n               <div id = \"cast\"></div>\r\n               <div className=\"head-text\">\r\n                Actors\r\n               </div>\r\n               <CarouselMain type={\"actors\"} filmId={this.state.dat.id} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default FilmPage;","C:\\Users\\Juliy\\Desktop\\CLONE RS\\CloneWars\\rsclone\\src\\components\\MovieList.js",["126"],"import React from \"react\";\r\nimport Movie from \"./Movie\";\r\n\r\nimport i18next from \"i18next\";\r\n\r\nconst MovieList = (props) => {\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row\">\r\n        <div className=\"col s12\">\r\n          {props.movies.map((movie, i) => {\r\n            return (\r\n              <Movie\r\n                key={i}\r\n                poster_path={movie.poster_path}\r\n                title={movie.title}\r\n                original_title={movie.title}\r\n                overview={movie.overview}\r\n                release_date={movie.release_date}\r\n                vote_average={movie.vote_average}\r\n                vote_count={movie.vote_count}\r\n                popularity={movie.popularity}\r\n                video={movie.video}\r\n              />\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MovieList;\r\n","C:\\Users\\Juliy\\Desktop\\CLONE RS\\CloneWars\\rsclone\\src\\components\\MovieRow.js",[],"C:\\Users\\Juliy\\Desktop\\CLONE RS\\CloneWars\\rsclone\\src\\components\\WatchList.js",["127","128","129"],"import React from 'react';\r\nimport { Button, Modal, Container, Row, Col, Image } from 'react-bootstrap';\r\nimport close from './assets/close.png'\r\n\r\n\r\nclass Watchlist extends React.Component{\r\n    constructor() {\r\n        super();\r\n        this.state = {data: []};\r\n        this.updateWatchList = this.updateWatchList.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        let filmsList = JSON.parse(localStorage.getItem('films'));\r\n        this.setState({data: filmsList});\r\n    }\r\n\r\n    // for removing id from watchList\r\n    updateWatchList(filmID) {\r\n        let currentArray = this.state.data;\r\n        const idx = currentArray.indexOf(filmID);\r\n        currentArray.splice(idx, 1);\r\n        currentArray.splice(idx, 1);\r\n        localStorage.setItem('films', JSON.stringify(currentArray));\r\n        this.setState({data: currentArray});\r\n    }\r\n    \r\n    render() {\r\n        \r\n        if (this.state.data) {         \r\n            return (\r\n                <div id = \"fp\" className=\"container-fluid wrapperStyle\">\r\n                    <div className=\"top-menu-wrapper\">\r\n                        <div className=\"head-text\">Your Watchlist</div>\r\n                    </div>\r\n                    <div>\r\n                    {this.state.data.map(el => (\r\n                        <div key={el.id}>\r\n                            <Row className=\"row-bottom-padding\">\r\n                                <Col xs={6} md={4}>\r\n                                    {el[1] ? <Image className=\"poster-img-modal img-watchlist\" src={`https://image.tmdb.org/t/p/original/${el[1]}`} alt={el[0]} thumbnail />: null}\r\n                                </Col>\r\n                                <Col xs={11} md={7}>\r\n                                    {el[4] ? <div><strong>Title: </strong> {el[4]}</div> : null}\r\n                                    {el[2] ? <div><strong>Release date: </strong>  {el[2]}</div> : null}\r\n                                    {el[3] ? <div><strong>Stars: </strong> {el[3]}</div> : null}\r\n                                    {el[5] ? <div><strong>Overview: </strong> {el[5]}</div> : null}\r\n                                </Col>\r\n                                <Col xs={1} md={1}>\r\n                                    {el[0] ? <div className=\"background-close-btn\"><Image className=\"close-btn-img\" src={close} alt=\"close button\" onClick = {() => {this.updateWatchList(el[0]); }}/></div> : null}\r\n                                </Col>\r\n                            </Row>\r\n                        </div>\r\n                    ))}\r\n                    </div>\r\n                </div>\r\n            )\r\n        } else {\r\n            return (<div id = \"fp\" className=\"container-fluid wrapperStyle\">\r\n                        <div className=\"head-text\">Your Watchlist</div>\r\n                        Nothing was found\r\n                    </div>);\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport default Watchlist;","C:\\Users\\Juliy\\Desktop\\CLONE RS\\CloneWars\\rsclone\\src\\components\\Footer.js",["130","131","132","133"],"import React from \"react\";\r\nimport rsschool from \"./assets/rs_school_js.svg\";\r\nimport i18next from \"i18next\";\r\n\r\nclass Footer extends React.Component {\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <footer className=\"bg-dark text-center text-lg-start\">\r\n        <div className=\"container p-4\">\r\n          <div className=\"row\">\r\n            <div className=\"col-lg-6 col-md-12 mb-4 mb-md-0\">\r\n              <h5 className=\"text-uppercase yellow-text\">\r\n                {\" \"}\r\n                The Rolling Scopes School\r\n              </h5>\r\n              <p className=\"text-white\">\r\n                {i18next.t(\"FreeCourse\")}{\" \"}\r\n                <a\r\n                  className=\"footer__link\"\r\n                  target=\"_blank\"\r\n                  href=\"https://rs.school/js/\"\r\n                >\r\n                  rs.school/js\r\n                </a>\r\n              </p>\r\n            </div>\r\n\r\n            <div className=\"col-lg-3 col-md-6 mb-4 mb-md-0\">\r\n              <h5 className=\"text-uppercase\"></h5>\r\n              <div>\r\n                <img className=\"footer__image\" src={rsschool}></img>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"col-lg-3 col-md-6 mb-4 mb-md-0\">\r\n              <h5 className=\"text-uppercase mb-0 yellow-text\">\r\n                {i18next.t(\"Developed\")}\r\n              </h5>\r\n\r\n              <ul className=\"list-unstyled\">\r\n                <li>\r\n                  <a className=\"\" href=\"https://github.com/YuPashintseva\">\r\n                    YuPashintseva\r\n                  </a>\r\n                </li>\r\n                <li>\r\n                  <a className=\"\" href=\"https://github.com/anatkig\">\r\n                    anatkig\r\n                  </a>\r\n                </li>\r\n                <li>\r\n                  <a className=\"\" href=\"https://github.com/vegas-muffin\">\r\n                    vegas-muffin\r\n                  </a>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"text-center p-3 text-white\">\r\n          {\" \"}\r\n          &copy; 2021 {i18next.t(\"Copyright\")} IMDb-clone\r\n        </div>\r\n      </footer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Footer;\r\n","C:\\Users\\Juliy\\Desktop\\CLONE RS\\CloneWars\\rsclone\\src\\components\\Statistics.js",[],"C:\\Users\\Juliy\\Desktop\\CLONE RS\\CloneWars\\rsclone\\src\\components\\GoogleAuth.js",["134","135","136"],"import React from \"react\";\r\nimport i18next from \"i18next\";\r\n\r\nclass GoogleAuth extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      isSignedIn: null,\r\n      userInfo: null,\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    window.gapi.load(\"client:auth2\", () => {\r\n      window.gapi.client\r\n        .init({\r\n          clientId:\r\n            \"36766060663-uqo9t1ggc8ks3lanq5fqtfbb4edpisf4.apps.googleusercontent.com\",\r\n          scope: \"email\",\r\n        })\r\n        .then(() => {\r\n          this.auth = window.gapi.auth2.getAuthInstance();\r\n          this.setState({ isSignedIn: this.auth.isSignedIn.get() });\r\n          this.setState({ userInfo: this.auth.currentUser.get() });\r\n          this.auth.isSignedIn.listen(this.onAuthChange);\r\n        });\r\n    });\r\n  }\r\n\r\n  showCurrentUserInfo() {\r\n    var googleUser = this.auth.currentUser.get().Mt;\r\n    return googleUser.Mt;\r\n  }\r\n\r\n  onAuthChange = () => {\r\n    this.setState({ isSignedIn: this.auth.isSignedIn.get() });\r\n    this.setState({ userInfo: this.auth.currentUser.get() });\r\n  };\r\n\r\n  onSignIn = () => {\r\n    this.auth.signIn();\r\n  };\r\n\r\n  onSignOut = () => {\r\n    this.auth.signOut();\r\n  };\r\n\r\n  renderAuthButton() {\r\n    if (this.state.isSignedIn === null) {\r\n      return null;\r\n    } else if (this.state.isSignedIn) {\r\n      return (\r\n        <a onClick={this.onSignOut} className=\"log-in-button\">\r\n          {(this.auth.currentUser.get().getBasicProfile()) ? (\r\n            <img\r\n              className=\"user-img\"\r\n              src={this.auth.currentUser.get().getBasicProfile().fI}\r\n              alt=\"user image\"\r\n            />\r\n          ) : null}\r\n          {this.state.userInfo ? this.auth.currentUser.get().getBasicProfile().sd : null}\r\n        </a>\r\n      );\r\n    } else {\r\n      return (\r\n        <a onClick={this.onSignIn} className=\"nav-link log-in-button\">\r\n          {i18next.t(\"SignIn\")}\r\n        </a>\r\n      );\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <a href=\"/\" className=\"nav-item\">\r\n        {this.renderAuthButton()}\r\n      </a>\r\n    );\r\n  }\r\n}\r\n\r\nexport default GoogleAuth;\r\n","C:\\Users\\Juliy\\Desktop\\CLONE RS\\CloneWars\\rsclone\\src\\components\\ModalWindow.js",["137"],"import React from 'react'\r\nimport { Button, Modal, Container, Row, Col, Image } from 'react-bootstrap'\r\nimport { Helmet } from \"react-helmet\";\r\n\r\nclass ModalWindow extends React.Component{\r\n    render(){\r\n        let msgText = 'Successfully added to WatchList';\r\n        if (this.props.toWatchList) {\r\n            if (localStorage.getItem('films')) {\r\n                let arr = JSON.parse(localStorage.getItem('films'));\r\n                if (! arr.includes(this.props.filmInfo.id)) {\r\n                    arr.push(this.props.filmInfo.id);\r\n                    let infoArr = [];\r\n                    infoArr.push(this.props.filmInfo.id);\r\n                    infoArr.push(this.props.filmInfo.poster_path);\r\n                    infoArr.push(this.props.filmInfo.release_date);\r\n                    infoArr.push(this.props.filmInfo.vote_average);\r\n                    infoArr.push(this.props.filmInfo.title);\r\n                    infoArr.push(this.props.filmInfo.overview);\r\n                    arr.push(infoArr);\r\n                } else {\r\n                    msgText = 'It is already in Watchlist';\r\n                }\r\n                localStorage.setItem('films', JSON.stringify(arr));\r\n            } else { \r\n                localStorage.setItem('films', JSON.stringify([this.props.filmInfo.id, [this.props.filmInfo.id, this.props.filmInfo.poster_path,this.props.filmInfo.release_date, this.props.filmInfo.vote_average, this.props.filmInfo.title, this.props.filmInfo.overview]]));\r\n            }\r\n            return(\r\n                <div>\r\n                    <Modal className=\"main-modal\" show={true} size=\"lg\" aria-labelledby=\"contained-modal-title-vcenter\" centered>\r\n                        <Modal.Header closeButton onClick={this.props.handleModalShowHide}>\r\n                         <Modal.Title id=\"contained-modal-title-vcenter\">{this.props.filmInfo.original_title}</Modal.Title>\r\n                        </Modal.Header>\r\n                        <Modal.Body className=\"show-grid\">\r\n                        <Container>\r\n                            <Row>\r\n                               {msgText}\r\n                            </Row>\r\n                        </Container>\r\n                        \r\n                        </Modal.Body>\r\n                        <Modal.Footer>\r\n                        <Button variant=\"secondary\" onClick={this.props.handleModalShowHide}>\r\n                            Close\r\n                        </Button>\r\n                        </Modal.Footer>\r\n                    </Modal>\r\n                </div>\r\n            )\r\n        } else {\r\n            return (\r\n                <div>\r\n                    <Modal className=\"main-modal\" show={true} size=\"lg\" aria-labelledby=\"contained-modal-title-vcenter\" centered>\r\n                        <Modal.Header closeButton onClick={this.props.handleModalShowHide}>\r\n                        <Modal.Title id=\"contained-modal-title-vcenter\">{this.props.filmInfo.original_title}</Modal.Title>\r\n                        </Modal.Header>\r\n                        <Modal.Body className=\"show-grid\">\r\n                        <Container>\r\n                            <Row>\r\n                                <Col xs={6} md={4}>\r\n                                    <Image className=\"poster-img-modal\" src={`https://image.tmdb.org/t/p/original/${this.props.filmInfo.poster_path}`} alt={this.props.filmInfo.title} thumbnail />\r\n                                </Col>\r\n                                <Col xs={12} md={8}>\r\n                                <strong>Overview: </strong>  {this.props.filmInfo.overview} <br/><br/>\r\n                                <strong>Release date: </strong> {this.props.filmInfo.release_date}\r\n                                </Col>\r\n                            </Row>\r\n                        </Container>\r\n                        \r\n                        </Modal.Body>\r\n                        <Modal.Footer>\r\n                        <Button variant=\"secondary\" onClick={this.props.handleModalShowHide}>\r\n                            Close\r\n                        </Button>\r\n                        </Modal.Footer>\r\n                    </Modal>\r\n                </div>\r\n            );\r\n        }\r\n\r\n    }\r\n    \r\n}\r\n\r\nexport default ModalWindow;","C:\\Users\\Juliy\\Desktop\\CLONE RS\\CloneWars\\rsclone\\src\\components\\CaurouselMain.js",["138","139","140","141"],"import React from 'react';\r\nimport Carousel from \"react-multi-carousel\";\r\nimport \"react-multi-carousel/lib/styles.css\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link\r\n} from \"react-router-dom\";\r\n\r\nclass CarouselMain extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {dataMain: [], type: \"films\"}\r\n    }\r\n\r\n    async componentDidMount() {\r\n      let responseMain = await fetch('https://api.themoviedb.org/3/movie/popular?api_key=fb0fcc2d34caffc53da53d676fbf678a&language=en-US&page=2');\r\n      if (this.props.type) {\r\n        if (this.props.type === 'films') {\r\n          responseMain = await fetch('https://api.themoviedb.org/3/movie/popular?api_key=fb0fcc2d34caffc53da53d676fbf678a&language=en-US&page=2');\r\n        } else if (this.props.type === 'people') {\r\n          responseMain = await fetch('https://api.themoviedb.org/3/person/popular?api_key=fb0fcc2d34caffc53da53d676fbf678a&language=en-US&page=2');\r\n        } else {\r\n          responseMain = await fetch('https://api.themoviedb.org/3/movie/464052/credits?api_key=fb0fcc2d34caffc53da53d676fbf678a&language=en-US');\r\n          if (this.props.filmId) {\r\n            responseMain = await fetch(`https://api.themoviedb.org/3/movie/${this.props.filmId}/credits?api_key=fb0fcc2d34caffc53da53d676fbf678a&language=en-US`);\r\n          }\r\n        }\r\n        this.setState({ type: this.props.type })\r\n       }\r\n      const jsonMain = await responseMain.json();\r\n      this.setState({ dataMain: jsonMain});\r\n  }\r\n  interestedCount(title) {\r\n    if(localStorage.getItem('count')){\r\n        let obj = JSON.parse(localStorage.getItem('count'));\r\n        if(obj[title]) {\r\n            obj[title] = parseInt(obj[title])+1;\r\n        }else {\r\n            obj[title] = 1;\r\n        }\r\n        //localStorage.clear();\r\n        localStorage.setItem('count', JSON.stringify(obj));\r\n    }\r\n    else {\r\n        let obj ={};\r\n        obj[title] = 1;\r\n        localStorage.clear();\r\n        localStorage.setItem('count', JSON.stringify(obj));\r\n    }\r\n}\r\n    render() {\r\n\r\n       if (this.state.dataMain.results){\r\n          if (this.state.type === \"films\") {\r\n            const responsive = {\r\n              superLargeDesktop: {\r\n                breakpoint: { max: 4000, min: 3000 },\r\n                items: 5\r\n              },\r\n              desktop: {\r\n                breakpoint: { max: 3000, min: 1024 },\r\n                items: 1\r\n              },\r\n              tablet: {\r\n                breakpoint: { max: 1024, min: 464 },\r\n                items: 1\r\n              },\r\n              mobile: {\r\n                breakpoint: { max: 464, min: 0 },\r\n                items: 1\r\n              }\r\n            };\r\n            return(\r\n              <div className=\"main-carousel-wrapper\">\r\n                <Carousel                 \r\n                  swipeable={false}\r\n                  draggable={false}\r\n                  showDots={false}\r\n                  responsive={responsive}\r\n                  ssr={true}\r\n                  infinite={false}\r\n                  autoPlaySpeed={1000}\r\n                  keyBoardControl={true}\r\n                  customTransition=\"all .5\"\r\n                  transitionDuration={1000}\r\n                  containerClass=\"carousel-container\"\r\n                  removeArrowOnDeviceType={[\"tablet\", \"mobile\"]}\r\n                  dotListClass=\"custom-dot-list-style\"\r\n                  itemClass=\"carousel-item-padding\"\r\n                  centerMode={false}\r\n                  slidesToSlide={3}\r\n                >\r\n                {this.state.dataMain.results.map(el => (\r\n                    el.backdrop_path ?\r\n                    <div key={el.id} className=\"main-carousel-img\">\r\n                      <Link to='/FilmPage'>\r\n                      <img className=\"poster-img-main\" onClick={()=>this.interestedCount(el.original_title)} onMouseOver={()=> {sessionStorage.removeItem(\"val\");sessionStorage.setItem(\"val\",JSON.stringify(el))}}  src={`https://image.tmdb.org/t/p/original/${el.backdrop_path}`} alt={el.title}/>\r\n                      </Link>\r\n                      <h2><span>{el.title}</span></h2>\r\n                    </div> : null\r\n                ))};\r\n                </Carousel>\r\n              </div>\r\n            );\r\n          } else if (this.state.type === \"people\") {\r\n            const responsive = {\r\n              superLargeDesktop: {\r\n                breakpoint: { max: 4000, min: 3000 },\r\n                items: 5\r\n              },\r\n              desktop: {\r\n                breakpoint: { max: 3000, min: 1024 },\r\n                items: 5\r\n              },\r\n              tablet: {\r\n                breakpoint: { max: 1024, min: 464 },\r\n                items: 4\r\n              },\r\n              mobile: {\r\n                breakpoint: { max: 464, min: 0 },\r\n                items: 2\r\n              }\r\n            };\r\n            return(\r\n              <div className=\"main-carousel-wrapper\">\r\n                <Carousel                 \r\n                  swipeable={false}\r\n                  draggable={false}\r\n                  showDots={false}\r\n                  responsive={responsive}\r\n                  ssr={true}\r\n                  infinite={false}\r\n                  autoPlaySpeed={1000}\r\n                  keyBoardControl={true}\r\n                  customTransition=\"all .5\"\r\n                  transitionDuration={1000}\r\n                  containerClass=\"carousel-container\"\r\n                  removeArrowOnDeviceType={[\"tablet\", \"mobile\"]}\r\n                  dotListClass=\"custom-dot-list-style\"\r\n                  itemClass=\"carousel-item-padding\"\r\n                  centerMode={false}\r\n                  slidesToSlide={3}\r\n                >\r\n                {this.state.dataMain.results.map(el => (\r\n                    el.profile_path ?\r\n                    <div key={el.id} className=\"main-carousel-img\">\r\n                      <Link to='/FilmPage'>\r\n                      <img className=\"poster-img-main rounded-img\"  onMouseOver={()=> {sessionStorage.removeItem(\"val\");sessionStorage.setItem(\"val\",JSON.stringify(el))}} src={`https://image.tmdb.org/t/p/original/${el.profile_path}`} alt={el.profile_path}/>\r\n                      </Link>\r\n                      <h2 className=\"star-name-carousel\"><div>{el.name}</div></h2>\r\n                    </div> : null\r\n                ))};\r\n                </Carousel>\r\n              </div>\r\n            );\r\n          }\r\n          \r\n        } else if ((this.state.type === \"actors\") && (this.state.dataMain.cast)) {\r\n          const responsive = {\r\n            superLargeDesktop: {\r\n              breakpoint: { max: 4000, min: 3000 },\r\n              items: 5\r\n            },\r\n            desktop: {\r\n              breakpoint: { max: 3000, min: 1024 },\r\n              items: 5\r\n            },\r\n            tablet: {\r\n              breakpoint: { max: 1024, min: 464 },\r\n              items: 4\r\n            },\r\n            mobile: {\r\n              breakpoint: { max: 464, min: 0 },\r\n              items: 2\r\n            }\r\n          };\r\n      \r\n          return(\r\n            <div className=\"main-carousel-wrapper\">\r\n              <Carousel                 \r\n                swipeable={false}\r\n                draggable={false}\r\n                showDots={false}\r\n                responsive={responsive}\r\n                ssr={true}\r\n                infinite={false}\r\n                autoPlaySpeed={1000}\r\n                keyBoardControl={true}\r\n                customTransition=\"all .5\"\r\n                transitionDuration={1000}\r\n                containerClass=\"carousel-container\"\r\n                removeArrowOnDeviceType={[\"tablet\", \"mobile\"]}\r\n                dotListClass=\"custom-dot-list-style\"\r\n                itemClass=\"carousel-item-padding\"\r\n                centerMode={false}\r\n                slidesToSlide={3}\r\n              >\r\n              {this.state.dataMain.cast.map(el => (\r\n                el.profile_path ?\r\n                <div>\r\n                  <div key={el.id} className=\"main-carousel-img\">\r\n                    {el.profile_path && <Link to='/FilmPage'><img className=\"poster-img-main rounded-img\"  onMouseOver={()=> {sessionStorage.removeItem(\"val\");sessionStorage.setItem(\"val\",JSON.stringify(el))}} src={`https://image.tmdb.org/t/p/original/${el.profile_path}`} alt={el.profile_path}/></Link>}\r\n                    <div><h2 className=\"star-name-carousel\"><div>{el.name}</div></h2></div>\r\n                  </div>\r\n                </div> : null\r\n              ))};\r\n              </Carousel>\r\n            </div>\r\n          );\r\n        }\r\n        \r\n        else {\r\n          return (<div>Wait a little</div>)\r\n        }\r\n    }\r\n}\r\n\r\nexport default CarouselMain;","C:\\Users\\Juliy\\Desktop\\CLONE RS\\CloneWars\\rsclone\\src\\components\\Movie.js",["142","143","144"],"import React from \"react\";\r\nimport noImage from \"./assets/noimage.jpg\";\r\nimport star from \"./assets/megastar.png\";\r\n\r\nconst Movie = (props) => {\r\n  return (\r\n    <div id=\"fp\" className=\"container-fluid wrapper wrapperStyle\">\r\n      <div id=\"upperBlock\" className=\"wrapper\">\r\n        <div className=\"row\"></div>\r\n        <div className=\"row\">\r\n          <h2 className=\"col\">{props.original_title}</h2>\r\n\r\n          <h4 className=\"col-auto\">\r\n            Average Vote: {props.vote_average}\r\n            <img src={star}></img>\r\n          </h4>\r\n\r\n          <h4 className=\"col-auto\">Votes: {props.vote_count}</h4>\r\n        </div>\r\n      </div>\r\n      <div id=\"briefInfo\" className=\"wrapper\">\r\n        <h5>Release Date: {props.release_date}</h5>\r\n        <div></div>\r\n      </div>\r\n\r\n      <div\r\n        id=\"photoVideo\"\r\n        className=\"row\"\r\n        style={{ padding: \"1% 5% 1% 5%\", margin: \"0%\", border: \"0%\" }}\r\n      >\r\n        {props.poster_path == null ? (\r\n          <img src={noImage} width=\"50%\" height=\"auto\" alt=\"card image\"></img>\r\n        ) : (\r\n          <img\r\n            width=\"50%\"\r\n            height=\"auto\"\r\n            src={`https://image.tmdb.org/t/p/w600_and_h900_bestv2${props.poster_path}`}\r\n            alt={props.release_date}\r\n            style={{ margin: \"2%\" }}\r\n          />\r\n        )}\r\n\r\n        {props.video ? (\r\n          <iframe\r\n            width=\"56%\"\r\n            height=\"auto\"\r\n            src={`https://www.youtube.com/embed/${props.video}`}\r\n            style={{ margin: \"2%\" }}\r\n          />\r\n        ) : (\r\n          <div\r\n            style={{ color: \"white\", margin: \"0% 5% 5% 1%\", maxWidth: \"45%\" }}\r\n          >\r\n            Sorry, there seems to be no video provided for this film. <hr />\r\n            The Universe wants you to watch it without spoilers, apparently.\r\n          </div>\r\n        )}\r\n      </div>\r\n      <div style={{ margin: \"8px\" }}>\r\n        <h4 style={{ fontWeight: \"bolder\" }}>Overview:</h4>\r\n        <h5> {props.overview}</h5>\r\n      </div>\r\n\r\n      <div id=\"videoCarousel\" className=\"wrapper\"></div>\r\n      <div id=\"photoCarousel\" className=\"wrapper\"></div>\r\n      <div id=\"cast\"></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Movie;\r\n",{"ruleId":"145","severity":1,"message":"146","line":5,"column":35,"nodeType":"147","messageId":"148","endLine":5,"endColumn":41},{"ruleId":"145","severity":1,"message":"149","line":5,"column":43,"nodeType":"147","messageId":"148","endLine":5,"endColumn":48},{"ruleId":"145","severity":1,"message":"150","line":5,"column":50,"nodeType":"147","messageId":"148","endLine":5,"endColumn":54},{"ruleId":"151","replacedBy":"152"},{"ruleId":"153","replacedBy":"154"},{"ruleId":"145","severity":1,"message":"155","line":1,"column":8,"nodeType":"147","messageId":"148","endLine":1,"endColumn":16},{"ruleId":"145","severity":1,"message":"156","line":7,"column":8,"nodeType":"147","messageId":"148","endLine":7,"endColumn":16},{"ruleId":"145","severity":1,"message":"157","line":14,"column":20,"nodeType":"147","messageId":"148","endLine":14,"endColumn":26},{"ruleId":"145","severity":1,"message":"158","line":16,"column":3,"nodeType":"147","messageId":"148","endLine":16,"endColumn":11},{"ruleId":"145","severity":1,"message":"159","line":19,"column":8,"nodeType":"147","messageId":"148","endLine":19,"endColumn":9},{"ruleId":"145","severity":1,"message":"160","line":19,"column":13,"nodeType":"147","messageId":"148","endLine":19,"endColumn":21},{"ruleId":"145","severity":1,"message":"161","line":24,"column":10,"nodeType":"147","messageId":"148","endLine":24,"endColumn":21},{"ruleId":"145","severity":1,"message":"162","line":26,"column":10,"nodeType":"147","messageId":"148","endLine":26,"endColumn":24},{"ruleId":"163","severity":1,"message":"164","line":134,"column":7,"nodeType":"165","endLine":134,"endColumn":82},{"ruleId":"163","severity":1,"message":"164","line":135,"column":7,"nodeType":"165","endLine":135,"endColumn":44},{"ruleId":"166","severity":1,"message":"167","line":160,"column":17,"nodeType":"165","endLine":160,"endColumn":65},{"ruleId":"163","severity":1,"message":"164","line":170,"column":21,"nodeType":"165","endLine":170,"endColumn":45},{"ruleId":"163","severity":1,"message":"164","line":211,"column":19,"nodeType":"165","endLine":211,"endColumn":132},{"ruleId":"163","severity":1,"message":"164","line":215,"column":21,"nodeType":"165","endLine":215,"endColumn":45},{"ruleId":"145","severity":1,"message":"168","line":6,"column":8,"nodeType":"147","messageId":"148","endLine":6,"endColumn":15},{"ruleId":"145","severity":1,"message":"169","line":7,"column":8,"nodeType":"147","messageId":"148","endLine":7,"endColumn":24},{"ruleId":"145","severity":1,"message":"170","line":12,"column":7,"nodeType":"147","messageId":"148","endLine":12,"endColumn":15},{"ruleId":"145","severity":1,"message":"171","line":1,"column":17,"nodeType":"147","messageId":"148","endLine":1,"endColumn":26},{"ruleId":"145","severity":1,"message":"172","line":9,"column":10,"nodeType":"147","messageId":"148","endLine":9,"endColumn":16},{"ruleId":"145","severity":1,"message":"173","line":10,"column":10,"nodeType":"147","messageId":"148","endLine":10,"endColumn":21},{"ruleId":"145","severity":1,"message":"174","line":10,"column":23,"nodeType":"147","messageId":"148","endLine":10,"endColumn":31},{"ruleId":"145","severity":1,"message":"175","line":10,"column":33,"nodeType":"147","messageId":"148","endLine":10,"endColumn":51},{"ruleId":"145","severity":1,"message":"157","line":14,"column":22,"nodeType":"147","messageId":"148","endLine":14,"endColumn":28},{"ruleId":"145","severity":1,"message":"146","line":15,"column":5,"nodeType":"147","messageId":"148","endLine":15,"endColumn":11},{"ruleId":"145","severity":1,"message":"149","line":16,"column":5,"nodeType":"147","messageId":"148","endLine":16,"endColumn":10},{"ruleId":"145","severity":1,"message":"176","line":2,"column":17,"nodeType":"147","messageId":"148","endLine":2,"endColumn":26},{"ruleId":"145","severity":1,"message":"177","line":2,"column":28,"nodeType":"147","messageId":"148","endLine":2,"endColumn":36},{"ruleId":"145","severity":1,"message":"178","line":3,"column":8,"nodeType":"147","messageId":"148","endLine":3,"endColumn":25},{"ruleId":"145","severity":1,"message":"179","line":7,"column":8,"nodeType":"147","messageId":"148","endLine":7,"endColumn":12},{"ruleId":"145","severity":1,"message":"180","line":8,"column":8,"nodeType":"147","messageId":"148","endLine":8,"endColumn":19},{"ruleId":"145","severity":1,"message":"181","line":9,"column":8,"nodeType":"147","messageId":"148","endLine":9,"endColumn":14},{"ruleId":"145","severity":1,"message":"181","line":3,"column":10,"nodeType":"147","messageId":"148","endLine":3,"endColumn":16},{"ruleId":"145","severity":1,"message":"182","line":3,"column":18,"nodeType":"147","messageId":"148","endLine":3,"endColumn":23},{"ruleId":"145","severity":1,"message":"183","line":3,"column":25,"nodeType":"147","messageId":"148","endLine":3,"endColumn":34},{"ruleId":"145","severity":1,"message":"184","line":3,"column":36,"nodeType":"147","messageId":"148","endLine":3,"endColumn":39},{"ruleId":"145","severity":1,"message":"185","line":3,"column":41,"nodeType":"147","messageId":"148","endLine":3,"endColumn":44},{"ruleId":"145","severity":1,"message":"186","line":3,"column":46,"nodeType":"147","messageId":"148","endLine":3,"endColumn":51},{"ruleId":"145","severity":1,"message":"187","line":4,"column":8,"nodeType":"147","messageId":"148","endLine":4,"endColumn":13},{"ruleId":"188","severity":1,"message":"189","line":8,"column":5,"nodeType":"190","messageId":"191","endLine":11,"endColumn":6},{"ruleId":"145","severity":1,"message":"192","line":4,"column":8,"nodeType":"147","messageId":"148","endLine":4,"endColumn":15},{"ruleId":"166","severity":1,"message":"167","line":34,"column":22,"nodeType":"165","endLine":34,"endColumn":57},{"ruleId":"193","severity":1,"message":"194","line":51,"column":16,"nodeType":"165","endLine":51,"endColumn":133},{"ruleId":"145","severity":1,"message":"192","line":4,"column":8,"nodeType":"147","messageId":"148","endLine":4,"endColumn":15},{"ruleId":"145","severity":1,"message":"181","line":2,"column":10,"nodeType":"147","messageId":"148","endLine":2,"endColumn":16},{"ruleId":"145","severity":1,"message":"182","line":2,"column":18,"nodeType":"147","messageId":"148","endLine":2,"endColumn":23},{"ruleId":"145","severity":1,"message":"183","line":2,"column":25,"nodeType":"147","messageId":"148","endLine":2,"endColumn":34},{"ruleId":"188","severity":1,"message":"189","line":6,"column":3,"nodeType":"190","messageId":"191","endLine":8,"endColumn":4},{"ruleId":"195","severity":1,"message":"196","line":22,"column":17,"nodeType":"165","endLine":26,"endColumn":18},{"ruleId":"197","severity":1,"message":"198","line":33,"column":15,"nodeType":"165","endLine":33,"endColumn":46},{"ruleId":"166","severity":1,"message":"167","line":35,"column":17,"nodeType":"165","endLine":35,"endColumn":63},{"ruleId":"163","severity":1,"message":"164","line":52,"column":9,"nodeType":"165","endLine":52,"endColumn":63},{"ruleId":"199","severity":1,"message":"200","line":54,"column":13,"nodeType":"165","endLine":58,"endColumn":15},{"ruleId":"163","severity":1,"message":"164","line":65,"column":9,"nodeType":"165","endLine":65,"endColumn":71},{"ruleId":"145","severity":1,"message":"172","line":3,"column":10,"nodeType":"147","messageId":"148","endLine":3,"endColumn":16},{"ruleId":"145","severity":1,"message":"172","line":4,"column":10,"nodeType":"147","messageId":"148","endLine":4,"endColumn":16},{"ruleId":"145","severity":1,"message":"157","line":6,"column":20,"nodeType":"147","messageId":"148","endLine":6,"endColumn":26},{"ruleId":"145","severity":1,"message":"146","line":7,"column":3,"nodeType":"147","messageId":"148","endLine":7,"endColumn":9},{"ruleId":"145","severity":1,"message":"149","line":8,"column":3,"nodeType":"147","messageId":"148","endLine":8,"endColumn":8},{"ruleId":"166","severity":1,"message":"167","line":15,"column":13,"nodeType":"165","endLine":15,"endColumn":29},{"ruleId":"199","severity":1,"message":"200","line":32,"column":11,"nodeType":"165","endLine":32,"endColumn":73},{"ruleId":"193","severity":1,"message":"194","line":44,"column":11,"nodeType":"165","endLine":49,"endColumn":13},"no-unused-vars","'Switch' is defined but never used.","Identifier","unusedVar","'Route' is defined but never used.","'Link' is defined but never used.","no-native-reassign",["201"],"no-negated-in-lhs",["202"],"'ReactDOM' is defined but never used.","'MovieRow' is defined but never used.","'Router' is defined but never used.","'Redirect' is defined but never used.","'$' is defined but never used.","'contains' is defined but never used.","'GoogleLogin' is defined but never used.","'useTranslation' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'Backend' is defined but never used.","'LanguageDetector' is defined but never used.","'Language' is assigned a value but never used.","'createRef' is defined but never used.","'Helmet' is defined but never used.","'ContextMenu' is defined but never used.","'MenuItem' is defined but never used.","'ContextMenuTrigger' is defined but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","'ReactHTMLDatalist' is defined but never used.","'Form' is defined but never used.","'FormControl' is defined but never used.","'Button' is defined but never used.","'Modal' is defined but never used.","'Container' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'Image' is defined but never used.","'close' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'i18next' is defined but never used.","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","no-global-assign","no-unsafe-negation"]