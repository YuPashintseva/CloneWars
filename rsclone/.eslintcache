[{"C:\\Users\\KiguradzeLeo\\Documents\\GitHub\\CloneWars\\rsclone\\src\\index.js":"1","C:\\Users\\KiguradzeLeo\\Documents\\GitHub\\CloneWars\\rsclone\\src\\reportWebVitals.js":"2","C:\\Users\\KiguradzeLeo\\Documents\\GitHub\\CloneWars\\rsclone\\src\\App.js":"3","C:\\Users\\KiguradzeLeo\\Documents\\GitHub\\CloneWars\\rsclone\\src\\components\\FilmList.js":"4","C:\\Users\\KiguradzeLeo\\Documents\\GitHub\\CloneWars\\rsclone\\src\\components\\FilmPage.js":"5"},{"size":517,"mtime":1610076248533,"results":"6","hashOfConfig":"7"},{"size":375,"mtime":1610076248549,"results":"8","hashOfConfig":"7"},{"size":1537,"mtime":1610261361209,"results":"9","hashOfConfig":"7"},{"size":3437,"mtime":1610207456276,"results":"10","hashOfConfig":"7"},{"size":1833,"mtime":1610260499781,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"1oj9p7d",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"14"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\KiguradzeLeo\\Documents\\GitHub\\CloneWars\\rsclone\\src\\index.js",[],["24","25"],"C:\\Users\\KiguradzeLeo\\Documents\\GitHub\\CloneWars\\rsclone\\src\\reportWebVitals.js",[],"C:\\Users\\KiguradzeLeo\\Documents\\GitHub\\CloneWars\\rsclone\\src\\App.js",["26","27","28","29","30","31","32","33","34"],"C:\\Users\\KiguradzeLeo\\Documents\\GitHub\\CloneWars\\rsclone\\src\\components\\FilmList.js",["35"],"import {filmPage} from \"./FilmPage.js\";\r\n\r\nimport React from 'react';\r\nimport Carousel from \"react-multi-carousel\";\r\nimport 'react-multi-carousel/lib/styles.css';\r\nimport star from './assets/star.png'\r\nimport play from './assets/play-button.png'\r\n\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Link\r\n  } from \"react-router-dom\";\r\n\r\nconst responsive = {\r\n    superLargeDesktop: {\r\n      breakpoint: { max: 4000, min: 3000 },\r\n      items: 6\r\n    },\r\n    desktop: {\r\n      breakpoint: { max: 3000, min: 1024 },\r\n      items: 6\r\n    },\r\n    tablet: {\r\n      breakpoint: { max: 1024, min: 464 },\r\n      items: 2\r\n    },\r\n    mobile: {\r\n      breakpoint: { max: 464, min: 0 },\r\n      items: 1\r\n    }\r\n  };\r\n\r\nclass FilmList extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {data: []};\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const response = await fetch('https://api.themoviedb.org/3/movie/popular?api_key=fb0fcc2d34caffc53da53d676fbf678a&language=en-US&page=1');\r\n        const json = await response.json();\r\n        this.setState({ data: json });\r\n    }\r\n\r\n    render() {\r\n        //\r\n        if (this.state.data.results) {\r\n            console.log(this.state.data.results[0]);\r\n            return (\r\n                <Carousel\r\n                swipeable={false}\r\n                draggable={false}\r\n                showDots={false}\r\n                responsive={responsive}\r\n                ssr={true}\r\n                infinite={true}\r\n                autoPlaySpeed={1000}\r\n                keyBoardControl={true}\r\n                customTransition=\"all .5\"\r\n                transitionDuration={1000}\r\n                containerClass=\"carousel-container\"\r\n                removeArrowOnDeviceType={[\"tablet\", \"mobile\"]}\r\n                dotListClass=\"custom-dot-list-style\"\r\n                itemClass=\"carousel-item-padding\"\r\n                centerMode={false}\r\n                slidesToSlide={3}\r\n            >\r\n            \r\n            {this.state.data.results.map(el => (\r\n                <div>\r\n                    <div className=\"films-list-img App-link\"    onClick={()=>filmPage(el)}>\r\n                        <Router><Link to= \"/FilmPage\">\r\n                        <img src={`https://image.tmdb.org/t/p/original/${el.poster_path}`} alt={el.title}/>\r\n                        <div className=\"bottom-content-wrapper\">\r\n                            <div className=\"rating\">\r\n                                <div><img src={star} alt=\"star\" /></div>\r\n                                <div className=\"vote_average\">{el.vote_average}</div>\r\n                            </div>\r\n                            <div className=\"film-title\">{el.title}</div>\r\n                            <button type=\"button\" className=\"add-to-watchlist-btn\">+ Watchlist</button>\r\n                            <div className=\"additional-info\">\r\n                                <div>Trailer</div>\r\n                                <div>Information</div>\r\n                            </div>\r\n                        </div>\r\n                        </Link><Switch><Route path=\"/FilmPage\"/></Switch></Router>\r\n                    </div>\r\n                   \r\n                </div>\r\n            ))};\r\n                \r\n            </Carousel>\r\n            );\r\n        } else {\r\n            return (\r\n                <div>Wait...</div>\r\n            );\r\n        }\r\n    \r\n    }\r\n\r\n}\r\n\r\nexport default FilmList;","C:\\Users\\KiguradzeLeo\\Documents\\GitHub\\CloneWars\\rsclone\\src\\components\\FilmPage.js",["36"],{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","severity":1,"message":"42","line":2,"column":8,"nodeType":"43","messageId":"44","endLine":2,"endColumn":16},{"ruleId":"45","severity":1,"message":"46","line":13,"column":3,"nodeType":"47","endLine":13,"endColumn":57},{"ruleId":"48","severity":1,"message":"49","line":13,"column":36,"nodeType":"50","messageId":"51","endLine":13,"endColumn":56},{"ruleId":"45","severity":1,"message":"46","line":21,"column":9,"nodeType":"47","endLine":21,"endColumn":59},{"ruleId":"48","severity":1,"message":"49","line":21,"column":38,"nodeType":"50","messageId":"51","endLine":21,"endColumn":58},{"ruleId":"45","severity":1,"message":"46","line":24,"column":9,"nodeType":"47","endLine":24,"endColumn":59},{"ruleId":"48","severity":1,"message":"49","line":24,"column":38,"nodeType":"50","messageId":"51","endLine":24,"endColumn":58},{"ruleId":"45","severity":1,"message":"46","line":27,"column":9,"nodeType":"47","endLine":27,"endColumn":68},{"ruleId":"48","severity":1,"message":"49","line":27,"column":47,"nodeType":"50","messageId":"51","endLine":27,"endColumn":67},{"ruleId":"41","severity":1,"message":"52","line":7,"column":8,"nodeType":"43","messageId":"44","endLine":7,"endColumn":12},{"ruleId":"53","severity":1,"message":"54","line":20,"column":22,"nodeType":"47","endLine":20,"endColumn":38},"no-native-reassign",["55"],"no-negated-in-lhs",["56"],"no-unused-vars","'FilmPage' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-script-url","Script URL is a form of eval.","Literal","unexpectedScriptURL","'play' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-global-assign","no-unsafe-negation"]