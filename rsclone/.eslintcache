[{"C:\\Users\\Juliy\\Desktop\\111\\CloneWars\\rsclone\\src\\index.js":"1","C:\\Users\\Juliy\\Desktop\\111\\CloneWars\\rsclone\\src\\App.js":"2","C:\\Users\\Juliy\\Desktop\\111\\CloneWars\\rsclone\\src\\components\\Trailer.js":"3","C:\\Users\\Juliy\\Desktop\\111\\CloneWars\\rsclone\\src\\components\\FilmPage.js":"4","C:\\Users\\Juliy\\Desktop\\111\\CloneWars\\rsclone\\src\\components\\Statistics.js":"5","C:\\Users\\Juliy\\Desktop\\111\\CloneWars\\rsclone\\src\\components\\MovieRow.js":"6","C:\\Users\\Juliy\\Desktop\\111\\CloneWars\\rsclone\\src\\components\\FilmList.js":"7","C:\\Users\\Juliy\\Desktop\\111\\CloneWars\\rsclone\\src\\components\\WatchList.js":"8","C:\\Users\\Juliy\\Desktop\\111\\CloneWars\\rsclone\\src\\components\\ModalWindow.js":"9","C:\\Users\\Juliy\\Desktop\\111\\CloneWars\\rsclone\\src\\components\\CaurouselMain.js":"10","C:\\Users\\Juliy\\Desktop\\111\\CloneWars\\rsclone\\src\\components\\GoogleAuth.js":"11"},{"size":677,"mtime":1611219687996,"results":"12","hashOfConfig":"13"},{"size":9239,"mtime":1611237499998,"results":"14","hashOfConfig":"13"},{"size":649,"mtime":1611219687978,"results":"15","hashOfConfig":"13"},{"size":3102,"mtime":1611219687960,"results":"16","hashOfConfig":"13"},{"size":2687,"mtime":1611219687978,"results":"17","hashOfConfig":"13"},{"size":676,"mtime":1611219687970,"results":"18","hashOfConfig":"13"},{"size":5869,"mtime":1611219687959,"results":"19","hashOfConfig":"13"},{"size":2978,"mtime":1611219687978,"results":"20","hashOfConfig":"13"},{"size":4306,"mtime":1611219687970,"results":"21","hashOfConfig":"13"},{"size":8112,"mtime":1611225141059,"results":"22","hashOfConfig":"13"},{"size":1767,"mtime":1611240125262,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"27"},"zq7fnj",{"filePath":"28","messages":"29","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"27"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"27"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"27"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"27"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"27"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"27"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Juliy\\Desktop\\111\\CloneWars\\rsclone\\src\\index.js",["54","55","56","57"],"import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\n//import reportWebVitals from './reportWebVitals';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n       <Router>\r\n    <App />\r\n    </Router>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n//reportWebVitals();\r\n",["58","59"],"C:\\Users\\Juliy\\Desktop\\111\\CloneWars\\rsclone\\src\\App.js",["60","61","62","63","64","65","66","67","68","69","70"],"C:\\Users\\Juliy\\Desktop\\111\\CloneWars\\rsclone\\src\\components\\Trailer.js",["71","72","73","74","75","76","77","78"],"\r\nimport React from 'react';\r\nimport { Button, Modal, Container, Row, Col, Image } from 'react-bootstrap';\r\nimport close from './assets/close.png'\r\n\r\n\r\nclass Trailer extends React.Component{\r\n    constructor() {\r\n        super();\r\n        \r\n    }\r\n    \r\n    render() {  \r\n            return (\r\n                <div id = \"fp\" className=\"container-fluid wrapperStyle\">\r\n                    <div className=\"top-menu-wrapper\">\r\n                        <div className=\"head-text\">Trailer</div>\r\n                    </div>\r\n                    <div>\r\n                    </div>\r\n                </div>\r\n            )\r\n\r\n    }\r\n}\r\n\r\nexport default Trailer;","C:\\Users\\Juliy\\Desktop\\111\\CloneWars\\rsclone\\src\\components\\FilmPage.js",["79","80","81","82"],"import React from 'react';\r\n\r\nimport star from './assets/megastar.png';\r\nimport FilmList from './FilmList';\r\nimport { Helmet } from \"react-helmet\";\r\nimport CarouselMain from './CaurouselMain';\r\n\r\n\r\n class FilmPage extends React.Component{\r\n    constructor() {\r\n        super();\r\n        this.state = {video:\"\",dat:JSON.parse(sessionStorage.getItem(\"val\"))};\r\n    }\r\n    async componentDidMount(){\r\n     const response = await fetch(`https://api.themoviedb.org/3/movie/${this.state.dat.id}/videos?api_key=fb0fcc2d34caffc53da53d676fbf678a&language=en-US`);\r\n     const res = await response.json();\r\n     this.setState({ video: res.results[0]?res.results[0].key:''});\r\n     let val = JSON.parse(sessionStorage.getItem(\"val\"));\r\n     this.setState({dat: val});\r\n     \r\n    }\r\n\r\n    render(){\r\n       \r\n        return(\r\n            \r\n            <div id = \"fp\" className=\" container-fluid wrapperStyle\">\r\n               \r\n               <div id = \"upperBlock\" className=\"wrapper\">\r\n                 <div className=\"row\"></div>\r\n                 <div className=\"row\">\r\n\r\n                     <h2 className=\"col\">{this.state.dat.original_title}</h2>\r\n                    \r\n                     \r\n                     <h4 className=\"col-auto\">Average Vote: {this.state.dat.vote_average}\r\n                     <img src={star} ></img>\r\n                     </h4>\r\n                     \r\n                     \r\n                     <h4 className=\"col-auto\">Votes: {this.state.dat.vote_count}</h4>\r\n                \r\n               </div>\r\n               </div>\r\n               <div id = \"briefInfo\" className=\"wrapper\">\r\n                   <h5>Release Date: {this.state.dat.release_date}</h5>\r\n                   <div></div>\r\n                </div>\r\n\r\n               <div id = \"photoVideo\" className=\"row\" style={{padding:'1% 5% 1% 5%', margin:'0%', border:'0%'}}>\r\n                   \r\n               <img  width=\"36%\" height =\"auto\" src={`https://image.tmdb.org/t/p/original/${this.state.dat.poster_path}`} alt={this.state.dat.title} style={{ margin:'2%'}}/>\r\n               {this.state.video?(\r\n               <iframe  width=\"56%\" height=\"auto\" src={`https://www.youtube.com/embed/${this.state.video}`} style={{ margin:'2%'}}/>\r\n               ):(\r\n               <div style={{color:'white', margin:'0% 5% 5% 1%',maxWidth:'45%'}}>Sorry, there seems to be no video provided for this film. <hr/>The Universe wants you to watch it without spoilers, apparently.</div>\r\n               )}\r\n               </div>\r\n               <div style={{  margin: \"8px\"}}>\r\n               <h4 style={{  fontWeight: \"bolder\"}}>Overview:</h4>\r\n              <h5 > {this.state.dat.overview}</h5></div>\r\n             \r\n               <div id = \"videoCarousel\" className=\"wrapper\"></div>\r\n               <div id = \"photoCarousel\" className=\"wrapper\"></div>\r\n               <div id = \"cast\"></div>\r\n               <div className=\"head-text\">\r\n                Actors\r\n               </div>\r\n               <CarouselMain type={\"actors\"} filmId={this.state.dat.id} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default FilmPage;","C:\\Users\\Juliy\\Desktop\\111\\CloneWars\\rsclone\\src\\components\\Statistics.js",["83","84"],"import React from 'react';\r\nimport Chart from \"react-google-charts\";\r\n\r\nclass Statistics extends React.Component {\r\n    constructor(){\r\n        super();\r\n        this.state={\r\n         data: JSON.parse(sessionStorage.getItem('fullInf')),\r\n         current:'',\r\n         switcher:0,\r\n        };\r\n       \r\n    }\r\n \r\n   componentDidMount(){\r\n     this.setState({current: this.bestRatings()});\r\n     \r\n   }\r\n\r\n    switch(){\r\n      let sw = this.state.switcher;\r\n      if(sw===0)this.setState({current:this.bestRatings()});\r\n      else this.setState({current:this.mostOftenSeen()});\r\n    }\r\n    bestRatings() {\r\n      let all = this.state.data;\r\n      all.sort((a,b)=>parseFloat(b.vote_average)-parseFloat(a.vote_average));\r\n      all = all.slice(0,5);\r\n      all = all.map(el=>[el.original_title,parseFloat(el.vote_average)]);\r\n      all.unshift(['Film','Rating']);\r\n      return all;\r\n    }\r\n    mostOftenSeen() {\r\n      let all = this.state.data;\r\n      all.sort((a,b)=>parseFloat(b.popularity)-parseFloat(a.popularity));\r\n      all = all.slice(0,5);\r\n      all = all.map(el=>[el.original_title,parseFloat(el.popularity)]);\r\n      all.unshift(['Film','Popularity']);\r\n      return all;\r\n    }\r\n        render () {\r\n            return (\r\n\r\n             <div id = 'st' className = 'container-fluid'>\r\n               <div className='row' style={{margin: '1%'}}>\r\n              <button id = 'bestRatings' onClick={()=>this.setState({switcher:0}),()=> this.switch()}>Best Ratings</button>\r\n              <button id = 'mostOftenSeen' onMouseUp={()=>this.setState({switcher:1}), ()=>this.switch()}>Most Often Seen</button>\r\n              <button id = 'mostRecent' >Most Recent</button>\r\n              <button id = 'youWereInterested' >You Were Interested</button>\r\n              </div>\r\n              <div id = 'columnchart_values' style={{height:'90vh', backgroundColor: 'white', padding: '2%'}}>\r\n              \r\n  <Chart\r\n              \r\n  width={'100%'}\r\n  height={'95%'}\r\n  chartType=\"Bar\"\r\n  loader={<div>Loading Chart</div>}\r\n  data={this.state.current}\r\n\r\n  options={{\r\n  \r\n    chart:{\r\n    title: 'Population of Largest U.S. Cities',\r\n    subtitle: 'Sales, Expenses, and Profit: 2014-2017',\r\n    \r\n  \r\n    },\r\n    \r\n  }}\r\n  // For tests\r\n  rootProps={{ 'data-testid': '1' }}\r\n/>\r\n            </div>\r\n             </div>\r\n            )\r\n        }\r\n         \r\n    }\r\n    export default Statistics;\r\n\r\n\r\n    /*[\r\n    ['Film', '2010 Population', '2000 Population'],\r\n    ['New York City, NY', 8175000, 8008000],\r\n    ['Los Angeles, CA', 3792000, 3694000],\r\n    ['Chicago, IL', 2695000, 2896000],\r\n    ['Houston, TX', 2099000, 1953000],\r\n    ['Philadelphia, PA', 1526000, 1517000],\r\n  ]\r\n  */","C:\\Users\\Juliy\\Desktop\\111\\CloneWars\\rsclone\\src\\components\\MovieRow.js",[],"C:\\Users\\Juliy\\Desktop\\111\\CloneWars\\rsclone\\src\\components\\FilmList.js",["85","86","87","88","89"],"import React, { createRef } from 'react';\r\nimport Carousel from \"react-multi-carousel\";\r\nimport ModalWindow from './ModalWindow';\r\nimport CaurouselMain from './CaurouselMain';\r\nimport 'react-multi-carousel/lib/styles.css';\r\nimport star from './assets/star.png'\r\nimport play from './assets/play.png'\r\nimport info from './assets/info-grey.png';\r\nimport { Helmet } from \"react-helmet\";\r\n\r\n\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Link\r\n  } from \"react-router-dom\";\r\n\r\n\r\nconst responsive = {\r\n    superLargeDesktop: {\r\n      breakpoint: { max: 4000, min: 3000 },\r\n      items: 5\r\n    },\r\n    desktop: {\r\n      breakpoint: { max: 3000, min: 1024 },\r\n      items: 5\r\n    },\r\n    tablet: {\r\n      breakpoint: { max: 1024, min: 464 },\r\n      items: 3\r\n    },\r\n    mobile: {\r\n      breakpoint: { max: 464, min: 0 },\r\n      items: 1\r\n    }\r\n  };\r\n\r\nclass FilmList extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {data: [], dataMain: [], value: \"\", showHide: false, currFilmInfo: {}, showAlert: false};\r\n        this.handleModalShowHide = this.handleModalShowHide.bind(this);\r\n        this.handleModalShowHide2 = this.handleModalShowHide2.bind(this);\r\n\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const response = await fetch('https://api.themoviedb.org/3/movie/popular?api_key=fb0fcc2d34caffc53da53d676fbf678a&language=en-US&page=1');\r\n        const json = await response.json();\r\n        this.setState({ data: json});\r\n        sessionStorage.setItem('fullInf',JSON.stringify(json.results))\r\n    }\r\n\r\n    returnState(){\r\n        return this.state;\r\n    }\r\n\r\n    handleModalShowHide(film, isneedAlert) {\r\n        this.setState({ showHide: !this.state.showHide });\r\n        this.setState({ showAlert: isneedAlert });\r\n        this.setState({ currFilmInfo: film });\r\n    }\r\n\r\n    handleModalShowHide2() {\r\n        this.setState({ showHide: !this.state.showHide });\r\n    }\r\n\r\n\r\n    render() {\r\n        let mod = '';\r\n        if (this.state.data.results) {\r\n            if (this.state.showHide) {\r\n                mod = <ModalWindow handleModalShowHide = {this.handleModalShowHide2} filmInfo = {this.state.currFilmInfo} toWatchList={this.state.showAlert} />\r\n            }\r\n            return (\r\n                <div>\r\n                <CaurouselMain type={\"films\"} />\r\n                <div className=\"head-text\">\r\n                    What to watch\r\n                </div>\r\n                {mod}\r\n                <Carousel\r\n                swipeable={false}\r\n                draggable={false}\r\n                showDots={false}\r\n                responsive={responsive}\r\n                ssr={true}\r\n                infinite={false}\r\n                autoPlaySpeed={1000}\r\n                keyBoardControl={true}\r\n                customTransition=\"all .5\"\r\n                transitionDuration={1000}\r\n                containerClass=\"carousel-container\"\r\n                removeArrowOnDeviceType={[\"tablet\", \"mobile\"]}\r\n                dotListClass=\"custom-dot-list-style\"\r\n                itemClass=\"carousel-item-padding\"\r\n                centerMode={false}\r\n                slidesToSlide={3}\r\n            >\r\n            \r\n            {this.state.data.results.map(el => (\r\n                \r\n                <div element={el.id} key ={el.id}>\r\n                    <div className=\"films-list-img App-link\" >\r\n                      <Link style={{ textDecoration: 'none', color: 'white' }} to= \"/FilmPage\" > \r\n                            <img className=\"poster-img\" onMouseOver={()=> {sessionStorage.removeItem(\"val\");sessionStorage.setItem(\"val\",JSON.stringify(el))}}  src={`https://image.tmdb.org/t/p/original/${el.poster_path}`} alt={el.title}/>\r\n                            </Link>    \r\n                       \r\n                        <div className=\"bottom-content-wrapper\">\r\n                            <div className=\"rating\">\r\n                                <div><img src={star} alt=\"star icon\" /></div>\r\n                                <div className=\"vote_average\">{el.vote_average}</div>\r\n                            </div>\r\n                           <Link style={{ textDecoration: 'none', color: 'white' }} to= \"/FilmPage\">\r\n                                <div className=\"film-title\" onMouseOver={()=>{ sessionStorage.removeItem(\"val\");sessionStorage.setItem(\"val\",JSON.stringify(el))}}>{el.title}</div>\r\n                            </Link> \r\n                            \r\n                            <button type=\"button\" className=\"add-to-watchlist-btn\" onClick = {() => {this.handleModalShowHide(el, true); this.props.watchListincrement(el.id); }}>+ Watchlist</button>\r\n                            <div className=\"additional-info\">\r\n                                <Link to= {{pathname:'/Trailer',testinfo:'test'}}> \r\n                                    <div className=\"trailer\">                                \r\n                                        <img src={play} alt=\"play button\" className=\"play-button\"/>  Trailer\r\n                                    </div>\r\n                                </Link>\r\n                                <div className=\"info-button-wrapper\">\r\n                                    <img src={info} alt=\"info button\" className=\"info-button\" onClick = {() => this.handleModalShowHide(el, false)}/> \r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                   \r\n                </div>\r\n            ))};\r\n                \r\n            </Carousel>\r\n            <div className=\"head-text\">\r\n                Popular people\r\n            </div>\r\n            <CaurouselMain type={\"people\"} />\r\n            </div>\r\n            );\r\n        } else {\r\n            return (\r\n                <div>Wait...</div>\r\n            );\r\n        }\r\n    \r\n    }\r\n\r\n}\r\n\r\n\r\nexport default FilmList;","C:\\Users\\Juliy\\Desktop\\111\\CloneWars\\rsclone\\src\\components\\WatchList.js",["90","91","92"],"import React from 'react';\r\nimport { Button, Modal, Container, Row, Col, Image } from 'react-bootstrap';\r\nimport close from './assets/close.png'\r\n\r\n\r\nclass Watchlist extends React.Component{\r\n    constructor() {\r\n        super();\r\n        this.state = {data: []};\r\n        this.updateWatchList = this.updateWatchList.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        let filmsList = JSON.parse(localStorage.getItem('films'));\r\n        this.setState({data: filmsList});\r\n    }\r\n\r\n    // for removing id from watchList\r\n    updateWatchList(filmID) {\r\n        let currentArray = this.state.data;\r\n        const idx = currentArray.indexOf(filmID);\r\n        currentArray.splice(idx, 1);\r\n        currentArray.splice(idx, 1);\r\n        localStorage.setItem('films', JSON.stringify(currentArray));\r\n        this.setState({data: currentArray});\r\n        console.log('this is it'+ currentArray)\r\n    }\r\n    \r\n    render() {\r\n        \r\n        if (this.state.data.length > 0) {\r\n            console.log(\"State\",this.state.data)\r\n          \r\n            return (\r\n                <div id = \"fp\" className=\"container-fluid wrapperStyle\">\r\n                    <div className=\"top-menu-wrapper\">\r\n                        <div className=\"head-text\">Your Watchlist</div>\r\n                        <button className=\"back-button\">Home</button>\r\n                    </div>\r\n                    <div>\r\n                    {this.state.data.map(el => (\r\n                        <Row className=\"row-bottom-padding\">\r\n                            <Col xs={6} md={4}>\r\n                                {el[1] ? <Image className=\"poster-img-modal img-watchlist\" src={`https://image.tmdb.org/t/p/original/${el[1]}`} alt={el[0]} thumbnail />: null}\r\n                            </Col>\r\n                            <Col xs={11} md={7}>\r\n                                {el[4] ? <div><strong>Title: </strong> {el[4]}</div> : null}\r\n                                {el[2] ? <div><strong>Release date: </strong>  {el[2]}</div> : null}\r\n                                {el[3] ? <div><strong>Stars: </strong> {el[3]}</div> : null}\r\n                                {el[5] ? <div><strong>Overview: </strong> {el[5]}</div> : null}\r\n                            </Col>\r\n                            <Col xs={1} md={1}>\r\n                                {el[0] ? <div className=\"background-close-btn\"><Image className=\"close-btn-img\" src={close} alt=\"close button\" onClick = {() => {this.updateWatchList(el[0]); }}/></div> : null}\r\n                            </Col>\r\n                        </Row>\r\n                        \r\n                    ))}\r\n                    </div>\r\n                </div>\r\n            )\r\n        } else {\r\n            return (<div id = \"fp\" className=\"container-fluid wrapperStyle\">\r\n                        <div className=\"head-text\">Your Watchlist</div>\r\n                        Nothing was found\r\n                    </div>);\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport default Watchlist;","C:\\Users\\Juliy\\Desktop\\111\\CloneWars\\rsclone\\src\\components\\ModalWindow.js",["93"],"import React from 'react'\r\nimport { Button, Modal, Container, Row, Col, Image } from 'react-bootstrap'\r\nimport { Helmet } from \"react-helmet\";\r\n\r\nclass ModalWindow extends React.Component{\r\n    render(){\r\n        let msgText = 'Successfully added to WatchList';\r\n        if (this.props.toWatchList) {\r\n            if (localStorage.getItem('films')) {\r\n                let arr = JSON.parse(localStorage.getItem('films'));\r\n                if (! arr.includes(this.props.filmInfo.id)) {\r\n                    arr.push(this.props.filmInfo.id);\r\n                    let infoArr = [];\r\n                    infoArr.push(this.props.filmInfo.id);\r\n                    infoArr.push(this.props.filmInfo.poster_path);\r\n                    infoArr.push(this.props.filmInfo.release_date);\r\n                    infoArr.push(this.props.filmInfo.vote_average);\r\n                    infoArr.push(this.props.filmInfo.title);\r\n                    infoArr.push(this.props.filmInfo.overview);\r\n                    arr.push(infoArr);\r\n                } else {\r\n                    msgText = 'It is already in Watchlist';\r\n                }\r\n                localStorage.setItem('films', JSON.stringify(arr));\r\n            } else { \r\n                console.log(\"filmInfo\",this.props.filmInfo);\r\n                localStorage.setItem('films', JSON.stringify([this.props.filmInfo.id, [this.props.filmInfo.id, this.props.filmInfo.poster_path,this.props.filmInfo.release_date, this.props.filmInfo.vote_average, this.props.filmInfo.title, this.props.filmInfo.overview]]));\r\n            }\r\n            return(\r\n                <div>\r\n                    <Modal className=\"main-modal\" show={true} size=\"lg\" aria-labelledby=\"contained-modal-title-vcenter\" centered>\r\n                        <Modal.Header closeButton onClick={this.props.handleModalShowHide}>\r\n                         <Modal.Title id=\"contained-modal-title-vcenter\">{this.props.filmInfo.original_title}</Modal.Title>\r\n                        </Modal.Header>\r\n                        <Modal.Body className=\"show-grid\">\r\n                        <Container>\r\n                            <Row>\r\n                               {msgText}\r\n                            </Row>\r\n                        </Container>\r\n                        \r\n                        </Modal.Body>\r\n                        <Modal.Footer>\r\n                        <Button variant=\"secondary\" onClick={this.props.handleModalShowHide}>\r\n                            Close\r\n                        </Button>\r\n                        </Modal.Footer>\r\n                    </Modal>\r\n                </div>\r\n            )\r\n        } else {\r\n            return (\r\n                <div>\r\n                    <Modal className=\"main-modal\" show={true} size=\"lg\" aria-labelledby=\"contained-modal-title-vcenter\" centered>\r\n                        <Modal.Header closeButton onClick={this.props.handleModalShowHide}>\r\n                        <Modal.Title id=\"contained-modal-title-vcenter\">{this.props.filmInfo.original_title}</Modal.Title>\r\n                        </Modal.Header>\r\n                        <Modal.Body className=\"show-grid\">\r\n                        <Container>\r\n                            <Row>\r\n                                <Col xs={6} md={4}>\r\n                                    <Image className=\"poster-img-modal\" src={`https://image.tmdb.org/t/p/original/${this.props.filmInfo.poster_path}`} alt={this.props.filmInfo.title} thumbnail />\r\n                                </Col>\r\n                                <Col xs={12} md={8}>\r\n                                <strong>Overview: </strong>  {this.props.filmInfo.overview} <br/><br/>\r\n                                <strong>Release date: </strong> {this.props.filmInfo.release_date}\r\n                                </Col>\r\n                            </Row>\r\n                        </Container>\r\n                        \r\n                        </Modal.Body>\r\n                        <Modal.Footer>\r\n                        <Button variant=\"secondary\" onClick={this.props.handleModalShowHide}>\r\n                            Close\r\n                        </Button>\r\n                        </Modal.Footer>\r\n                    </Modal>\r\n                </div>\r\n            );\r\n        }\r\n\r\n    }\r\n    \r\n}\r\n\r\nexport default ModalWindow;","C:\\Users\\Juliy\\Desktop\\111\\CloneWars\\rsclone\\src\\components\\CaurouselMain.js",["94","95","96","97"],"C:\\Users\\Juliy\\Desktop\\111\\CloneWars\\rsclone\\src\\components\\GoogleAuth.js",["98","99","100"],{"ruleId":"101","severity":1,"message":"102","line":5,"column":10,"nodeType":"103","messageId":"104","endLine":5,"endColumn":16},{"ruleId":"101","severity":1,"message":"105","line":6,"column":35,"nodeType":"103","messageId":"104","endLine":6,"endColumn":41},{"ruleId":"101","severity":1,"message":"106","line":6,"column":43,"nodeType":"103","messageId":"104","endLine":6,"endColumn":48},{"ruleId":"101","severity":1,"message":"107","line":6,"column":50,"nodeType":"103","messageId":"104","endLine":6,"endColumn":54},{"ruleId":"108","replacedBy":"109"},{"ruleId":"110","replacedBy":"111"},{"ruleId":"101","severity":1,"message":"112","line":1,"column":8,"nodeType":"103","messageId":"104","endLine":1,"endColumn":16},{"ruleId":"101","severity":1,"message":"113","line":11,"column":27,"nodeType":"103","messageId":"104","endLine":11,"endColumn":33},{"ruleId":"114","severity":1,"message":"115","line":137,"column":19,"nodeType":"116","endLine":137,"endColumn":47},{"ruleId":"117","severity":1,"message":"118","line":139,"column":57,"nodeType":"116","endLine":139,"endColumn":105},{"ruleId":"114","severity":1,"message":"115","line":162,"column":25,"nodeType":"116","endLine":162,"endColumn":49},{"ruleId":"114","severity":1,"message":"115","line":166,"column":23,"nodeType":"116","endLine":166,"endColumn":47},{"ruleId":"114","severity":1,"message":"115","line":170,"column":25,"nodeType":"116","endLine":170,"endColumn":49},{"ruleId":"119","severity":1,"message":"120","line":216,"column":19,"nodeType":"116","endLine":220,"endColumn":20},{"ruleId":"121","severity":1,"message":"122","line":227,"column":17,"nodeType":"116","endLine":227,"endColumn":48},{"ruleId":"117","severity":1,"message":"118","line":229,"column":19,"nodeType":"116","endLine":229,"endColumn":65},{"ruleId":"114","severity":1,"message":"123","line":260,"column":13,"nodeType":"116","endLine":260,"endColumn":47},{"ruleId":"101","severity":1,"message":"124","line":3,"column":10,"nodeType":"103","messageId":"104","endLine":3,"endColumn":16},{"ruleId":"101","severity":1,"message":"125","line":3,"column":18,"nodeType":"103","messageId":"104","endLine":3,"endColumn":23},{"ruleId":"101","severity":1,"message":"126","line":3,"column":25,"nodeType":"103","messageId":"104","endLine":3,"endColumn":34},{"ruleId":"101","severity":1,"message":"127","line":3,"column":36,"nodeType":"103","messageId":"104","endLine":3,"endColumn":39},{"ruleId":"101","severity":1,"message":"128","line":3,"column":41,"nodeType":"103","messageId":"104","endLine":3,"endColumn":44},{"ruleId":"101","severity":1,"message":"129","line":3,"column":46,"nodeType":"103","messageId":"104","endLine":3,"endColumn":51},{"ruleId":"101","severity":1,"message":"130","line":4,"column":8,"nodeType":"103","messageId":"104","endLine":4,"endColumn":13},{"ruleId":"131","severity":1,"message":"132","line":8,"column":5,"nodeType":"133","messageId":"134","endLine":11,"endColumn":6},{"ruleId":"101","severity":1,"message":"135","line":4,"column":8,"nodeType":"103","messageId":"104","endLine":4,"endColumn":16},{"ruleId":"101","severity":1,"message":"102","line":5,"column":10,"nodeType":"103","messageId":"104","endLine":5,"endColumn":16},{"ruleId":"117","severity":1,"message":"118","line":37,"column":22,"nodeType":"116","endLine":37,"endColumn":39},{"ruleId":"136","severity":1,"message":"137","line":54,"column":16,"nodeType":"116","endLine":54,"endColumn":133},{"ruleId":"138","severity":1,"message":"139","line":46,"column":82,"nodeType":"140","messageId":"141","endLine":46,"endColumn":83},{"ruleId":"138","severity":1,"message":"139","line":47,"column":86,"nodeType":"140","messageId":"141","endLine":47,"endColumn":87},{"ruleId":"101","severity":1,"message":"142","line":1,"column":17,"nodeType":"103","messageId":"104","endLine":1,"endColumn":26},{"ruleId":"101","severity":1,"message":"102","line":9,"column":10,"nodeType":"103","messageId":"104","endLine":9,"endColumn":16},{"ruleId":"101","severity":1,"message":"113","line":13,"column":22,"nodeType":"103","messageId":"104","endLine":13,"endColumn":28},{"ruleId":"101","severity":1,"message":"105","line":14,"column":5,"nodeType":"103","messageId":"104","endLine":14,"endColumn":11},{"ruleId":"101","severity":1,"message":"106","line":15,"column":5,"nodeType":"103","messageId":"104","endLine":15,"endColumn":10},{"ruleId":"101","severity":1,"message":"124","line":2,"column":10,"nodeType":"103","messageId":"104","endLine":2,"endColumn":16},{"ruleId":"101","severity":1,"message":"125","line":2,"column":18,"nodeType":"103","messageId":"104","endLine":2,"endColumn":23},{"ruleId":"101","severity":1,"message":"126","line":2,"column":25,"nodeType":"103","messageId":"104","endLine":2,"endColumn":34},{"ruleId":"101","severity":1,"message":"102","line":3,"column":10,"nodeType":"103","messageId":"104","endLine":3,"endColumn":16},{"ruleId":"101","severity":1,"message":"102","line":4,"column":10,"nodeType":"103","messageId":"104","endLine":4,"endColumn":16},{"ruleId":"101","severity":1,"message":"113","line":6,"column":20,"nodeType":"103","messageId":"104","endLine":6,"endColumn":26},{"ruleId":"101","severity":1,"message":"105","line":7,"column":3,"nodeType":"103","messageId":"104","endLine":7,"endColumn":9},{"ruleId":"101","severity":1,"message":"106","line":8,"column":3,"nodeType":"103","messageId":"104","endLine":8,"endColumn":8},{"ruleId":"114","severity":1,"message":"115","line":44,"column":17,"nodeType":"116","endLine":44,"endColumn":80},{"ruleId":"114","severity":1,"message":"115","line":50,"column":17,"nodeType":"116","endLine":50,"endColumn":79},{"ruleId":"114","severity":1,"message":"115","line":57,"column":16,"nodeType":"116","endLine":57,"endColumn":49},"no-unused-vars","'Helmet' is defined but never used.","Identifier","unusedVar","'Switch' is defined but never used.","'Route' is defined but never used.","'Link' is defined but never used.","no-native-reassign",["143"],"no-negated-in-lhs",["144"],"'ReactDOM' is defined but never used.","'Router' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'Button' is defined but never used.","'Modal' is defined but never used.","'Container' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'Image' is defined but never used.","'close' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'FilmList' is defined but never used.","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","'createRef' is defined but never used.","no-global-assign","no-unsafe-negation"]