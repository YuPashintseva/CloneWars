[{"C:\\Users\\KiguradzeLeo\\Documents\\GitHub\\CloneWars\\rsclone\\src\\index.js":"1","C:\\Users\\KiguradzeLeo\\Documents\\GitHub\\CloneWars\\rsclone\\src\\App.js":"2","C:\\Users\\KiguradzeLeo\\Documents\\GitHub\\CloneWars\\rsclone\\src\\components\\FilmPage.js":"3","C:\\Users\\KiguradzeLeo\\Documents\\GitHub\\CloneWars\\rsclone\\src\\components\\FilmList.js":"4","C:\\Users\\KiguradzeLeo\\Documents\\GitHub\\CloneWars\\rsclone\\src\\components\\ModalWindow.js":"5","C:\\Users\\KiguradzeLeo\\Documents\\GitHub\\CloneWars\\rsclone\\src\\components\\CaurouselMain.js":"6","C:\\Users\\KiguradzeLeo\\Documents\\GitHub\\CloneWars\\rsclone\\src\\components\\MovieRow.js":"7"},{"size":525,"mtime":1610553726487,"results":"8","hashOfConfig":"9"},{"size":3981,"mtime":1610645697412,"results":"10","hashOfConfig":"9"},{"size":2908,"mtime":1610645460117,"results":"11","hashOfConfig":"9"},{"size":5135,"mtime":1610612020709,"results":"12","hashOfConfig":"9"},{"size":1779,"mtime":1610553726362,"results":"13","hashOfConfig":"9"},{"size":2375,"mtime":1610638477265,"results":"14","hashOfConfig":"9"},{"size":645,"mtime":1610642475331,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1oj9p7d",{"filePath":"19","messages":"20","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"21","messages":"22","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"23","messages":"24","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"18"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"C:\\Users\\KiguradzeLeo\\Documents\\GitHub\\CloneWars\\rsclone\\src\\index.js",[],["33","34"],"C:\\Users\\KiguradzeLeo\\Documents\\GitHub\\CloneWars\\rsclone\\src\\App.js",["35","36","37","38","39","40"],"C:\\Users\\KiguradzeLeo\\Documents\\GitHub\\CloneWars\\rsclone\\src\\components\\FilmPage.js",["41","42","43"],"C:\\Users\\KiguradzeLeo\\Documents\\GitHub\\CloneWars\\rsclone\\src\\components\\FilmList.js",["44","45","46","47","48"],"import React, { createRef } from 'react';\r\nimport Carousel from \"react-multi-carousel\";\r\nimport ModalWindow from './ModalWindow';\r\nimport CaurouselMain from './CaurouselMain';\r\nimport 'react-multi-carousel/lib/styles.css';\r\nimport star from './assets/star.png'\r\nimport play from './assets/play.png'\r\nimport info from './assets/info-grey.png';\r\n\r\n\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Link\r\n  } from \"react-router-dom\";\r\nimport FilmPage from \"./FilmPage.js\";\r\n\r\nconst responsive = {\r\n    superLargeDesktop: {\r\n      breakpoint: { max: 4000, min: 3000 },\r\n      items: 5\r\n    },\r\n    desktop: {\r\n      breakpoint: { max: 3000, min: 1024 },\r\n      items: 5\r\n    },\r\n    tablet: {\r\n      breakpoint: { max: 1024, min: 464 },\r\n      items: 3\r\n    },\r\n    mobile: {\r\n      breakpoint: { max: 464, min: 0 },\r\n      items: 1\r\n    }\r\n  };\r\n\r\nclass FilmList extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {data: [], dataMain: [], value: \"\", showHide: false, currFilmInfo: {}};\r\n        this.handleModalShowHide = this.handleModalShowHide.bind(this);\r\n        this.handleModalShowHide2 = this.handleModalShowHide2.bind(this);\r\n\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const response = await fetch('https://api.themoviedb.org/3/movie/popular?api_key=fb0fcc2d34caffc53da53d676fbf678a&language=en-US&page=1');\r\n        const json = await response.json();\r\n        this.setState({ data: json});\r\n    }\r\n\r\n    returnState(){\r\n        return this.state;\r\n    }\r\n\r\n    handleModalShowHide(film) {\r\n        this.setState({ showHide: !this.state.showHide });\r\n        this.setState({ currFilmInfo: film });\r\n    }\r\n\r\n    handleModalShowHide2() {\r\n        this.setState({ showHide: !this.state.showHide });\r\n    }\r\n\r\n\r\n    render() {\r\n        let mod = '';\r\n        if (this.state.data.results) {\r\n            if (this.state.showHide) {\r\n                mod = <ModalWindow handleModalShowHide = {this.handleModalShowHide2} filmInfo = {this.state.currFilmInfo} />\r\n            }\r\n            return (\r\n                <div>\r\n                <CaurouselMain />\r\n                {mod}\r\n                <Carousel\r\n                swipeable={false}\r\n                draggable={false}\r\n                showDots={false}\r\n                responsive={responsive}\r\n                ssr={true}\r\n                infinite={false}\r\n                autoPlaySpeed={1000}\r\n                keyBoardControl={true}\r\n                customTransition=\"all .5\"\r\n                transitionDuration={1000}\r\n                containerClass=\"carousel-container\"\r\n                removeArrowOnDeviceType={[\"tablet\", \"mobile\"]}\r\n                dotListClass=\"custom-dot-list-style\"\r\n                itemClass=\"carousel-item-padding\"\r\n                centerMode={false}\r\n                slidesToSlide={3}\r\n            >\r\n            \r\n            {this.state.data.results.map(el => (\r\n                \r\n                <div element={el.id} key ={el.id}>\r\n                    <div className=\"films-list-img App-link\" >\r\n                      <Link to=\"/\" ></Link> <Link style={{ textDecoration: 'none', color: 'white' }} to= \"/FilmPage\" > \r\n                            <img className=\"poster-img\" onMouseOver={()=> {sessionStorage.clear();sessionStorage.setItem(\"val\",JSON.stringify(el))}}  src={`https://image.tmdb.org/t/p/original/${el.poster_path}`} alt={el.title}/>\r\n                            </Link>    \r\n                       \r\n                        <div className=\"bottom-content-wrapper\">\r\n                            <div className=\"rating\">\r\n                                <div><img src={star} alt=\"star icon\" /></div>\r\n                                <div className=\"vote_average\">{el.vote_average}</div>\r\n                            </div>\r\n                            <Link to=\"/\"></Link><Link style={{ textDecoration: 'none', color: 'white' }} to= \"/FilmPage\">\r\n                                <div className=\"film-title\" onMouseOver={()=>{ sessionStorage.clear();sessionStorage.setItem(\"val\",JSON.stringify(el))}}>{el.title}</div>\r\n                            </Link>\r\n                            \r\n                            <button type=\"button\" className=\"add-to-watchlist-btn\">+ Watchlist</button>\r\n                            <div className=\"additional-info\">\r\n                                <div className=\"trailer\">\r\n                                    <img src={play} alt=\"play button\" className=\"play-button\"/>  Trailer\r\n                                </div>\r\n                                <div>\r\n                                    <img src={info} alt=\"info button\" className=\"info-button\" onClick = {() => this.handleModalShowHide(el)}/> \r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                   \r\n                </div>\r\n            ))};\r\n                \r\n            </Carousel>\r\n            </div>\r\n            );\r\n        } else {\r\n            return (\r\n                <div>Wait...</div>\r\n            );\r\n        }\r\n    \r\n    }\r\n\r\n}\r\n\r\n\r\nexport default FilmList;","C:\\Users\\KiguradzeLeo\\Documents\\GitHub\\CloneWars\\rsclone\\src\\components\\ModalWindow.js",["49","50"],"import React from 'react'\r\nimport { Button, Modal, Container, Row, Col, Image } from 'react-bootstrap'\r\n\r\nclass ModalWindow extends React.Component{\r\n    render(){\r\n        {{console.log(\"stupid film\",this.props.filmInfo)}}\r\n        return(\r\n           \r\n            <div>\r\n                <Modal className=\"main-modal\" show={true} size=\"lg\" aria-labelledby=\"contained-modal-title-vcenter\" centered>\r\n                    <Modal.Header closeButton onClick={this.props.handleModalShowHide}>\r\n                     <Modal.Title id=\"contained-modal-title-vcenter\">{this.props.filmInfo.original_title}</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body className=\"show-grid\">\r\n                    <Container>\r\n                        <Row>\r\n                            <Col xs={6} md={4}>\r\n                            <Image className=\"poster-img-modal\" src={`https://image.tmdb.org/t/p/original/${this.props.filmInfo.poster_path}`} alt={this.props.filmInfo.title} thumbnail />\r\n                            </Col>\r\n                            <Col xs={12} md={8}>\r\n                              <strong>Overview: </strong>  {this.props.filmInfo.overview} <br/><br/>\r\n                              <strong>Release date: </strong> {this.props.filmInfo.release_date}\r\n                            </Col>\r\n                        </Row>\r\n                    </Container>\r\n                    \r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={this.props.handleModalShowHide}>\r\n                        Close\r\n                    </Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n            </div>\r\n        )\r\n    }\r\n    \r\n}\r\n\r\nexport default ModalWindow;","C:\\Users\\KiguradzeLeo\\Documents\\GitHub\\CloneWars\\rsclone\\src\\components\\CaurouselMain.js",[],"C:\\Users\\KiguradzeLeo\\Documents\\GitHub\\CloneWars\\rsclone\\src\\components\\MovieRow.js",[],{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","severity":1,"message":"56","line":1,"column":8,"nodeType":"57","messageId":"58","endLine":1,"endColumn":16},{"ruleId":"55","severity":1,"message":"59","line":8,"column":35,"nodeType":"57","messageId":"58","endLine":8,"endColumn":41},{"ruleId":"60","severity":1,"message":"61","line":66,"column":13,"nodeType":"62","endLine":66,"endColumn":41},{"ruleId":"60","severity":1,"message":"61","line":82,"column":21,"nodeType":"62","endLine":82,"endColumn":45},{"ruleId":"60","severity":1,"message":"61","line":86,"column":19,"nodeType":"62","endLine":86,"endColumn":43},{"ruleId":"60","severity":1,"message":"61","line":89,"column":19,"nodeType":"62","endLine":89,"endColumn":52},{"ruleId":"55","severity":1,"message":"63","line":4,"column":8,"nodeType":"57","messageId":"58","endLine":4,"endColumn":16},{"ruleId":"64","severity":1,"message":"65","line":36,"column":22,"nodeType":"62","endLine":36,"endColumn":39},{"ruleId":"66","severity":1,"message":"67","line":53,"column":16,"nodeType":"62","endLine":53,"endColumn":133},{"ruleId":"55","severity":1,"message":"68","line":1,"column":17,"nodeType":"57","messageId":"58","endLine":1,"endColumn":26},{"ruleId":"55","severity":1,"message":"69","line":12,"column":22,"nodeType":"57","messageId":"58","endLine":12,"endColumn":28},{"ruleId":"55","severity":1,"message":"59","line":13,"column":5,"nodeType":"57","messageId":"58","endLine":13,"endColumn":11},{"ruleId":"55","severity":1,"message":"70","line":14,"column":5,"nodeType":"57","messageId":"58","endLine":14,"endColumn":10},{"ruleId":"55","severity":1,"message":"71","line":17,"column":8,"nodeType":"57","messageId":"58","endLine":17,"endColumn":16},{"ruleId":"72","severity":1,"message":"73","line":6,"column":9,"nodeType":"74","messageId":"75","endLine":6,"endColumn":59},{"ruleId":"72","severity":1,"message":"73","line":6,"column":10,"nodeType":"74","messageId":"75","endLine":6,"endColumn":58},"no-native-reassign",["76"],"no-negated-in-lhs",["77"],"no-unused-vars","'ReactDOM' is defined but never used.","Identifier","unusedVar","'Switch' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'FilmList' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","'createRef' is defined but never used.","'Router' is defined but never used.","'Route' is defined but never used.","'FilmPage' is defined but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","no-global-assign","no-unsafe-negation"]