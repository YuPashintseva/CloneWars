[{"C:\\Users\\KiguradzeLeo\\Documents\\GitHub\\CloneWars\\rsclone\\src\\index.js":"1","C:\\Users\\KiguradzeLeo\\Documents\\GitHub\\CloneWars\\rsclone\\src\\App.js":"2","C:\\Users\\KiguradzeLeo\\Documents\\GitHub\\CloneWars\\rsclone\\src\\reportWebVitals.js":"3","C:\\Users\\KiguradzeLeo\\Documents\\GitHub\\CloneWars\\rsclone\\src\\components\\FilmList.js":"4","C:\\Users\\KiguradzeLeo\\Documents\\GitHub\\CloneWars\\rsclone\\src\\components\\FilmPage.js":"5","C:\\Users\\KiguradzeLeo\\Documents\\GitHub\\CloneWars\\rsclone\\src\\components\\ModalWindow.js":"6"},{"size":521,"mtime":1610473050152,"results":"7","hashOfConfig":"8"},{"size":2031,"mtime":1610507191964,"results":"9","hashOfConfig":"8"},{"size":375,"mtime":1610076248549,"results":"10","hashOfConfig":"8"},{"size":4536,"mtime":1610506377728,"results":"11","hashOfConfig":"8"},{"size":2413,"mtime":1610506534035,"results":"12","hashOfConfig":"8"},{"size":1363,"mtime":1610473049856,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1oj9p7d",{"filePath":"17","messages":"18","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"16"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"C:\\Users\\KiguradzeLeo\\Documents\\GitHub\\CloneWars\\rsclone\\src\\index.js",[],["29","30"],"C:\\Users\\KiguradzeLeo\\Documents\\GitHub\\CloneWars\\rsclone\\src\\App.js",["31","32","33","34","35","36","37"],"C:\\Users\\KiguradzeLeo\\Documents\\GitHub\\CloneWars\\rsclone\\src\\reportWebVitals.js",[],"C:\\Users\\KiguradzeLeo\\Documents\\GitHub\\CloneWars\\rsclone\\src\\components\\FilmList.js",["38","39","40","41","42","43","44"],"import App, {filmPage} from \"../App.js\";\r\nimport {ReactDOM} from 'react-dom';\r\nimport React from 'react';\r\nimport Carousel from \"react-multi-carousel\";\r\nimport ModalWindow from './ModalWindow';\r\nimport 'react-multi-carousel/lib/styles.css';\r\nimport star from './assets/star.png'\r\nimport play from './assets/play.png'\r\nimport info from './assets/info-grey.png';\r\n\r\n\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Link\r\n  } from \"react-router-dom\";\r\nimport FilmPage from \"./FilmPage.js\";\r\n\r\nconst responsive = {\r\n    superLargeDesktop: {\r\n      breakpoint: { max: 4000, min: 3000 },\r\n      items: 6\r\n    },\r\n    desktop: {\r\n      breakpoint: { max: 3000, min: 1024 },\r\n      items: 5\r\n    },\r\n    tablet: {\r\n      breakpoint: { max: 1024, min: 464 },\r\n      items: 3\r\n    },\r\n    mobile: {\r\n      breakpoint: { max: 464, min: 0 },\r\n      items: 1\r\n    }\r\n  };\r\n\r\nclass FilmList extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {data: [],value:\"\"};\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const response = await fetch('https://api.themoviedb.org/3/movie/popular?api_key=fb0fcc2d34caffc53da53d676fbf678a&language=en-US&page=1');\r\n        const json = await response.json();\r\n        this.setState({ data: json});\r\n    }\r\n\r\n    returnState(){\r\n        return this.state;\r\n    }\r\n//sessionStorage.setItem(\"val\",JSON.stringify(el));\r\n    render() {\r\n        if (this.state.data.results) {\r\n            return (\r\n                <div>\r\n                <ModalWindow />\r\n                <Carousel\r\n                swipeable={false}\r\n                draggable={false}\r\n                showDots={false}\r\n                responsive={responsive}\r\n                ssr={true}\r\n                infinite={true}\r\n                autoPlaySpeed={1000}\r\n                keyBoardControl={true}\r\n                customTransition=\"all .5\"\r\n                transitionDuration={1000}\r\n                containerClass=\"carousel-container\"\r\n                removeArrowOnDeviceType={[\"tablet\", \"mobile\"]}\r\n                dotListClass=\"custom-dot-list-style\"\r\n                itemClass=\"carousel-item-padding\"\r\n                centerMode={false}\r\n                slidesToSlide={3}\r\n            >\r\n            \r\n            {this.state.data.results.map(el => (\r\n             \r\n               \r\n                <div>\r\n                    <div className=\"films-list-img App-link\">\r\n                      <Link to=\"/\" ></Link> <Link style={{ textDecoration: 'none', color: 'white' }} to= \"/FilmPage\" > \r\n                    \r\n                       \r\n                            <img className=\"poster-img\" onMouseOver={()=> {sessionStorage.clear();sessionStorage.setItem(\"val\",JSON.stringify(el))}}  src={`https://image.tmdb.org/t/p/original/${el.poster_path}`} alt={el.title}/>\r\n                            </Link>    \r\n                       \r\n                        <div className=\"bottom-content-wrapper\">\r\n                            <div className=\"rating\">\r\n                                <div><img src={star} alt=\"star icon\" /></div>\r\n                                <div className=\"vote_average\">{el.vote_average}</div>\r\n                            </div>\r\n                            <Link to=\"/\"></Link><Link style={{ textDecoration: 'none', color: 'white' }} to= \"/FilmPage\">\r\n                                <div className=\"film-title\" onMouseOver={()=>{ sessionStorage.clear();sessionStorage.setItem(\"val\",JSON.stringify(el))}}>{el.title}</div>\r\n                            </Link>\r\n                            \r\n                            <button type=\"button\" className=\"add-to-watchlist-btn\">+ Watchlist</button>\r\n                            <div className=\"additional-info\">\r\n                                <div className=\"trailer\">\r\n                                    <img src={play} alt=\"play button\" className=\"play-button\"/>  Trailer\r\n                                </div>\r\n                                <div>\r\n                                    <img src={info} alt=\"info button\" className=\"info-button\" onClick={()=>ModalWindow(el)}/> \r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                   \r\n                </div>\r\n            ))};\r\n                \r\n            </Carousel>\r\n            </div>\r\n            );\r\n        } else {\r\n            return (\r\n                <div>Wait...</div>\r\n            );\r\n        }\r\n    \r\n    }\r\n\r\n}\r\n\r\n\r\nexport default FilmList;","C:\\Users\\KiguradzeLeo\\Documents\\GitHub\\CloneWars\\rsclone\\src\\components\\FilmPage.js",["45","46","47"],"import React from 'react';\r\n\r\nimport star from './assets/megastar.png';\r\nimport FilmList from './FilmList';\r\n\r\n\r\n class FilmPage extends React.Component{\r\n    constructor() {\r\n        super();\r\n        this.state = {video:\"\",dat:JSON.parse(sessionStorage.getItem(\"val\"))};\r\n      console.log(this.state.dat)\r\n        //this.data = props.value;\r\n    }\r\n    async componentDidMount(){\r\n     const response = await fetch(`https://api.themoviedb.org/3/movie/${this.state.dat.id}/videos?api_key=fb0fcc2d34caffc53da53d676fbf678a&language=en-US`);\r\n     const res = await response.json();\r\n     this.setState({ video: res.results[0].key});\r\n     this.setState({dat: JSON.parse(sessionStorage.getItem(\"val\"))});\r\n     //console.log(this.state)\r\n    }\r\n\r\n    render(){\r\n       \r\n        return(\r\n            \r\n            <div id = \"fp\" className=\" container-fluid wrapper wrapperStyle\">\r\n               \r\n               <div id = \"upperBlock\" className=\"wrapper\">\r\n                 <div className=\"row\"></div>\r\n                 <div className=\"row\">\r\n\r\n                     <h1 className=\"col\">{this.state.dat.original_title}</h1>\r\n                     <div className=\"col\">\r\n                     <h3 className=\"row\">Average Vote: {this.state.dat.vote_average}\r\n                     <img src={star}></img>\r\n                     </h3>\r\n                     </div>\r\n                     <h3 className=\"col\">Votes: {this.state.dat.vote_count}</h3>\r\n                 </div>\r\n               </div>\r\n\r\n               <div id = \"briefInfo\" className=\"wrapper\">\r\n                   <div>Release Date: {this.state.dat.release_date}</div>\r\n                   <div></div>\r\n                </div>\r\n\r\n               <div id = \"photoVideo\" className=\"row\" >\r\n                   \r\n               <img  width=\"40%\"height =\"auto\" src={`https://image.tmdb.org/t/p/original/${this.state.dat.poster_path}`} alt={this.state.dat.title}/>\r\n               <iframe  width=\"60%\" height =\"100%\" src={`https://www.youtube.com/embed/${this.state.video}`}></iframe>\r\n               </div>\r\n               <div style={{  margin: \"8px\"}}><h3 >Synopsis: {this.state.dat.overview}</h3></div>\r\n             \r\n               <div id = \"videoCarousel\" className=\"wrapper\"></div>\r\n               <div id = \"photoCarousel\" className=\"wrapper\"></div>\r\n               <div id = \"cast\"></div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default FilmPage;","C:\\Users\\KiguradzeLeo\\Documents\\GitHub\\CloneWars\\rsclone\\src\\components\\ModalWindow.js",[],{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","severity":1,"message":"53","line":1,"column":8,"nodeType":"54","messageId":"55","endLine":1,"endColumn":16},{"ruleId":"52","severity":1,"message":"56","line":9,"column":3,"nodeType":"54","messageId":"55","endLine":9,"endColumn":9},{"ruleId":"57","severity":1,"message":"58","line":23,"column":3,"nodeType":"59","endLine":23,"endColumn":57},{"ruleId":"60","severity":1,"message":"61","line":23,"column":36,"nodeType":"62","messageId":"63","endLine":23,"endColumn":56},{"ruleId":"57","severity":1,"message":"64","line":34,"column":22,"nodeType":"59","endLine":34,"endColumn":47},{"ruleId":"57","severity":1,"message":"64","line":37,"column":9,"nodeType":"59","endLine":37,"endColumn":33},{"ruleId":"57","severity":1,"message":"64","line":40,"column":9,"nodeType":"59","endLine":40,"endColumn":42},{"ruleId":"52","severity":1,"message":"65","line":1,"column":8,"nodeType":"54","messageId":"55","endLine":1,"endColumn":11},{"ruleId":"52","severity":1,"message":"66","line":1,"column":14,"nodeType":"54","messageId":"55","endLine":1,"endColumn":22},{"ruleId":"52","severity":1,"message":"53","line":2,"column":9,"nodeType":"54","messageId":"55","endLine":2,"endColumn":17},{"ruleId":"52","severity":1,"message":"67","line":13,"column":22,"nodeType":"54","messageId":"55","endLine":13,"endColumn":28},{"ruleId":"52","severity":1,"message":"56","line":14,"column":5,"nodeType":"54","messageId":"55","endLine":14,"endColumn":11},{"ruleId":"52","severity":1,"message":"68","line":15,"column":5,"nodeType":"54","messageId":"55","endLine":15,"endColumn":10},{"ruleId":"52","severity":1,"message":"69","line":18,"column":8,"nodeType":"54","messageId":"55","endLine":18,"endColumn":16},{"ruleId":"52","severity":1,"message":"70","line":4,"column":8,"nodeType":"54","messageId":"55","endLine":4,"endColumn":16},{"ruleId":"71","severity":1,"message":"72","line":35,"column":22,"nodeType":"59","endLine":35,"endColumn":38},{"ruleId":"73","severity":1,"message":"74","line":50,"column":16,"nodeType":"59","endLine":50,"endColumn":110},"no-native-reassign",["75"],"no-negated-in-lhs",["76"],"no-unused-vars","'ReactDOM' is defined but never used.","Identifier","unusedVar","'Switch' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-script-url","Script URL is a form of eval.","Literal","unexpectedScriptURL","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'App' is defined but never used.","'filmPage' is defined but never used.","'Router' is defined but never used.","'Route' is defined but never used.","'FilmPage' is defined but never used.","'FilmList' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","no-global-assign","no-unsafe-negation"]