[{"C:\\Users\\Juliy\\Desktop\\RS_SCHOOL\\CloneWars\\CloneWars\\rsclone\\src\\index.js":"1","C:\\Users\\Juliy\\Desktop\\RS_SCHOOL\\CloneWars\\CloneWars\\rsclone\\src\\App.js":"2","C:\\Users\\Juliy\\Desktop\\RS_SCHOOL\\CloneWars\\CloneWars\\rsclone\\src\\components\\FilmList.js":"3","C:\\Users\\Juliy\\Desktop\\RS_SCHOOL\\CloneWars\\CloneWars\\rsclone\\src\\components\\MovieRow.js":"4","C:\\Users\\Juliy\\Desktop\\RS_SCHOOL\\CloneWars\\CloneWars\\rsclone\\src\\components\\FilmPage.js":"5","C:\\Users\\Juliy\\Desktop\\RS_SCHOOL\\CloneWars\\CloneWars\\rsclone\\src\\components\\CaurouselMain.js":"6","C:\\Users\\Juliy\\Desktop\\RS_SCHOOL\\CloneWars\\CloneWars\\rsclone\\src\\components\\ModalWindow.js":"7","C:\\Users\\Juliy\\Desktop\\RS_SCHOOL\\CloneWars\\CloneWars\\rsclone\\src\\components\\WatchList.js":"8"},{"size":677,"mtime":1610948240885,"results":"9","hashOfConfig":"10"},{"size":8291,"mtime":1611042513401,"results":"11","hashOfConfig":"10"},{"size":5699,"mtime":1611000089821,"results":"12","hashOfConfig":"10"},{"size":841,"mtime":1610948240877,"results":"13","hashOfConfig":"10"},{"size":3102,"mtime":1611044424972,"results":"14","hashOfConfig":"10"},{"size":7480,"mtime":1611000766578,"results":"15","hashOfConfig":"10"},{"size":3586,"mtime":1611000088943,"results":"16","hashOfConfig":"10"},{"size":355,"mtime":1611044441936,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20","usedDeprecatedRules":"21"},"1qc3per",{"filePath":"22","messages":"23","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"24","messages":"25","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"21"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"21"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"21"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"21"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Juliy\\Desktop\\RS_SCHOOL\\CloneWars\\CloneWars\\rsclone\\src\\index.js",["40","41","42","43"],"import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\n//import reportWebVitals from './reportWebVitals';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n       <Router>\r\n    <App />\r\n    </Router>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n//reportWebVitals();\r\n",["44","45"],"C:\\Users\\Juliy\\Desktop\\RS_SCHOOL\\CloneWars\\CloneWars\\rsclone\\src\\App.js",["46","47","48","49","50","51","52","53","54","55","56","57","58","59","60"],"C:\\Users\\Juliy\\Desktop\\RS_SCHOOL\\CloneWars\\CloneWars\\rsclone\\src\\components\\FilmList.js",["61","62","63","64","65"],"import React, { createRef } from 'react';\r\nimport Carousel from \"react-multi-carousel\";\r\nimport ModalWindow from './ModalWindow';\r\nimport CaurouselMain from './CaurouselMain';\r\nimport 'react-multi-carousel/lib/styles.css';\r\nimport star from './assets/star.png'\r\nimport play from './assets/play.png'\r\nimport info from './assets/info-grey.png';\r\nimport { Helmet } from \"react-helmet\";\r\n\r\n\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Link\r\n  } from \"react-router-dom\";\r\n\r\n\r\nconst responsive = {\r\n    superLargeDesktop: {\r\n      breakpoint: { max: 4000, min: 3000 },\r\n      items: 5\r\n    },\r\n    desktop: {\r\n      breakpoint: { max: 3000, min: 1024 },\r\n      items: 5\r\n    },\r\n    tablet: {\r\n      breakpoint: { max: 1024, min: 464 },\r\n      items: 3\r\n    },\r\n    mobile: {\r\n      breakpoint: { max: 464, min: 0 },\r\n      items: 1\r\n    }\r\n  };\r\n\r\nclass FilmList extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {data: [], dataMain: [], value: \"\", showHide: false, currFilmInfo: {}, showAlert: false};\r\n        this.handleModalShowHide = this.handleModalShowHide.bind(this);\r\n        this.handleModalShowHide2 = this.handleModalShowHide2.bind(this);\r\n\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const response = await fetch('https://api.themoviedb.org/3/movie/popular?api_key=fb0fcc2d34caffc53da53d676fbf678a&language=en-US&page=1');\r\n        const json = await response.json();\r\n        this.setState({ data: json});\r\n        sessionStorage.setItem('fullInf',JSON.stringify(json.results))\r\n    }\r\n\r\n    returnState(){\r\n        return this.state;\r\n    }\r\n\r\n    handleModalShowHide(film, isneedAlert) {\r\n        this.setState({ showHide: !this.state.showHide });\r\n        this.setState({ showAlert: isneedAlert });\r\n        this.setState({ currFilmInfo: film });\r\n    }\r\n\r\n    handleModalShowHide2() {\r\n        this.setState({ showHide: !this.state.showHide });\r\n    }\r\n\r\n\r\n    render() {\r\n        let mod = '';\r\n        if (this.state.data.results) {\r\n            if (this.state.showHide) {\r\n                mod = <ModalWindow handleModalShowHide = {this.handleModalShowHide2} filmInfo = {this.state.currFilmInfo} toWatchList={this.state.showAlert} />\r\n            }\r\n            return (\r\n                <div>\r\n                <CaurouselMain type={\"films\"} />\r\n                <div className=\"head-text\">\r\n                    What to watch\r\n                </div>\r\n                {mod}\r\n                <Carousel\r\n                swipeable={false}\r\n                draggable={false}\r\n                showDots={false}\r\n                responsive={responsive}\r\n                ssr={true}\r\n                infinite={false}\r\n                autoPlaySpeed={1000}\r\n                keyBoardControl={true}\r\n                customTransition=\"all .5\"\r\n                transitionDuration={1000}\r\n                containerClass=\"carousel-container\"\r\n                removeArrowOnDeviceType={[\"tablet\", \"mobile\"]}\r\n                dotListClass=\"custom-dot-list-style\"\r\n                itemClass=\"carousel-item-padding\"\r\n                centerMode={false}\r\n                slidesToSlide={3}\r\n            >\r\n            \r\n            {this.state.data.results.map(el => (\r\n                \r\n                <div element={el.id} key ={el.id}>\r\n                    <div className=\"films-list-img App-link\" >\r\n                      <Link style={{ textDecoration: 'none', color: 'white' }} to= \"/FilmPage\" > \r\n                            <img className=\"poster-img\" onMouseOver={()=> {sessionStorage.removeItem(\"val\");sessionStorage.setItem(\"val\",JSON.stringify(el))}}  src={`https://image.tmdb.org/t/p/original/${el.poster_path}`} alt={el.title}/>\r\n                            </Link>    \r\n                       \r\n                        <div className=\"bottom-content-wrapper\">\r\n                            <div className=\"rating\">\r\n                                <div><img src={star} alt=\"star icon\" /></div>\r\n                                <div className=\"vote_average\">{el.vote_average}</div>\r\n                            </div>\r\n                           <Link style={{ textDecoration: 'none', color: 'white' }} to= \"/FilmPage\">\r\n                                <div className=\"film-title\" onMouseOver={()=>{ sessionStorage.removeItem(\"val\");sessionStorage.setItem(\"val\",JSON.stringify(el))}}>{el.title}</div>\r\n                            </Link> \r\n                            \r\n                            <button type=\"button\" className=\"add-to-watchlist-btn\" onClick = {() => {this.handleModalShowHide(el, true); this.props.watchListincrement(el.id); }}>+ Watchlist</button>\r\n                            <div className=\"additional-info\">\r\n                                <div className=\"trailer\">\r\n                                    <img src={play} alt=\"play button\" className=\"play-button\"/>  Trailer\r\n                                </div>\r\n                                <div className=\"info-button-wrapper\">\r\n                                    <img src={info} alt=\"info button\" className=\"info-button\" onClick = {() => this.handleModalShowHide(el, false)}/> \r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                   \r\n                </div>\r\n            ))};\r\n                \r\n            </Carousel>\r\n            <div className=\"head-text\">\r\n                Popular people\r\n            </div>\r\n            <CaurouselMain type={\"people\"} />\r\n            </div>\r\n            );\r\n        } else {\r\n            return (\r\n                <div>Wait...</div>\r\n            );\r\n        }\r\n    \r\n    }\r\n\r\n}\r\n\r\n\r\nexport default FilmList;","C:\\Users\\Juliy\\Desktop\\RS_SCHOOL\\CloneWars\\CloneWars\\rsclone\\src\\components\\MovieRow.js",["66","67","68","69","70","71"],"import React from \"react\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\n\r\nclass MovieRow extends React.Component {\r\n  render() {\r\n    return (\r\n  \r\n   \r\n      <option className=\"search__item\" value={this.props.movie.title}>\r\n        {this.props.movie.overview}\r\n        \r\n      </option>\r\n    \r\n    \r\n      // <div className=\"search__item\" key={this.props.movie.id}>\r\n      //   <div className=\"search__item-image\"><img className=\"img\" alt=\"poster\" src={this.props.movie.poster_path} /></div>\r\n      //   <div className=\"search__item-about\">\r\n      //     <h3>{this.props.movie.title}</h3>\r\n      //   <p>{this.props.movie.overview}</p>\r\n      //   </div>\r\n      // </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MovieRow;\r\n","C:\\Users\\Juliy\\Desktop\\RS_SCHOOL\\CloneWars\\CloneWars\\rsclone\\src\\components\\FilmPage.js",["72","73","74","75"],"C:\\Users\\Juliy\\Desktop\\RS_SCHOOL\\CloneWars\\CloneWars\\rsclone\\src\\components\\CaurouselMain.js",["76"],"import React from 'react';\r\nimport Carousel from \"react-multi-carousel\";\r\nimport \"react-multi-carousel/lib/styles.css\";\r\nimport { Helmet } from \"react-helmet\";\r\n\r\nclass CarouselMain extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {dataMain: [], type: \"films\"}\r\n        console.log(\"herehere\", this.props);\r\n\r\n    }\r\n\r\n    async componentDidMount() {\r\n      let responseMain = await fetch('https://api.themoviedb.org/3/movie/popular?api_key=fb0fcc2d34caffc53da53d676fbf678a&language=en-US&page=2');\r\n      if (this.props.type) {\r\n        if (this.props.type === 'films') {\r\n          responseMain = await fetch('https://api.themoviedb.org/3/movie/popular?api_key=fb0fcc2d34caffc53da53d676fbf678a&language=en-US&page=2');\r\n        } else if (this.props.type === 'people') {\r\n          responseMain = await fetch('https://api.themoviedb.org/3/person/popular?api_key=fb0fcc2d34caffc53da53d676fbf678a&language=en-US&page=2');\r\n        } else {\r\n          responseMain = await fetch('https://api.themoviedb.org/3/movie/464052/credits?api_key=fb0fcc2d34caffc53da53d676fbf678a&language=en-US');\r\n          if (this.props.filmId) {\r\n            responseMain = await fetch(`https://api.themoviedb.org/3/movie/${this.props.filmId}/credits?api_key=fb0fcc2d34caffc53da53d676fbf678a&language=en-US`);\r\n          }\r\n        }\r\n        this.setState({ type: this.props.type })\r\n       }\r\n      const jsonMain = await responseMain.json();\r\n      this.setState({ dataMain: jsonMain});\r\n      console.log(\"test111:\",this.state.dataMain.cast)\r\n  }\r\n    render() {\r\n\r\n       if (this.state.dataMain.results){\r\n          if (this.state.type === \"films\") {\r\n            const responsive = {\r\n              superLargeDesktop: {\r\n                breakpoint: { max: 4000, min: 3000 },\r\n                items: 5\r\n              },\r\n              desktop: {\r\n                breakpoint: { max: 3000, min: 1024 },\r\n                items: 1\r\n              },\r\n              tablet: {\r\n                breakpoint: { max: 1024, min: 464 },\r\n                items: 1\r\n              },\r\n              mobile: {\r\n                breakpoint: { max: 464, min: 0 },\r\n                items: 1\r\n              }\r\n            };\r\n            return(\r\n              <div className=\"main-carousel-wrapper\">\r\n                <Carousel                 \r\n                  swipeable={false}\r\n                  draggable={false}\r\n                  showDots={false}\r\n                  responsive={responsive}\r\n                  ssr={true}\r\n                  infinite={false}\r\n                  autoPlaySpeed={1000}\r\n                  keyBoardControl={true}\r\n                  customTransition=\"all .5\"\r\n                  transitionDuration={1000}\r\n                  containerClass=\"carousel-container\"\r\n                  removeArrowOnDeviceType={[\"tablet\", \"mobile\"]}\r\n                  dotListClass=\"custom-dot-list-style\"\r\n                  itemClass=\"carousel-item-padding\"\r\n                  centerMode={false}\r\n                  slidesToSlide={3}\r\n                >\r\n                {this.state.dataMain.results.map(el => (\r\n                    <div className=\"main-carousel-img\">\r\n                      <img className=\"poster-img-main\" src={`https://image.tmdb.org/t/p/original/${el.backdrop_path}`} alt={el.title}/>\r\n                      <h2><span>{el.title}</span></h2>\r\n                    </div>\r\n                ))};\r\n                </Carousel>\r\n              </div>\r\n            );\r\n          } else if (this.state.type === \"people\") {\r\n            const responsive = {\r\n              superLargeDesktop: {\r\n                breakpoint: { max: 4000, min: 3000 },\r\n                items: 5\r\n              },\r\n              desktop: {\r\n                breakpoint: { max: 3000, min: 1024 },\r\n                items: 5\r\n              },\r\n              tablet: {\r\n                breakpoint: { max: 1024, min: 464 },\r\n                items: 4\r\n              },\r\n              mobile: {\r\n                breakpoint: { max: 464, min: 0 },\r\n                items: 2\r\n              }\r\n            };\r\n            return(\r\n              <div className=\"main-carousel-wrapper\">\r\n                <Carousel                 \r\n                  swipeable={false}\r\n                  draggable={false}\r\n                  showDots={false}\r\n                  responsive={responsive}\r\n                  ssr={true}\r\n                  infinite={false}\r\n                  autoPlaySpeed={1000}\r\n                  keyBoardControl={true}\r\n                  customTransition=\"all .5\"\r\n                  transitionDuration={1000}\r\n                  containerClass=\"carousel-container\"\r\n                  removeArrowOnDeviceType={[\"tablet\", \"mobile\"]}\r\n                  dotListClass=\"custom-dot-list-style\"\r\n                  itemClass=\"carousel-item-padding\"\r\n                  centerMode={false}\r\n                  slidesToSlide={3}\r\n                >\r\n                {this.state.dataMain.results.map(el => (\r\n                    <div className=\"main-carousel-img\">\r\n                      <img className=\"poster-img-main rounded-img\" src={`https://image.tmdb.org/t/p/original/${el.profile_path}`} alt={el.profile_path}/>\r\n                      <h2 className=\"star-name-carousel\"><div>{el.name}</div></h2>\r\n                    </div>\r\n                ))};\r\n                </Carousel>\r\n              </div>\r\n            );\r\n          }\r\n          \r\n        } else if ((this.state.type === \"actors\") && (this.state.dataMain.cast)) {\r\n          const responsive = {\r\n            superLargeDesktop: {\r\n              breakpoint: { max: 4000, min: 3000 },\r\n              items: 5\r\n            },\r\n            desktop: {\r\n              breakpoint: { max: 3000, min: 1024 },\r\n              items: 5\r\n            },\r\n            tablet: {\r\n              breakpoint: { max: 1024, min: 464 },\r\n              items: 4\r\n            },\r\n            mobile: {\r\n              breakpoint: { max: 464, min: 0 },\r\n              items: 2\r\n            }\r\n          };\r\n          return(\r\n            <div className=\"main-carousel-wrapper\">\r\n              <Carousel                 \r\n                swipeable={false}\r\n                draggable={false}\r\n                showDots={false}\r\n                responsive={responsive}\r\n                ssr={true}\r\n                infinite={false}\r\n                autoPlaySpeed={1000}\r\n                keyBoardControl={true}\r\n                customTransition=\"all .5\"\r\n                transitionDuration={1000}\r\n                containerClass=\"carousel-container\"\r\n                removeArrowOnDeviceType={[\"tablet\", \"mobile\"]}\r\n                dotListClass=\"custom-dot-list-style\"\r\n                itemClass=\"carousel-item-padding\"\r\n                centerMode={false}\r\n                slidesToSlide={3}\r\n              >\r\n              {this.state.dataMain.cast.map(el => (\r\n                <div>\r\n                  <div className=\"main-carousel-img\">\r\n                    {el.profile_path && <img className=\"poster-img-main rounded-img\" src={`https://image.tmdb.org/t/p/original/${el.profile_path}`} alt={el.profile_path}/>}\r\n                    <div><h2 className=\"star-name-carousel\"><div>{el.name}</div></h2></div>\r\n                  </div>\r\n                </div>\r\n              ))};\r\n              </Carousel>\r\n            </div>\r\n          );\r\n        }\r\n        \r\n        else {\r\n          return (<div>Wait a little</div>)\r\n        }\r\n    }\r\n}\r\n\r\nexport default CarouselMain;","C:\\Users\\Juliy\\Desktop\\RS_SCHOOL\\CloneWars\\CloneWars\\rsclone\\src\\components\\ModalWindow.js",["77"],"import React from 'react'\r\nimport { Button, Modal, Container, Row, Col, Image } from 'react-bootstrap'\r\nimport { Helmet } from \"react-helmet\";\r\n\r\nclass ModalWindow extends React.Component{\r\n    render(){\r\n        let msgText = 'Successfully added to WatchList';\r\n        if (this.props.toWatchList) {\r\n            if (localStorage.getItem('films')) {\r\n                let arr = JSON.parse(localStorage.getItem('films'));\r\n                if (! arr.includes(this.props.filmInfo.id)) {\r\n                    arr.push(this.props.filmInfo.id);\r\n                } else {\r\n                    msgText = 'It is already in Watchlist';\r\n                }\r\n                localStorage.setItem('films', JSON.stringify(arr));\r\n            } else { \r\n                localStorage.setItem('films', JSON.stringify([this.props.filmInfo.id]));\r\n            }\r\n            return(\r\n                <div>\r\n                    <Modal className=\"main-modal\" show={true} size=\"lg\" aria-labelledby=\"contained-modal-title-vcenter\" centered>\r\n                        <Modal.Header closeButton onClick={this.props.handleModalShowHide}>\r\n                         <Modal.Title id=\"contained-modal-title-vcenter\">{this.props.filmInfo.original_title}</Modal.Title>\r\n                        </Modal.Header>\r\n                        <Modal.Body className=\"show-grid\">\r\n                        <Container>\r\n                            <Row>\r\n                               {msgText}\r\n                            </Row>\r\n                        </Container>\r\n                        \r\n                        </Modal.Body>\r\n                        <Modal.Footer>\r\n                        <Button variant=\"secondary\" onClick={this.props.handleModalShowHide}>\r\n                            Close\r\n                        </Button>\r\n                        </Modal.Footer>\r\n                    </Modal>\r\n                </div>\r\n            )\r\n        } else {\r\n            return (\r\n                <div>\r\n                    <Modal className=\"main-modal\" show={true} size=\"lg\" aria-labelledby=\"contained-modal-title-vcenter\" centered>\r\n                        <Modal.Header closeButton onClick={this.props.handleModalShowHide}>\r\n                        <Modal.Title id=\"contained-modal-title-vcenter\">{this.props.filmInfo.original_title}</Modal.Title>\r\n                        </Modal.Header>\r\n                        <Modal.Body className=\"show-grid\">\r\n                        <Container>\r\n                            <Row>\r\n                                <Col xs={6} md={4}>\r\n                                <Image className=\"poster-img-modal\" src={`https://image.tmdb.org/t/p/original/${this.props.filmInfo.poster_path}`} alt={this.props.filmInfo.title} thumbnail />\r\n                                </Col>\r\n                                <Col xs={12} md={8}>\r\n                                <strong>Overview: </strong>  {this.props.filmInfo.overview} <br/><br/>\r\n                                <strong>Release date: </strong> {this.props.filmInfo.release_date}\r\n                                </Col>\r\n                            </Row>\r\n                        </Container>\r\n                        \r\n                        </Modal.Body>\r\n                        <Modal.Footer>\r\n                        <Button variant=\"secondary\" onClick={this.props.handleModalShowHide}>\r\n                            Close\r\n                        </Button>\r\n                        </Modal.Footer>\r\n                    </Modal>\r\n                </div>\r\n            );\r\n        }\r\n\r\n    }\r\n    \r\n}\r\n\r\nexport default ModalWindow;","C:\\Users\\Juliy\\Desktop\\RS_SCHOOL\\CloneWars\\CloneWars\\rsclone\\src\\components\\WatchList.js",["78"],{"ruleId":"79","severity":1,"message":"80","line":5,"column":10,"nodeType":"81","messageId":"82","endLine":5,"endColumn":16},{"ruleId":"79","severity":1,"message":"83","line":6,"column":35,"nodeType":"81","messageId":"82","endLine":6,"endColumn":41},{"ruleId":"79","severity":1,"message":"84","line":6,"column":43,"nodeType":"81","messageId":"82","endLine":6,"endColumn":48},{"ruleId":"79","severity":1,"message":"85","line":6,"column":50,"nodeType":"81","messageId":"82","endLine":6,"endColumn":54},{"ruleId":"86","replacedBy":"87"},{"ruleId":"88","replacedBy":"89"},{"ruleId":"79","severity":1,"message":"90","line":1,"column":8,"nodeType":"81","messageId":"82","endLine":1,"endColumn":16},{"ruleId":"79","severity":1,"message":"91","line":4,"column":8,"nodeType":"81","messageId":"82","endLine":4,"endColumn":17},{"ruleId":"79","severity":1,"message":"92","line":11,"column":27,"nodeType":"81","messageId":"82","endLine":11,"endColumn":33},{"ruleId":"79","severity":1,"message":"83","line":11,"column":35,"nodeType":"81","messageId":"82","endLine":11,"endColumn":41},{"ruleId":"79","severity":1,"message":"80","line":13,"column":10,"nodeType":"81","messageId":"82","endLine":13,"endColumn":16},{"ruleId":"79","severity":1,"message":"93","line":14,"column":10,"nodeType":"81","messageId":"82","endLine":14,"endColumn":17},{"ruleId":"94","severity":1,"message":"95","line":126,"column":11,"nodeType":"96","endLine":126,"endColumn":39},{"ruleId":"97","severity":1,"message":"98","line":127,"column":13,"nodeType":"96","endLine":127,"endColumn":61},{"ruleId":"94","severity":1,"message":"95","line":142,"column":19,"nodeType":"96","endLine":142,"endColumn":43},{"ruleId":"94","severity":1,"message":"95","line":146,"column":17,"nodeType":"96","endLine":146,"endColumn":41},{"ruleId":"94","severity":1,"message":"95","line":149,"column":17,"nodeType":"96","endLine":149,"endColumn":50},{"ruleId":"99","severity":1,"message":"100","line":197,"column":19,"nodeType":"96","endLine":201,"endColumn":20},{"ruleId":"101","severity":1,"message":"102","line":208,"column":17,"nodeType":"96","endLine":208,"endColumn":48},{"ruleId":"97","severity":1,"message":"98","line":210,"column":19,"nodeType":"96","endLine":210,"endColumn":65},{"ruleId":"94","severity":1,"message":"103","line":241,"column":13,"nodeType":"96","endLine":241,"endColumn":47},{"ruleId":"79","severity":1,"message":"104","line":1,"column":17,"nodeType":"81","messageId":"82","endLine":1,"endColumn":26},{"ruleId":"79","severity":1,"message":"80","line":9,"column":10,"nodeType":"81","messageId":"82","endLine":9,"endColumn":16},{"ruleId":"79","severity":1,"message":"92","line":13,"column":22,"nodeType":"81","messageId":"82","endLine":13,"endColumn":28},{"ruleId":"79","severity":1,"message":"83","line":14,"column":5,"nodeType":"81","messageId":"82","endLine":14,"endColumn":11},{"ruleId":"79","severity":1,"message":"84","line":15,"column":5,"nodeType":"81","messageId":"82","endLine":15,"endColumn":10},{"ruleId":"79","severity":1,"message":"80","line":2,"column":10,"nodeType":"81","messageId":"82","endLine":2,"endColumn":16},{"ruleId":"79","severity":1,"message":"93","line":3,"column":10,"nodeType":"81","messageId":"82","endLine":3,"endColumn":17},{"ruleId":"79","severity":1,"message":"92","line":4,"column":27,"nodeType":"81","messageId":"82","endLine":4,"endColumn":33},{"ruleId":"79","severity":1,"message":"83","line":4,"column":35,"nodeType":"81","messageId":"82","endLine":4,"endColumn":41},{"ruleId":"79","severity":1,"message":"84","line":4,"column":43,"nodeType":"81","messageId":"82","endLine":4,"endColumn":48},{"ruleId":"79","severity":1,"message":"85","line":4,"column":50,"nodeType":"81","messageId":"82","endLine":4,"endColumn":54},{"ruleId":"79","severity":1,"message":"105","line":4,"column":8,"nodeType":"81","messageId":"82","endLine":4,"endColumn":16},{"ruleId":"79","severity":1,"message":"80","line":5,"column":10,"nodeType":"81","messageId":"82","endLine":5,"endColumn":16},{"ruleId":"97","severity":1,"message":"98","line":37,"column":22,"nodeType":"96","endLine":37,"endColumn":39},{"ruleId":"106","severity":1,"message":"107","line":54,"column":16,"nodeType":"96","endLine":54,"endColumn":133},{"ruleId":"79","severity":1,"message":"80","line":4,"column":10,"nodeType":"81","messageId":"82","endLine":4,"endColumn":16},{"ruleId":"79","severity":1,"message":"80","line":3,"column":10,"nodeType":"81","messageId":"82","endLine":3,"endColumn":16},{"ruleId":"108","severity":1,"message":"109","line":4,"column":5,"nodeType":"110","messageId":"111","endLine":6,"endColumn":6},"no-unused-vars","'Helmet' is defined but never used.","Identifier","unusedVar","'Switch' is defined but never used.","'Route' is defined but never used.","'Link' is defined but never used.","no-native-reassign",["112"],"no-negated-in-lhs",["113"],"'ReactDOM' is defined but never used.","'WatchList' is defined but never used.","'Router' is defined but never used.","'NavLink' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'createRef' is defined but never used.","'FilmList' is defined but never used.","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","no-global-assign","no-unsafe-negation"]