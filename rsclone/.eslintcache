[{"C:\\Users\\Juliy\\Desktop\\RS_SCHOOL\\CloneWars\\CloneWars\\rsclone\\src\\index.js":"1","C:\\Users\\Juliy\\Desktop\\RS_SCHOOL\\CloneWars\\CloneWars\\rsclone\\src\\App.js":"2","C:\\Users\\Juliy\\Desktop\\RS_SCHOOL\\CloneWars\\CloneWars\\rsclone\\src\\reportWebVitals.js":"3","C:\\Users\\Juliy\\Desktop\\RS_SCHOOL\\CloneWars\\CloneWars\\rsclone\\src\\components\\FilmPage.js":"4","C:\\Users\\Juliy\\Desktop\\RS_SCHOOL\\CloneWars\\CloneWars\\rsclone\\src\\components\\FilmList.js":"5","C:\\Users\\Juliy\\Desktop\\RS_SCHOOL\\CloneWars\\CloneWars\\rsclone\\src\\components\\ModalWindow.js":"6"},{"size":534,"mtime":1610449609237,"results":"7","hashOfConfig":"8"},{"size":1682,"mtime":1610450209413,"results":"9","hashOfConfig":"8"},{"size":375,"mtime":1610449609240,"results":"10","hashOfConfig":"8"},{"size":2203,"mtime":1610449609229,"results":"11","hashOfConfig":"8"},{"size":4310,"mtime":1610449609228,"results":"12","hashOfConfig":"8"},{"size":1288,"mtime":1610449609229,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1qc3per",{"filePath":"17","messages":"18","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"16"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Juliy\\Desktop\\RS_SCHOOL\\CloneWars\\CloneWars\\rsclone\\src\\index.js",[],["29","30"],"C:\\Users\\Juliy\\Desktop\\RS_SCHOOL\\CloneWars\\CloneWars\\rsclone\\src\\App.js",["31","32","33","34","35","36"],"C:\\Users\\Juliy\\Desktop\\RS_SCHOOL\\CloneWars\\CloneWars\\rsclone\\src\\reportWebVitals.js",[],"C:\\Users\\Juliy\\Desktop\\RS_SCHOOL\\CloneWars\\CloneWars\\rsclone\\src\\components\\FilmPage.js",["37","38"],"import React from 'react';\r\n\r\nimport star from './assets/megastar.png';\r\n\r\n\r\n class FilmPage extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.data = props.value;\r\n        this.state = {video:\"\"};\r\n      \r\n    }\r\n    async componentDidMount(){\r\n     const response = await fetch(`https://api.themoviedb.org/3/movie/${this.data.id}/videos?api_key=fb0fcc2d34caffc53da53d676fbf678a&language=en-US`);\r\n     const res = await response.json();\r\n     this.setState({ video: res.results[0].key});\r\n     console.log(this.state)\r\n    }\r\n    \r\n    render(){\r\n       \r\n        return(\r\n            \r\n            <div id = \"fp\" className=\" container-fluid wrapper wrapperStyle\">\r\n               \r\n               <div id = \"upperBlock\" className=\"wrapper\">\r\n                 <div className=\"row\"></div>\r\n                 <div className=\"row\">\r\n\r\n                     <h1 className=\"col\">{this.data.original_title}</h1>\r\n                     <div className=\"col\">\r\n                     <h3 className=\"row\">Average Vote: {this.data.vote_average}\r\n                     <img src={star}></img>\r\n                     </h3>\r\n                     </div>\r\n                     <h3 className=\"col\">Votes: {this.data.vote_count}</h3>\r\n                 </div>\r\n               </div>\r\n\r\n               <div id = \"briefInfo\" className=\"wrapper\">\r\n                   <div>Release Date: {this.data.release_date}</div>\r\n                   <div></div>\r\n                </div>\r\n\r\n               <div id = \"photoVideo\" className=\"row\" >\r\n                   \r\n               <img  width=\"40%\"height =\"auto\" src={`https://image.tmdb.org/t/p/original/${this.data.poster_path}`} alt={this.data.title}/>\r\n               <iframe  width=\"60%\" height =\"100%\" src={`https://www.youtube.com/embed/${this.state.video}`}></iframe>\r\n               </div>\r\n               <div style={{  margin: \"8px\"}}><h3 >Synopsis: {this.data.overview}</h3></div>\r\n             \r\n               <div id = \"videoCarousel\" className=\"wrapper\"></div>\r\n               <div id = \"photoCarousel\" className=\"wrapper\"></div>\r\n               <div id = \"cast\"></div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default FilmPage;","C:\\Users\\Juliy\\Desktop\\RS_SCHOOL\\CloneWars\\CloneWars\\rsclone\\src\\components\\FilmList.js",["39","40","41"],"import {filmPage} from \"../App.js\";\r\nimport {ReactDOM} from 'react-dom';\r\nimport React from 'react';\r\nimport Carousel from \"react-multi-carousel\";\r\nimport ModalWindow from './ModalWindow';\r\nimport 'react-multi-carousel/lib/styles.css';\r\nimport star from './assets/star.png'\r\nimport play from './assets/play.png'\r\nimport info from './assets/info-grey.png';\r\n\r\n\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Link\r\n  } from \"react-router-dom\";\r\n\r\nconst responsive = {\r\n    superLargeDesktop: {\r\n      breakpoint: { max: 4000, min: 3000 },\r\n      items: 6\r\n    },\r\n    desktop: {\r\n      breakpoint: { max: 3000, min: 1024 },\r\n      items: 5\r\n    },\r\n    tablet: {\r\n      breakpoint: { max: 1024, min: 464 },\r\n      items: 3\r\n    },\r\n    mobile: {\r\n      breakpoint: { max: 464, min: 0 },\r\n      items: 1\r\n    }\r\n  };\r\n\r\nclass FilmList extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {data: []};\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const response = await fetch('https://api.themoviedb.org/3/movie/popular?api_key=fb0fcc2d34caffc53da53d676fbf678a&language=en-US&page=1');\r\n        const json = await response.json();\r\n        this.setState({ data: json });\r\n    }\r\n//onClick={()=>filmPage(el)}\r\n//onClick={()=>filmPage(el)}\r\n    render() {\r\n        //\r\n        if (this.state.data.results) {\r\n         //   console.log(this.state.data.results[0]);\r\n            return (\r\n                <Carousel\r\n                swipeable={false}\r\n                draggable={false}\r\n                showDots={false}\r\n                responsive={responsive}\r\n                ssr={true}\r\n                infinite={true}\r\n                autoPlaySpeed={1000}\r\n                keyBoardControl={true}\r\n                customTransition=\"all .5\"\r\n                transitionDuration={1000}\r\n                containerClass=\"carousel-container\"\r\n                removeArrowOnDeviceType={[\"tablet\", \"mobile\"]}\r\n                dotListClass=\"custom-dot-list-style\"\r\n                itemClass=\"carousel-item-padding\"\r\n                centerMode={false}\r\n                slidesToSlide={3}\r\n            >\r\n            \r\n            {this.state.data.results.map(el => (\r\n              \r\n                <div>\r\n                    <div className=\"films-list-img App-link\">\r\n                        <Router><Link to=\"/\"></Link> <Link style={{ textDecoration: 'none', color: 'white' }} to= \"/FilmPage\"> \r\n                    \r\n                       \r\n                            <img className=\"poster-img\" onClick={()=>filmPage(el)} src={`https://image.tmdb.org/t/p/original/${el.poster_path}`} alt={el.title}/>\r\n                            </Link>    \r\n                        </Router>\r\n                        <div className=\"bottom-content-wrapper\">\r\n                            <div className=\"rating\">\r\n                                <div><img src={star} alt=\"star icon\" /></div>\r\n                                <div className=\"vote_average\">{el.vote_average}</div>\r\n                            </div>\r\n                            <Router><Link to=\"/\"></Link><Link style={{ textDecoration: 'none', color: 'white' }} to= \"/FilmPage\">\r\n                                <div className=\"film-title\"onClick={()=>filmPage(el)} >{el.title}</div>\r\n                            </Link>\r\n                            </Router>\r\n                            <button type=\"button\" className=\"add-to-watchlist-btn\">+ Watchlist</button>\r\n                            <div className=\"additional-info\">\r\n                                <div className=\"trailer\">\r\n                                    <img src={play} alt=\"play button\" className=\"play-button\"/>  Trailer\r\n                                </div>\r\n                                <div>\r\n                                    <img src={info} alt=\"info button\" className=\"info-button\" onClick={()=>ModalWindow(el)}/> \r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                   \r\n                </div>\r\n            ))};\r\n                \r\n            </Carousel>\r\n            );\r\n        } else {\r\n            return (\r\n                <div>Wait...</div>\r\n            );\r\n        }\r\n    \r\n    }\r\n\r\n}\r\n\r\nexport default FilmList;","C:\\Users\\Juliy\\Desktop\\RS_SCHOOL\\CloneWars\\CloneWars\\rsclone\\src\\components\\ModalWindow.js",[],{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","severity":1,"message":"47","line":19,"column":3,"nodeType":"48","endLine":19,"endColumn":57},{"ruleId":"49","severity":1,"message":"50","line":19,"column":36,"nodeType":"51","messageId":"52","endLine":19,"endColumn":56},{"ruleId":"46","severity":1,"message":"47","line":30,"column":9,"nodeType":"48","endLine":30,"endColumn":59},{"ruleId":"49","severity":1,"message":"50","line":30,"column":38,"nodeType":"51","messageId":"52","endLine":30,"endColumn":58},{"ruleId":"46","severity":1,"message":"47","line":33,"column":9,"nodeType":"48","endLine":33,"endColumn":68},{"ruleId":"49","severity":1,"message":"50","line":33,"column":47,"nodeType":"51","messageId":"52","endLine":33,"endColumn":67},{"ruleId":"53","severity":1,"message":"54","line":33,"column":22,"nodeType":"48","endLine":33,"endColumn":38},{"ruleId":"55","severity":1,"message":"56","line":48,"column":16,"nodeType":"48","endLine":48,"endColumn":110},{"ruleId":"57","severity":1,"message":"58","line":2,"column":9,"nodeType":"59","messageId":"60","endLine":2,"endColumn":17},{"ruleId":"57","severity":1,"message":"61","line":14,"column":5,"nodeType":"59","messageId":"60","endLine":14,"endColumn":11},{"ruleId":"57","severity":1,"message":"62","line":15,"column":5,"nodeType":"59","messageId":"60","endLine":15,"endColumn":10},"no-native-reassign",["63"],"no-negated-in-lhs",["64"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-script-url","Script URL is a form of eval.","Literal","unexpectedScriptURL","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","no-unused-vars","'ReactDOM' is defined but never used.","Identifier","unusedVar","'Switch' is defined but never used.","'Route' is defined but never used.","no-global-assign","no-unsafe-negation"]