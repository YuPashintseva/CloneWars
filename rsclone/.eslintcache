[{"C:\\Users\\KiguradzeLeo\\Documents\\GitHub\\CloneWars\\rsclone\\src\\index.js":"1","C:\\Users\\KiguradzeLeo\\Documents\\GitHub\\CloneWars\\rsclone\\src\\reportWebVitals.js":"2","C:\\Users\\KiguradzeLeo\\Documents\\GitHub\\CloneWars\\rsclone\\src\\App.js":"3","C:\\Users\\KiguradzeLeo\\Documents\\GitHub\\CloneWars\\rsclone\\src\\components\\FilmList.js":"4","C:\\Users\\KiguradzeLeo\\Documents\\GitHub\\CloneWars\\rsclone\\src\\components\\FilmPage.js":"5"},{"size":517,"mtime":1610076248533,"results":"6","hashOfConfig":"7"},{"size":375,"mtime":1610076248549,"results":"8","hashOfConfig":"7"},{"size":495,"mtime":1610181908902,"results":"9","hashOfConfig":"7"},{"size":3437,"mtime":1610207456276,"results":"10","hashOfConfig":"7"},{"size":1830,"mtime":1610259338980,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"1oj9p7d",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"14"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"14"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\KiguradzeLeo\\Documents\\GitHub\\CloneWars\\rsclone\\src\\index.js",[],["25","26"],"C:\\Users\\KiguradzeLeo\\Documents\\GitHub\\CloneWars\\rsclone\\src\\reportWebVitals.js",[],"C:\\Users\\KiguradzeLeo\\Documents\\GitHub\\CloneWars\\rsclone\\src\\App.js",["27"],"import  FilmList  from \"./components/FilmList\";\r\nimport FilmPage from \"./components/FilmPage\";\r\nimport './App.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'bootstrap/dist/css/custom.css';\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>It will be a header</h1>\r\n      <div className=\"d-flex justify-content-around\">\r\n        <div className=\"films-list\">\r\n          <FilmList />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  ); \r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\KiguradzeLeo\\Documents\\GitHub\\CloneWars\\rsclone\\src\\components\\FilmList.js",["28"],"import {filmPage} from \"./FilmPage.js\";\r\n\r\nimport React from 'react';\r\nimport Carousel from \"react-multi-carousel\";\r\nimport 'react-multi-carousel/lib/styles.css';\r\nimport star from './assets/star.png'\r\nimport play from './assets/play-button.png'\r\n\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Link\r\n  } from \"react-router-dom\";\r\n\r\nconst responsive = {\r\n    superLargeDesktop: {\r\n      breakpoint: { max: 4000, min: 3000 },\r\n      items: 6\r\n    },\r\n    desktop: {\r\n      breakpoint: { max: 3000, min: 1024 },\r\n      items: 6\r\n    },\r\n    tablet: {\r\n      breakpoint: { max: 1024, min: 464 },\r\n      items: 2\r\n    },\r\n    mobile: {\r\n      breakpoint: { max: 464, min: 0 },\r\n      items: 1\r\n    }\r\n  };\r\n\r\nclass FilmList extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {data: []};\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const response = await fetch('https://api.themoviedb.org/3/movie/popular?api_key=fb0fcc2d34caffc53da53d676fbf678a&language=en-US&page=1');\r\n        const json = await response.json();\r\n        this.setState({ data: json });\r\n    }\r\n\r\n    render() {\r\n        //\r\n        if (this.state.data.results) {\r\n            console.log(this.state.data.results[0]);\r\n            return (\r\n                <Carousel\r\n                swipeable={false}\r\n                draggable={false}\r\n                showDots={false}\r\n                responsive={responsive}\r\n                ssr={true}\r\n                infinite={true}\r\n                autoPlaySpeed={1000}\r\n                keyBoardControl={true}\r\n                customTransition=\"all .5\"\r\n                transitionDuration={1000}\r\n                containerClass=\"carousel-container\"\r\n                removeArrowOnDeviceType={[\"tablet\", \"mobile\"]}\r\n                dotListClass=\"custom-dot-list-style\"\r\n                itemClass=\"carousel-item-padding\"\r\n                centerMode={false}\r\n                slidesToSlide={3}\r\n            >\r\n            \r\n            {this.state.data.results.map(el => (\r\n                <div>\r\n                    <div className=\"films-list-img App-link\"    onClick={()=>filmPage(el)}>\r\n                        <Router><Link to= \"/FilmPage\">\r\n                        <img src={`https://image.tmdb.org/t/p/original/${el.poster_path}`} alt={el.title}/>\r\n                        <div className=\"bottom-content-wrapper\">\r\n                            <div className=\"rating\">\r\n                                <div><img src={star} alt=\"star\" /></div>\r\n                                <div className=\"vote_average\">{el.vote_average}</div>\r\n                            </div>\r\n                            <div className=\"film-title\">{el.title}</div>\r\n                            <button type=\"button\" className=\"add-to-watchlist-btn\">+ Watchlist</button>\r\n                            <div className=\"additional-info\">\r\n                                <div>Trailer</div>\r\n                                <div>Information</div>\r\n                            </div>\r\n                        </div>\r\n                        </Link><Switch><Route path=\"/FilmPage\"/></Switch></Router>\r\n                    </div>\r\n                   \r\n                </div>\r\n            ))};\r\n                \r\n            </Carousel>\r\n            );\r\n        } else {\r\n            return (\r\n                <div>Wait...</div>\r\n            );\r\n        }\r\n    \r\n    }\r\n\r\n}\r\n\r\nexport default FilmList;","C:\\Users\\KiguradzeLeo\\Documents\\GitHub\\CloneWars\\rsclone\\src\\components\\FilmPage.js",["29"],{"ruleId":"30","replacedBy":"31"},{"ruleId":"32","replacedBy":"33"},{"ruleId":"34","severity":1,"message":"35","line":2,"column":8,"nodeType":"36","messageId":"37","endLine":2,"endColumn":16},{"ruleId":"34","severity":1,"message":"38","line":7,"column":8,"nodeType":"36","messageId":"37","endLine":7,"endColumn":12},{"ruleId":"39","severity":1,"message":"40","line":20,"column":22,"nodeType":"41","endLine":20,"endColumn":38},"no-native-reassign",["42"],"no-negated-in-lhs",["43"],"no-unused-vars","'FilmPage' is defined but never used.","Identifier","unusedVar","'play' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]