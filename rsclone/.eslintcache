[{"C:\\Users\\Johnatan\\Desktop\\cloneWars19\\CloneWars\\rsclone\\src\\index.js":"1","C:\\Users\\Johnatan\\Desktop\\cloneWars19\\CloneWars\\rsclone\\src\\App.js":"2","C:\\Users\\Johnatan\\Desktop\\cloneWars19\\CloneWars\\rsclone\\src\\components\\i18next.js":"3","C:\\Users\\Johnatan\\Desktop\\cloneWars19\\CloneWars\\rsclone\\src\\components\\FilmList.js":"4","C:\\Users\\Johnatan\\Desktop\\cloneWars19\\CloneWars\\rsclone\\src\\components\\Trailer.js":"5","C:\\Users\\Johnatan\\Desktop\\cloneWars19\\CloneWars\\rsclone\\src\\components\\FilmPage.js":"6","C:\\Users\\Johnatan\\Desktop\\cloneWars19\\CloneWars\\rsclone\\src\\components\\Footer.js":"7","C:\\Users\\Johnatan\\Desktop\\cloneWars19\\CloneWars\\rsclone\\src\\components\\SearchArea.js":"8","C:\\Users\\Johnatan\\Desktop\\cloneWars19\\CloneWars\\rsclone\\src\\components\\MovieList.js":"9","C:\\Users\\Johnatan\\Desktop\\cloneWars19\\CloneWars\\rsclone\\src\\components\\WatchList.js":"10","C:\\Users\\Johnatan\\Desktop\\cloneWars19\\CloneWars\\rsclone\\src\\components\\Statistics.js":"11","C:\\Users\\Johnatan\\Desktop\\cloneWars19\\CloneWars\\rsclone\\src\\components\\GoogleAuth.js":"12","C:\\Users\\Johnatan\\Desktop\\cloneWars19\\CloneWars\\rsclone\\src\\components\\ModalWindow.js":"13","C:\\Users\\Johnatan\\Desktop\\cloneWars19\\CloneWars\\rsclone\\src\\components\\Movie.js":"14","C:\\Users\\Johnatan\\Desktop\\cloneWars19\\CloneWars\\rsclone\\src\\components\\CaurouselMain.js":"15"},{"size":711,"mtime":1612173981201,"results":"16","hashOfConfig":"17"},{"size":12286,"mtime":1612175674479,"results":"18","hashOfConfig":"17"},{"size":1311,"mtime":1612173981200,"results":"19","hashOfConfig":"17"},{"size":8709,"mtime":1612173981179,"results":"20","hashOfConfig":"17"},{"size":649,"mtime":1612173981184,"results":"21","hashOfConfig":"17"},{"size":4379,"mtime":1612173981179,"results":"22","hashOfConfig":"17"},{"size":2378,"mtime":1612173981180,"results":"23","hashOfConfig":"17"},{"size":1300,"mtime":1612173981183,"results":"24","hashOfConfig":"17"},{"size":850,"mtime":1612175674480,"results":"25","hashOfConfig":"17"},{"size":3407,"mtime":1612173981184,"results":"26","hashOfConfig":"17"},{"size":4483,"mtime":1612173981183,"results":"27","hashOfConfig":"17"},{"size":2152,"mtime":1612173981181,"results":"28","hashOfConfig":"17"},{"size":4760,"mtime":1612173981181,"results":"29","hashOfConfig":"17"},{"size":1766,"mtime":1612179666531,"results":"30","hashOfConfig":"17"},{"size":9717,"mtime":1612179804190,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"1pto1fs",{"filePath":"35","messages":"36","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"34"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"34"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"34"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"34"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"34"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"34"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"34"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"34"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"34"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"34"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"34"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Johnatan\\Desktop\\cloneWars19\\CloneWars\\rsclone\\src\\index.js",[],["74","75"],"C:\\Users\\Johnatan\\Desktop\\cloneWars19\\CloneWars\\rsclone\\src\\App.js",["76","77","78","79","80","81","82","83","84"],"import FilmList from \"./components/FilmList\";\r\nimport FilmPage from \"./components/FilmPage\";\r\nimport Trailer from \"./components/Trailer\";\r\nimport SearchArea from \"./components/SearchArea\";\r\nimport MovieList from \"./components/MovieList\";\r\nimport Footer from \"./components/Footer\";\r\nimport mainLogo from \"./logo-imdb.png\";\r\nimport \"./App.css\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { Component } from \"react\";\r\nimport { Route, Link } from \"react-router-dom\";\r\nimport Watchlist from \"./components/WatchList\";\r\nimport Statistics from \"./components/Statistics\";\r\nimport GoogleAuth from \"./components/GoogleAuth\";\r\nimport { ContextMenu, MenuItem, ContextMenuTrigger } from \"react-contextmenu\";\r\nimport i18next from \"i18next\";\r\nimport Navbar from \"react-bootstrap/Navbar\";\r\nimport Nav from \"react-bootstrap/Nav\";\r\nimport Container from \"react-bootstrap/Container\";\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.incrementWatchListNumber = this.incrementWatchListNumber.bind(this);\r\n    this.decrementWatchListNumber = this.decrementWatchListNumber.bind(this);\r\n    this.clearWatchList = this.clearWatchList.bind(this);\r\n    this.change = this.change.bind(this);\r\n    this.state = {\r\n      watchlist: 0,\r\n      movies: [],\r\n      searchTerm: \"\",\r\n      color: \"\",\r\n      count: 0,\r\n      colors: [\"blue\", \"yellow\", \"white\", \"brown\", \"purple\", \"red\", \"green\"],\r\n      font: \"\",\r\n      fonts: [\r\n        \"Times New Roman\",\r\n        \"Arial\",\r\n        \"Courier New\",\r\n        \"Brush Spirit MT\",\r\n        \"Copperplate\",\r\n        \"Lucida Console\",\r\n        \"Helvetica\",\r\n      ],\r\n      flag: false,\r\n      language: \"en\",\r\n    };\r\n\r\n    this.apiKey = \"c9ebd652172bbcdaa5b3746fa2e60207\";\r\n  }\r\n  // flag: false,\r\n  change(option) {\r\n    localStorage.setItem(\"lang\", option.target.value);\r\n    sessionStorage.removeItem(\"lang\");\r\n    sessionStorage.setItem(\"lang\", option.target.value);\r\n    this.setState({ language: option.target.value });\r\n  }\r\n\r\n  incrementWatchListNumber(filmid) {\r\n    let arr = JSON.parse(localStorage.getItem(\"films\"));\r\n    if (arr) {\r\n      if (!arr.includes(filmid)) {\r\n        this.setState({ watchlist: this.state.watchlist + 1 });\r\n      }\r\n    } else {\r\n      this.setState({ watchlist: this.state.watchlist + 1 });\r\n    }\r\n  }\r\n\r\n  decrementWatchListNumber() {\r\n    //without it nothing worked\r\n    localStorage.setItem(\"films\", JSON.stringify([]));\r\n    let currentNum = JSON.parse(localStorage.getItem(\"films\")).length / 2;\r\n    if (currentNum > 1) {\r\n      currentNum -= 1;\r\n      this.setState({ watchlist: currentNum });\r\n    }\r\n  }\r\n\r\n  clearWatchList(e, data) {\r\n    e.preventDefault();\r\n    localStorage.setItem(\"films\", JSON.stringify([]));\r\n    this.setState({ watchlist: 0 });\r\n  }\r\n\r\n  defineNumberWatchList() {\r\n    if (localStorage.getItem(\"films\")) {\r\n      this.setState({\r\n        watchlist: JSON.parse(localStorage.getItem(\"films\")).length / 2,\r\n      });\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.defineNumberWatchList();\r\n  }\r\n\r\n  // search\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    fetch(\r\n      `https://api.themoviedb.org/3/search/movie?api_key=${this.apiKey}&query=${this.state.searchTerm}`\r\n    )\r\n      .then((data) => data.json())\r\n      .then((data) => {\r\n        this.setState({ movies: [...data.results]});\r\n      });\r\n  };\r\n  // search\r\n  handleChange = (e) => {\r\n    this.setState({ searchTerm: e.target.value });\r\n  };\r\n\r\n  changeLinkState() {\r\n    const inp = document.querySelector(\"input\");\r\n    const datl = document.querySelector(\"#datalistOptions\").childNodes;\r\n    const filmDATA = JSON.parse(sessionStorage.getItem(\"fullInf\"));\r\n\r\n    const currFilm = filmDATA.filter((el) => el.original_title === inp.value);\r\n\r\n    sessionStorage.setItem(\"val\", JSON.stringify(currFilm[0]));\r\n\r\n    let flag = true;\r\n    datl.forEach((el) => {\r\n      if (el.value === inp.value) flag = false;\r\n    });\r\n    if (\r\n      !flag &&\r\n      document.querySelector(\"#photoVideo\") &&\r\n      document.querySelector(\"h2\").innerHTML !== inp.value\r\n    )\r\n      window.location.reload();\r\n    return flag;\r\n  }\r\n\r\n  secondNav() {\r\n    return (\r\n      <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\r\n        <Container\r\n          style={{ display: \"flex\", fontFamily: `${this.state.font}` }}\r\n        >\r\n          <a className=\"cursor\" onClick={() => this.backgroundChange()}>\r\n            {this.state.language === 'ru' ? 'Изменить фон' : 'Change Background'}\r\n          </a>\r\n          <a className=\"cursor\" onClick={() => this.setState({ color: \"\" })}>\r\n            {this.state.language === 'ru' ? 'Фон по умолчанию' : 'Default Background'}\r\n          </a>\r\n          <a className=\"cursor\" onClick={() => this.fontChange()}>\r\n            {this.state.language === 'ru' ? 'Изменить шрифт' : 'Change Font'}\r\n          </a>\r\n          <a className=\"cursor\" onClick={() => this.setState({ font: \"\" })}>\r\n            {this.state.language === 'ru' ? 'Шрифт по умолчанию' : 'Default Font'}\r\n          </a>\r\n        </Container>\r\n      </Navbar>\r\n    );\r\n  }\r\n  backgroundChange() {\r\n    this.setState({ color: this.state.colors[this.state.count] });\r\n\r\n    if (this.state.count >= this.state.colors.length - 1)\r\n      this.setState({ count: 0 });\r\n    else this.setState({ count: this.state.count + 1 });\r\n  }\r\n  fontChange() {\r\n    this.setState({ font: this.state.fonts[this.state.count] });\r\n\r\n    if (this.state.count >= this.state.fonts.length - 1)\r\n      this.setState({ count: 0 });\r\n    else this.setState({ count: this.state.count + 1 });\r\n  }\r\n  render() {\r\n    const lang = localStorage.getItem(\"lang\") || \"en\";\r\n\r\n    // setTimeout(() => {\r\n    //   this.setState({ flag: true });\r\n    // }, 7000);\r\n    // if (this.state.flag) {\r\n    return (\r\n      <div className=\"App\">\r\n        <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\r\n          <Container style={{ fontFamily: `${this.state.font}` }}>\r\n            <Navbar.Brand>\r\n              <Link to=\"/\">\r\n                <img className=\"navbar-mainlogo\" src={mainLogo}></img>\r\n              </Link>\r\n            </Navbar.Brand>\r\n\r\n            <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n\r\n            <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n              <Nav className=\"mr-auto\">\r\n                <Nav.Link href=\"#\">\r\n                  <Link style={{ textDecoration: \"none\" }} to=\"/WatchList\">\r\n                    <a className=\"nav-link nav__item\">\r\n                    <div className='nav__item_flex'>\r\n                      <ContextMenuTrigger\r\n                        id=\"add_same_id\"\r\n                        className=\"context-menu-item\"\r\n                      >\r\n                        <div>\r\n                          <ContextMenuTrigger\r\n                            id=\"add_same_id\"\r\n                            className=\"context-menu-item\"\r\n                          >\r\n                            <div className=\"wl\">\r\n                              {this.state.language === \"ru\"\r\n                                ? \"Фильмы к просмотру\"\r\n                                : \"WatchList\"}\r\n                            </div>\r\n                          </ContextMenuTrigger>\r\n                          <ContextMenu className=\"menu\" id=\"add_same_id\">\r\n                            <MenuItem\r\n                              onClick={(e) => this.clearWatchList(e)}\r\n                              data={{ item: \"Home\" }}\r\n                              className=\"menuItem\"\r\n                            >\r\n                              {this.state.language === \"ru\"\r\n                                ? \"Очистить список фильмов\"\r\n                                : \"Clear WatchList\"}\r\n                            </MenuItem>\r\n                            <MenuItem\r\n                              data={{ item: \"Home\" }}\r\n                              className=\"menuItem\"\r\n                            >\r\n                              {this.state.language === \"ru\"\r\n                                ? \"Перейти к фильмам\"\r\n                                : \"Go to WatchList\"}\r\n                            </MenuItem>\r\n                          </ContextMenu>\r\n\r\n                          {/* <div className=\"watchlist-num\">\r\n                              {this.state.watchlist}\r\n                            </div> */}\r\n                        </div>\r\n                      </ContextMenuTrigger>\r\n                      <span  className=\"badge rounded-pill badge-notification bg-warning text-dark badge__info\">\r\n                        {this.state.watchlist}\r\n                      </span>\r\n                      </div>\r\n                    </a>\r\n                  </Link>\r\n                </Nav.Link>\r\n                <Nav.Link>\r\n                  <a\r\n                    className=\"nav-link\"\r\n                    onClick={() => {\r\n                      !this.state.flag\r\n                        ? this.setState({ flag: true })\r\n                        : this.setState({ flag: false });\r\n                    }}\r\n                  >\r\n                    {this.state.language === \"ru\" ? \"Настройки\" : \"Settings\"}\r\n                  </a>\r\n                </Nav.Link>\r\n                <Nav.Link >\r\n                  <Link to=\"/Statistics\">\r\n                    <a className=\"nav-link\">\r\n                      {this.state.language === \"ru\"\r\n                        ? \"Статистика\"\r\n                        : \"Statistic\"}\r\n                    </a>\r\n                  </Link>\r\n                </Nav.Link>\r\n\r\n                <Nav.Link>\r\n                  <GoogleAuth />\r\n                </Nav.Link>\r\n\r\n                <Nav.Link>\r\n                  <select\r\n                    name=\"\"\r\n                    id=\"\"\r\n                    className=\"custom-select pull-right\"\r\n                    onChange={this.change}\r\n                    value={lang}\r\n                  >\r\n                    <option value=\"ru\">Русский</option>\r\n                    <option value=\"en\">English</option>\r\n                  </select>\r\n                </Nav.Link>\r\n            \r\n              \r\n              <Nav.Link>\r\n              {/*<Link to=\"/MovieList\">*/}\r\n              <SearchArea\r\n                handleSubmit={this.handleSubmit}\r\n                handleChange={this.handleChange}\r\n                \r\n              />\r\n           {/* </Link>*/}\r\n            </Nav.Link>\r\n            </Nav>\r\n            </Navbar.Collapse>\r\n            \r\n          </Container>\r\n        </Navbar>\r\n        {this.state.flag ? this.secondNav() : \"\"}\r\n        <div\r\n          id=\"ourRoot\"\r\n          className=\"d-flex justify-content-around\"\r\n          style={{ backgroundColor: `${this.state.color}` }}\r\n        >\r\n          <div id=\"fl\" className=\"films-list\">\r\n            <Route exact path=\"/\">\r\n              <FilmList\r\n                watchListincrement={this.incrementWatchListNumber}\r\n                lang={this.state.language}\r\n                key={1}\r\n              />\r\n            </Route>\r\n           { /*\r\n            <Route path=\"/\">\r\n              <MovieList movies={this.state.movies} />\r\n            </Route>\r\n           */}\r\n            <Route path=\"/FilmPage\">\r\n              <FilmPage\r\n                lang={this.state.language}\r\n                value={this.state.font}\r\n                key={1}\r\n              />\r\n            </Route>\r\n\r\n            <Route path=\"/WatchList\">\r\n              <Watchlist watchListdecrement={this.decrementWatchListNumber} \r\n                lang={this.state.language}\r\n                key={1} \r\n              />\r\n            </Route>\r\n\r\n            <Route path=\"/Statistics\">\r\n              <Statistics                 \r\n                lang={this.state.language}\r\n                key={1} \r\n              />\r\n            </Route>\r\n\r\n            <Route path=\"/MovieList\">\r\n           <MovieList movies = {this.state.movies}/>\r\n            </Route>\r\n            <Route path=\"/Trailer\">\r\n              <Trailer />\r\n            </Route>\r\n          </div>\r\n        </div>\r\n        {/* footer isert here */}\r\n        <Footer value={this.state.font} />\r\n      </div>\r\n    );\r\n  }\r\n  // else return <Cover />;\r\n  //}\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\Johnatan\\Desktop\\cloneWars19\\CloneWars\\rsclone\\src\\components\\i18next.js",["85","86","87"],"import i18next from \"i18next\";\r\nimport { initReactI18next } from \"react-i18next\";\r\nimport common_en from \"../translations/en\";\r\nimport common_ru from \"../translations/ru\";\r\n\r\nimport Backend from \"i18next-http-backend\";\r\nimport LanguageDetector from \"i18next-browser-languagedetector\";\r\n// don't want to use this?\r\n// have a look at the Quick start guide\r\n// for passing in lng and translations on init\r\n\r\nconst Language = [\"en\", \"ru\"];\r\n\r\nconst resources = {\r\n  en: {\r\n    translation: common_en,\r\n  },\r\n  ru: {\r\n    translation: common_ru,\r\n  },\r\n};\r\n\r\ni18next\r\n  // load translation using http -> see /public/locales (i.e. https://github.com/i18next/react-i18next/tree/master/example/react/public/locales)\r\n  // learn more: https://github.com/i18next/i18next-http-backend\r\n  //.use(Backend)\r\n  // detect user language\r\n  // learn more: https://github.com/i18next/i18next-browser-languageDetector\r\n  //.use(LanguageDetector)\r\n  // pass the i18n instance to react-i18next.\r\n  .use(initReactI18next)\r\n  // init i18next\r\n  // for all options read: https://www.i18next.com/overview/configuration-options\r\n  .init({\r\n    resources,\r\n    lng: \"en\",\r\n    keySeparator: false,\r\n    interpolation: {\r\n      escapeValue: false, // not needed for react as it escapes by default\r\n    },\r\n  });\r\n\r\nexport default i18next;\r\n","C:\\Users\\Johnatan\\Desktop\\cloneWars19\\CloneWars\\rsclone\\src\\components\\FilmList.js",["88","89","90"],"import React from 'react';\r\nimport Carousel from \"react-multi-carousel\";\r\nimport ModalWindow from './ModalWindow';\r\nimport CaurouselMain from './CaurouselMain';\r\nimport 'react-multi-carousel/lib/styles.css';\r\nimport star from './assets/star.png'\r\nimport play from './assets/play.png'\r\nimport info from './assets/info-grey.png';\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\nconst responsive = {\r\n    superLargeDesktop: {\r\n      breakpoint: { max: 4000, min: 3000 },\r\n      items: 5\r\n    },\r\n    desktop: {\r\n      breakpoint: { max: 3000, min: 1024 },\r\n      items: 4\r\n    },\r\n    tablet: {\r\n      breakpoint: { max: 1024, min: 464 },\r\n      items: 3\r\n    },\r\n    mobile: {\r\n      breakpoint: { max: 464, min: 0 },\r\n      items: 1\r\n    }\r\n  };\r\n\r\nclass FilmList extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {data: [], dataMain: [], value: \"\", showHide: false, currFilmInfo: {}, showAlert: false, lang: this.props.lang};\r\n        this.handleModalShowHide = this.handleModalShowHide.bind(this);\r\n        this.handleModalShowHide2 = this.handleModalShowHide2.bind(this);\r\n        this.escFunction = this.escFunction.bind(this);\r\n    }\r\n\r\n    escFunction(event){\r\n        if(event.keyCode === 27) {\r\n            this.setState({showHide: false});\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const response = await fetch(`https://api.themoviedb.org/3/movie/popular?api_key=fb0fcc2d34caffc53da53d676fbf678a&language=${this.props.lang}&page=1`);\r\n        const json = await response.json();\r\n        this.setState({ data: json});\r\n        sessionStorage.setItem('fullInf',JSON.stringify(json.results));\r\n        document.addEventListener(\"keydown\", this.escFunction, false);\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        document.removeEventListener(\"keydown\", this.escFunction, false);\r\n    }\r\n\r\n    returnState(){\r\n        return this.state;\r\n    }\r\n\r\n    \r\n    async updateURL(lang) {\r\n        let response ='';\r\n        try {\r\n            let response = await fetch(`https://api.themoviedb.org/3/movie/popular?api_key=fb0fcc2d34caffc53da53d676fbf678a&language=${lang}&page=1`);\r\n            const json = await response.json();\r\n            return json;\r\n        } catch(err) {\r\n            alert(err);\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        let res = '';\r\n        if (prevProps.lang != this.props.lang) {\r\n            let lan = 'en';\r\n            this.state.lang === 'en' ? lan = 'ru' : lan = 'en';\r\n            res = this.updateURL(lan).then((value) => {\r\n                this.setState({ data: value});\r\n                this.setState({lang: this.props.lang});\r\n            })\r\n        }\r\n    }\r\n\r\n    handleModalShowHide(film, isneedAlert) {\r\n        this.setState({ showHide: !this.state.showHide });\r\n        this.setState({ showAlert: isneedAlert });\r\n        this.setState({ currFilmInfo: film });\r\n    }\r\n\r\n    handleModalShowHide2() {\r\n        this.setState({ showHide: !this.state.showHide });\r\n    }\r\n    interestedCount(title) {\r\n        if(localStorage.getItem('count')){\r\n            let obj = JSON.parse(localStorage.getItem('count'));\r\n            if (obj[title]) {\r\n                obj[title] = parseInt(obj[title])+1;\r\n            } else {\r\n                obj[title] = 1;\r\n            }\r\n            localStorage.setItem('count', JSON.stringify(obj));\r\n        }\r\n        else {\r\n            let obj ={};\r\n            obj[title] = 1;\r\n            localStorage.setItem('count', JSON.stringify(obj));\r\n        }\r\n    }\r\n\r\n    render() {\r\n        console.log('language', this.props.lang)\r\n        let mod = '';\r\n        if (this.state.data.results) {\r\n            if (this.state.showHide) {\r\n                mod = <ModalWindow handleModalShowHide = {this.handleModalShowHide2} filmInfo = {this.state.currFilmInfo} toWatchList={this.state.showAlert} lang={this.state.lang} />\r\n            }\r\n            return (\r\n                <div>\r\n                <CaurouselMain type={\"films\"} lang={this.state.lang} key={2} />\r\n\r\n                <div className=\"head-text\">\r\n                    {this.props.lang === 'ru' ? 'Рекомендуемые фильмы': 'What to watch'}\r\n                </div>\r\n                {mod}\r\n                <Carousel\r\n                swipeable={false}\r\n                draggable={true}\r\n                showDots={false}\r\n                responsive={responsive}\r\n                ssr={true}\r\n                infinite={false}\r\n                autoPlaySpeed={1000}\r\n                keyBoardControl={true}\r\n                customTransition=\"all .5\"\r\n                transitionDuration={1000}\r\n                containerClass=\"carousel-container\"\r\n                removeArrowOnDeviceType={[\"tablet\", \"mobile\"]}\r\n                dotListClass=\"custom-dot-list-style\"\r\n                itemClass=\"carousel-item-padding\"\r\n                centerMode={false}\r\n                slidesToSlide={3}\r\n            >\r\n            \r\n            {this.state.data.results.map(el => (\r\n                <div element={el.id} key ={el.id}>\r\n                    <div className=\"films-list-img App-link\" >\r\n                    \r\n                        <Link style={{ textDecoration: 'none', color: 'white' }} to= \"/FilmPage\" > \r\n                            <img className=\"poster-img\" onClick={()=>this.interestedCount(el.original_title)} onMouseOver={()=> \r\n                                    {\r\n                                        sessionStorage.removeItem(\"val\");\r\n                                        sessionStorage.setItem(\"val\",JSON.stringify(el));\r\n                                        sessionStorage.removeItem(\"lang\");\r\n                                        sessionStorage.setItem(\"lang\",this.props.lang);\r\n                                    }\r\n                                }  src={`https://image.tmdb.org/t/p/original/${el.poster_path}`} alt={el.title}/>\r\n                        </Link>    \r\n                       \r\n                        <div className=\"bottom-content-wrapper\">\r\n                            <div className=\"rating\">\r\n                                <div className=\"vote\">\r\n       \r\n                                  <img className = \"star\" src={star} alt=\"star icon\" />\r\n                                    <div className=\"vote_average\">{el.vote_average}</div>\r\n                                </div>\r\n                            </div>\r\n                           <Link style={{ textDecoration: 'none', color: 'white' }} to= \"/FilmPage\">\r\n                                <div className=\"film-title\" onClick={()=>this.interestedCount(el.original_title)} onMouseOver={()=>\r\n                                    {\r\n                                        sessionStorage.removeItem(\"val\");\r\n                                        sessionStorage.setItem(\"val\",JSON.stringify(el));\r\n                                        sessionStorage.removeItem(\"lang\");\r\n                                        sessionStorage.setItem(\"lang\",this.props.lang);\r\n                                    }\r\n                                }>{el.title}</div>\r\n                            </Link> \r\n                            \r\n                            <button type=\"button\" className=\"add-to-watchlist-btn\" onClick = {() => {this.handleModalShowHide(el, true); this.props.watchListincrement(el.id); }}>{this.props.lang === 'ru'? '+ Добавить к просмотру' : '+ Watchlist' }</button>\r\n                            <div className=\"additional-info\">\r\n                                \r\n                                    <div className=\"trailer\">                                \r\n                                        <img src={play} alt=\"play button\" className=\"play-button\"/>{this.props.lang === 'ru' ? 'Трейлер' : 'Trailer'}\r\n                                    </div>\r\n                              \r\n                                <div className=\"info-button-wrapper\">\r\n                                    <img src={info} alt=\"info button\" className=\"info-button\" onClick = {() => this.handleModalShowHide(el, false)}/> \r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n            ))};\r\n                \r\n            </Carousel>\r\n            <div className=\"head-text\">\r\n                {this.props.lang === 'ru' ? 'Звёзды' : 'Popular people'}\r\n            </div>\r\n            <CaurouselMain type={\"people\"} lang={this.state.lang} key={1} />\r\n            </div>\r\n            );\r\n        } else {\r\n            return (\r\n                <div>Wait...</div>\r\n            );\r\n        }\r\n    \r\n    }\r\n\r\n}\r\n\r\n\r\nexport default FilmList;","C:\\Users\\Johnatan\\Desktop\\cloneWars19\\CloneWars\\rsclone\\src\\components\\Trailer.js",["91","92","93","94","95","96","97","98"],"\r\nimport React from 'react';\r\nimport { Button, Modal, Container, Row, Col, Image } from 'react-bootstrap';\r\nimport close from './assets/close.png'\r\n\r\n\r\nclass Trailer extends React.Component{\r\n    constructor() {\r\n        super();\r\n        \r\n    }\r\n    \r\n    render() {  \r\n            return (\r\n                <div id = \"fp\" className=\"container-fluid wrapperStyle\">\r\n                    <div className=\"top-menu-wrapper\">\r\n                        <div className=\"head-text\">Trailer</div>\r\n                    </div>\r\n                    <div>\r\n                    </div>\r\n                </div>\r\n            )\r\n\r\n    }\r\n}\r\n\r\nexport default Trailer;","C:\\Users\\Johnatan\\Desktop\\cloneWars19\\CloneWars\\rsclone\\src\\components\\FilmPage.js",["99","100","101","102"],"import React from 'react';\r\nimport star from './assets/megastar.png';\r\nimport CarouselMain from './CaurouselMain';\r\n\r\n\r\n class FilmPage extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {video:\"\",font:'', dat:JSON.parse(sessionStorage.getItem(\"val\")), lang: this.props.lang, id: sessionStorage.getItem(\"val\").id};\r\n    }\r\n\r\n    async updateURL(lang, id) {\r\n        let response ='';\r\n        try {\r\n            let response = await fetch(`https://api.themoviedb.org/3/movie/${id}?api_key=fb0fcc2d34caffc53da53d676fbf678a&language=${lang}`);\r\n            const json = await response.json();\r\n            return json;\r\n        } catch(err) {\r\n            alert(err);\r\n        }\r\n    }\r\n\r\n    async componentDidMount(){\r\n     const response = await fetch(`https://api.themoviedb.org/3/movie/${this.state.dat.id}/videos?api_key=fb0fcc2d34caffc53da53d676fbf678a&language=${this.state.lang}`);\r\n     const res = await response.json();\r\n     this.setState({ video: res.results[0]?res.results[0].key:''});\r\n     let val = JSON.parse(sessionStorage.getItem(\"val\"));\r\n     this.setState({dat: val});\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        let res = '';\r\n        if (prevProps.lang !== this.props.lang) {\r\n            console.log(prevProps, this.props.lang)    \r\n            res = this.updateURL(this.props.lang, this.state.dat.id).then((value) => {\r\n                this.setState({ dat: value});\r\n                this.setState({lang: this.props.lang});\r\n            })\r\n        }\r\n    }\r\n    componentWillReceiveProps(props) {\r\n        this.setState({font:props})\r\n        \r\n      }\r\n    render(){\r\n        return(\r\n            \r\n            <div id = \"fp\" className=\" container-fluid wrapperStyle\" style={{fontFamily: this.state.font.value}}>\r\n               \r\n               <div id = \"upperBlock\" className=\"wrapper\">\r\n                 <div className=\"row\"></div>\r\n                 <div className=\"row\">\r\n\r\n                     <h2 className=\"col\">{this.props.lang === 'ru' ? this.state.dat.title :this.state.dat.original_title}</h2>\r\n                    \r\n                     \r\n                     <h4 className=\"col-auto\">{this.props.lang === 'ru' ? 'Рейтинг':'Average Vote:'} {this.state.dat.vote_average}\r\n                     <img className = \"star\"src={star} ></img>\r\n                     </h4>\r\n                     \r\n                     \r\n                     <h4 className=\"col-auto\">{this.props.lang === 'ru' ? 'Голоса':'Votes:'} {this.state.dat.vote_count}</h4>\r\n                \r\n               </div>\r\n               </div>\r\n               <div id = \"briefInfo\" className=\"wrapper\">\r\n                   <h5>{this.props.lang === 'ru' ? 'Дата выпуска':'Release Date:'} {this.state.dat.release_date}</h5>\r\n                   <div></div>\r\n                </div>\r\n\r\n               <div id = \"photoVideo\" className=\"row\" style={{padding:'1% 5% 1% 5%', margin:'0%', border:'0%'}}>\r\n                   \r\n                <img  width=\"36%\" height =\"auto\" src={`https://image.tmdb.org/t/p/original/${this.state.dat.poster_path}`} alt={this.state.dat.title} style={{ margin:'2%'}}/>\r\n                {this.state.video?(\r\n                <iframe  width=\"56%\" height=\"auto\" src={`https://www.youtube.com/embed/${this.state.video}`} style={{ margin:'2%'}}/>\r\n                ):(\r\n                <div style={{color:'white', margin:'0% 5% 5% 1%',maxWidth:'45%'}}>\r\n                Sorry, there seems to be no video provided for this film. \r\n                <hr/>The Universe wants you to watch it without spoilers, apparently.</div>\r\n                )}\r\n               </div>\r\n               <div style={{  margin: \"8px\"}}>\r\n               <h4 style={{  fontWeight: \"bolder\"}}>{this.props.lang === 'ru' ? 'Обзор':'Overview'}:</h4>\r\n              <h5 > {this.state.dat.overview}</h5></div>\r\n             \r\n               <div id = \"videoCarousel\" className=\"wrapper\"></div>\r\n               <div id = \"photoCarousel\" className=\"wrapper\"></div>\r\n               <div id = \"cast\"></div>\r\n               <div className=\"head-text\">\r\n               {this.props.lang === 'ru' ? 'Актеры':'Actors'}\r\n               </div>\r\n               <CarouselMain type={\"actors\"} filmId={this.state.dat.id} lang={this.props.lang} key={1} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default FilmPage;","C:\\Users\\Johnatan\\Desktop\\cloneWars19\\CloneWars\\rsclone\\src\\components\\Footer.js",["103","104","105"],"import React from \"react\";\r\nimport rsschool from \"./assets/rs_school_js.svg\";\r\nimport i18next from \"i18next\";\r\n\r\nclass Footer extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n \r\n    this.state={font:''};\r\n  \r\n  }\r\ncomponentWillReceiveProps(props) {\r\n  this.setState({font:props})\r\n  \r\n}\r\n  render() {\r\n    return (\r\n      <footer className=\"bg-dark text-center text-lg-start\" >\r\n        <div className=\"container p-4\" style={{fontFamily:`${this.state.font.value}`}}>\r\n          <div className=\"row\">\r\n            <div className=\"col-lg-6 col-md-12 mb-4 mb-md-0\" >\r\n              <h5 className=\"text-uppercase yellow-text\">\r\n                {\" \"}\r\n                The Rolling Scopes School\r\n              </h5>\r\n              <p className=\"text-white\">\r\n                {i18next.t(\"FreeCourse\")}{\" \"}\r\n                <a\r\n                  className=\"footer__link\"\r\n                  target=\"_blank\"\r\n                  href=\"https://rs.school/js/\"\r\n                >\r\n                  rs.school/js\r\n                </a>\r\n              </p>\r\n            </div>\r\n\r\n            <div className=\"col-lg-3 col-md-6 mb-4 mb-md-0\">\r\n              <h5 className=\"text-uppercase\"></h5>\r\n              <div>\r\n                <img className=\"footer__image\" src={rsschool}></img>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"col-lg-3 col-md-6 mb-4 mb-md-0\">\r\n              <h5 className=\"text-uppercase mb-0 yellow-text\">\r\n                {i18next.t(\"Developed\")}\r\n              </h5>\r\n\r\n              <ul className=\"list-unstyled\">\r\n                <li>\r\n                  <a className=\"\" href=\"https://github.com/YuPashintseva\">\r\n                    YuPashintseva\r\n                  </a>\r\n                </li>\r\n                <li>\r\n                  <a className=\"\" href=\"https://github.com/anatkig\">\r\n                    anatkig\r\n                  </a>\r\n                </li>\r\n                <li>\r\n                  <a className=\"\" href=\"https://github.com/vegas-muffin\">\r\n                    vegas-muffin\r\n                  </a>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"text-center p-3 text-white\">\r\n          {\" \"}\r\n          &copy; 2021 {i18next.t(\"Copyright\")} IMDb-clone\r\n        </div>\r\n      </footer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Footer;\r\n","C:\\Users\\Johnatan\\Desktop\\cloneWars19\\CloneWars\\rsclone\\src\\components\\SearchArea.js",["106","107","108","109","110","111","112","113","114"],"// import Option from \"./Option\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport ReactHTMLDatalist from \"react-html-datalist\";\r\nimport MovieList from './MovieList';\r\nimport i18next from \"i18next\";\r\nimport { Route, Link } from \"react-router-dom\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport FormControl from \"react-bootstrap/FormControl\";\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\nclass SearchArea extends React.Component{\r\n  constructor(props){\r\n    super(props);\r\n    //this.state={movies:[]}\r\n  }\r\n  render(){\r\n  return (\r\n   \r\n    <form\r\n      className=\"container-fluid my-2 my-lg-0\"\r\n      onSubmit={this.props.handleSubmit}\r\n    >\r\n      <Link to=\"/MovieList\" onClick={(event)=>{!document.querySelector('input').value?event.preventDefault():event.returnValue = true}}>\r\n      <input\r\n        className=\"form-control mr-sm-2\"\r\n        style={{minWidth: '120px'}}\r\n        //onChange={this.searchCnangeHandler.bind(this)}\r\n        onChange={this.props.handleChange}\r\n        type=\"text\"\r\n        list=\"datalistOptions\"\r\n        id=\"exampleDataList\"\r\n        placeholder={i18next.t(\"Search\")}\r\n   />\r\n   </Link>\r\n    \r\n    </form>\r\n    \r\n   \r\n  );\r\n  }\r\n};\r\n\r\n// class SearchArea extends React.Component {\r\n//   render() {\r\n\r\n//   }\r\n// }\r\n\r\nexport default SearchArea;\r\n","C:\\Users\\Johnatan\\Desktop\\cloneWars19\\CloneWars\\rsclone\\src\\components\\MovieList.js",["115"],"import React from \"react\";\r\nimport Movie from \"./Movie\";\r\n\r\nimport i18next from \"i18next\";\r\n\r\nconst MovieList = (props) => {\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row\">\r\n        <div className=\"col s12\">\r\n          {props.movies.map((movie, i) => {\r\n            return (\r\n              <Movie\r\n                key={i}\r\n                poster_path={movie.poster_path}\r\n                title={movie.title}\r\n                original_title={movie.title}\r\n                overview={movie.overview}\r\n                release_date={movie.release_date}\r\n                vote_average={movie.vote_average}\r\n                vote_count={movie.vote_count}\r\n                popularity={movie.popularity}\r\n              />\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MovieList;\r\n","C:\\Users\\Johnatan\\Desktop\\cloneWars19\\CloneWars\\rsclone\\src\\components\\WatchList.js",["116","117","118"],"import React from 'react';\r\nimport { Button, Modal, Container, Row, Col, Image } from 'react-bootstrap';\r\nimport close from './assets/close.png'\r\n\r\n\r\nclass Watchlist extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {data: [], lang: this.props.lang};\r\n        this.updateWatchList = this.updateWatchList.bind(this);\r\n        \r\n    }\r\n\r\n    async componentDidMount() {\r\n        let filmsList = JSON.parse(localStorage.getItem('films'));\r\n        this.setState({data: filmsList});\r\n    }\r\n\r\n    // for removing id from watchList\r\n    updateWatchList(filmID) {\r\n        let currentArray = this.state.data;\r\n        const idx = currentArray.indexOf(filmID);\r\n        currentArray.splice(idx, 1);\r\n        currentArray.splice(idx, 1);\r\n        localStorage.setItem('films', JSON.stringify(currentArray));\r\n        this.setState({data: currentArray});\r\n    }\r\n    \r\n    render() {\r\n        console.log(this.props.lang)\r\n        if (this.state.data) {         \r\n            return (\r\n                <div id = \"fp\" className=\"container-fluid wrapperStyle\">\r\n                    <div className=\"top-menu-wrapper\">\r\n                        <div className=\"head-text\">{this.state.lang === 'ru' ? 'Фильмы к просмотру' : 'Your Watchlist'}</div>\r\n                    </div>\r\n                    <div>\r\n                    {this.state.data.map(el => (\r\n                        <div key={el.id}>\r\n                            <Row className=\"row-bottom-padding\">\r\n                                <Col xs={6} md={4}>\r\n                                    {el[1] ? <Image className=\"poster-img-modal img-watchlist\" src={`https://image.tmdb.org/t/p/original/${el[1]}`} alt={el[0]} thumbnail />: null}\r\n                                </Col>\r\n                                <Col xs={11} md={7}>\r\n                                    {el[4] ? <div><strong>{this.state.lang === 'ru' ? 'Наименование' : 'Title'}: </strong> {el[4]}</div> : null}\r\n                                    {el[2] ? <div><strong>{this.state.lang === 'ru' ? 'Дата выпуска' : 'Release date'}: </strong>  {el[2]}</div> : null}\r\n                                    {el[3] ? <div><strong>{this.state.lang === 'ru' ? 'Рейтинг' : 'Stars'}: </strong> {el[3]}</div> : null}\r\n                                    {el[5] ? <div><strong>{this.state.lang === 'ru' ? 'Обзор' : 'Overview'}: </strong> {el[5]}</div> : null}\r\n                                </Col>\r\n                                <Col xs={1} md={1}>\r\n                                    {el[0] ? <div className=\"background-close-btn\"><Image className=\"close-btn-img\" src={close} alt=\"close button\" onClick = {() => {this.updateWatchList(el[0]); }}/></div> : null}\r\n                                </Col>\r\n                            </Row>\r\n                        </div>\r\n                    ))}\r\n                    </div>\r\n                </div>\r\n            )\r\n        } else {\r\n            return (<div id = \"fp\" className=\"container-fluid wrapperStyle\">\r\n                        <div className=\"head-text\">{this.state.lang === 'ru' ? 'Фильмы к просмотру' : 'Your Watchlist'}</div>\r\n                            {this.state.lang === 'ru' ? 'Ничего не было найдено' : 'Nothing was found'} \r\n                    </div>);\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport default Watchlist;","C:\\Users\\Johnatan\\Desktop\\cloneWars19\\CloneWars\\rsclone\\src\\components\\Statistics.js",[],"C:\\Users\\Johnatan\\Desktop\\cloneWars19\\CloneWars\\rsclone\\src\\components\\GoogleAuth.js",["119","120","121","122"],"import React from \"react\";\r\nimport profile from '../components/assets/fake.png';\r\n\r\nclass GoogleAuth extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      isSignedIn: null,\r\n      userInfo: null,\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    window.gapi.load(\"client:auth2\", () => {\r\n      window.gapi.client\r\n        .init({\r\n          clientId:\r\n            \"36766060663-uqo9t1ggc8ks3lanq5fqtfbb4edpisf4.apps.googleusercontent.com\",\r\n          scope: \"email\",\r\n        })\r\n        .then(() => {\r\n          this.auth = window.gapi.auth2.getAuthInstance();\r\n          this.setState({ isSignedIn: this.auth.isSignedIn.get() });\r\n          this.setState({ userInfo: this.auth.currentUser.get() });\r\n          this.auth.isSignedIn.listen(this.onAuthChange);\r\n        });\r\n    });\r\n  }\r\n\r\n\r\n  showCurrentUserInfo() {\r\n    var googleUser = this.auth.currentUser.get().Mt;\r\n    return googleUser.Mt;\r\n  }\r\n\r\n  onAuthChange = () => {\r\n    this.setState({ isSignedIn: this.auth.isSignedIn.get() });\r\n    this.setState({ userInfo: this.auth.currentUser.get() });\r\n  };\r\n\r\n  onSignIn = () => {\r\n    this.auth.signIn();\r\n  };\r\n\r\n  onSignOut = () => {\r\n    this.auth.signOut();\r\n  };\r\n\r\n\r\n  renderAuthButton() {\r\n    if (this.state.isSignedIn === null) {\r\n      return null;\r\n    } else if (this.state.isSignedIn) {\r\n      let profile = this.auth.currentUser.get().getBasicProfile();\r\n      console.log('profile',profile)\r\n      return (\r\n        <a onClick={this.onSignOut} className=\"log-in-button\">\r\n          {(this.auth.currentUser.get().getBasicProfile()) ? (\r\n            <img\r\n              className=\"user-img\"\r\n              src={profile.getImageUrl()}\r\n              alt=\"user image\"\r\n            />\r\n          ) : null}\r\n          {this.state.userInfo ? profile.getName() : null}\r\n        </a>\r\n      );\r\n    } else {\r\n      return (\r\n        <a onClick={this.onSignIn} className=\"nav-link log-in-button\">\r\n          SignIn\r\n        </a>\r\n      );\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <a href=\"/\" className=\"nav-item\">\r\n        {this.renderAuthButton()}\r\n      </a>\r\n    );\r\n  }\r\n}\r\n\r\nexport default GoogleAuth;\r\n","C:\\Users\\Johnatan\\Desktop\\cloneWars19\\CloneWars\\rsclone\\src\\components\\ModalWindow.js",["123","124"],"import React from 'react'\r\nimport { Button, Modal, Container, Row, Col, Image } from 'react-bootstrap'\r\nimport { Helmet } from \"react-helmet\";\r\n\r\nclass ModalWindow extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render(){\r\n        let msgText = 'Successfully added to WatchList';\r\n        this.props.lang === 'ru' ?  msgText = 'Успешно добавлен в список фильмов для просмотра' : msgText = 'Successfully added to WatchList';\r\n        if (this.props.toWatchList) {\r\n            if (localStorage.getItem('films')) {\r\n                let arr = JSON.parse(localStorage.getItem('films'));\r\n                if (! arr.includes(this.props.filmInfo.id)) {\r\n                    arr.push(this.props.filmInfo.id);\r\n                    let infoArr = [];\r\n                    infoArr.push(this.props.filmInfo.id);\r\n                    infoArr.push(this.props.filmInfo.poster_path);\r\n                    infoArr.push(this.props.filmInfo.release_date);\r\n                    infoArr.push(this.props.filmInfo.vote_average);\r\n                    infoArr.push(this.props.filmInfo.title);\r\n                    infoArr.push(this.props.filmInfo.overview);\r\n                    arr.push(infoArr);\r\n                } else {\r\n                    this.props.lang === 'ru' ? msgText = 'Фильм уже добавлен к списку для просмотра' : msgText ='It is already in Watchlist'\r\n                }\r\n                localStorage.setItem('films', JSON.stringify(arr));\r\n            } else { \r\n                localStorage.setItem('films', JSON.stringify([this.props.filmInfo.id, [this.props.filmInfo.id, this.props.filmInfo.poster_path,this.props.filmInfo.release_date, this.props.filmInfo.vote_average, this.props.filmInfo.title, this.props.filmInfo.overview]]));\r\n            }\r\n            return(\r\n                <div>\r\n                    <Modal className=\"main-modal\" show={true} size=\"lg\" aria-labelledby=\"contained-modal-title-vcenter\" centered>\r\n                        <Modal.Header closeButton onClick={this.props.handleModalShowHide}>\r\n                         <Modal.Title id=\"contained-modal-title-vcenter\">{this.props.filmInfo.original_title}</Modal.Title>\r\n                        </Modal.Header>\r\n                        <Modal.Body className=\"show-grid\">\r\n                        <Container>\r\n                            <Row>\r\n                               {msgText}\r\n                            </Row>\r\n                        </Container>\r\n                        \r\n                        </Modal.Body>\r\n                        <Modal.Footer>\r\n                        <Button variant=\"secondary\" onClick={this.props.handleModalShowHide}>\r\n                            {this.props.lang === 'ru' ? 'Закрыть' : 'Close'}\r\n                        </Button>\r\n                        </Modal.Footer>\r\n                    </Modal>\r\n                </div>\r\n            )\r\n        } else {\r\n            return (\r\n                <div>\r\n                    <Modal className=\"main-modal\" show={true} size=\"lg\" aria-labelledby=\"contained-modal-title-vcenter\" centered>\r\n                        <Modal.Header closeButton onClick={this.props.handleModalShowHide}>\r\n                        <Modal.Title id=\"contained-modal-title-vcenter\">{this.props.filmInfo.original_title}</Modal.Title>\r\n                        </Modal.Header>\r\n                        <Modal.Body className=\"show-grid\">\r\n                        <Container>\r\n                            <Row>\r\n                                <Col xs={6} md={4}>\r\n                                    <Image className=\"poster-img-modal\" src={`https://image.tmdb.org/t/p/original/${this.props.filmInfo.poster_path}`} alt={this.props.filmInfo.title} thumbnail />\r\n                                </Col>\r\n                                <Col xs={12} md={8}>\r\n                                <strong>{this.props.lang === 'ru' ? 'Обзор:' : 'Overview:'} </strong>  {this.props.filmInfo.overview} <br/><br/>\r\n                                <strong>{this.props.lang === 'ru' ? 'Дата выпуска:' : 'Release date:'} </strong> {this.props.filmInfo.release_date}\r\n                                </Col>\r\n                            </Row>\r\n                        </Container>\r\n                        \r\n                        </Modal.Body>\r\n                        <Modal.Footer>\r\n                        <Button variant=\"secondary\" onClick={this.props.handleModalShowHide}>\r\n                            Close\r\n                        </Button>\r\n                        </Modal.Footer>\r\n                    </Modal>\r\n                </div>\r\n            );\r\n        }\r\n\r\n    }\r\n    \r\n}\r\n\r\nexport default ModalWindow;","C:\\Users\\Johnatan\\Desktop\\cloneWars19\\CloneWars\\rsclone\\src\\components\\Movie.js",["125","126","127"],"C:\\Users\\Johnatan\\Desktop\\cloneWars19\\CloneWars\\rsclone\\src\\components\\CaurouselMain.js",["128","129"],{"ruleId":"130","replacedBy":"131"},{"ruleId":"132","replacedBy":"133"},{"ruleId":"134","severity":1,"message":"135","line":16,"column":8,"nodeType":"136","messageId":"137","endLine":16,"endColumn":15},{"ruleId":"138","severity":1,"message":"139","line":143,"column":11,"nodeType":"140","endLine":143,"endColumn":73},{"ruleId":"138","severity":1,"message":"139","line":146,"column":11,"nodeType":"140","endLine":146,"endColumn":78},{"ruleId":"138","severity":1,"message":"139","line":149,"column":11,"nodeType":"140","endLine":149,"endColumn":67},{"ruleId":"138","severity":1,"message":"139","line":152,"column":11,"nodeType":"140","endLine":152,"endColumn":77},{"ruleId":"141","severity":1,"message":"142","line":186,"column":17,"nodeType":"140","endLine":186,"endColumn":65},{"ruleId":"138","severity":1,"message":"139","line":196,"column":21,"nodeType":"140","endLine":196,"endColumn":55},{"ruleId":"138","severity":1,"message":"139","line":246,"column":19,"nodeType":"140","endLine":253,"endColumn":20},{"ruleId":"138","severity":1,"message":"139","line":259,"column":21,"nodeType":"140","endLine":259,"endColumn":45},{"ruleId":"134","severity":1,"message":"143","line":6,"column":8,"nodeType":"136","messageId":"137","endLine":6,"endColumn":15},{"ruleId":"134","severity":1,"message":"144","line":7,"column":8,"nodeType":"136","messageId":"137","endLine":7,"endColumn":24},{"ruleId":"134","severity":1,"message":"145","line":12,"column":7,"nodeType":"136","messageId":"137","endLine":12,"endColumn":15},{"ruleId":"134","severity":1,"message":"146","line":64,"column":13,"nodeType":"136","messageId":"137","endLine":64,"endColumn":21},{"ruleId":"147","severity":1,"message":"148","line":76,"column":28,"nodeType":"149","messageId":"150","endLine":76,"endColumn":30},{"ruleId":"134","severity":1,"message":"151","line":79,"column":13,"nodeType":"136","messageId":"137","endLine":79,"endColumn":16},{"ruleId":"134","severity":1,"message":"152","line":3,"column":10,"nodeType":"136","messageId":"137","endLine":3,"endColumn":16},{"ruleId":"134","severity":1,"message":"153","line":3,"column":18,"nodeType":"136","messageId":"137","endLine":3,"endColumn":23},{"ruleId":"134","severity":1,"message":"154","line":3,"column":25,"nodeType":"136","messageId":"137","endLine":3,"endColumn":34},{"ruleId":"134","severity":1,"message":"155","line":3,"column":36,"nodeType":"136","messageId":"137","endLine":3,"endColumn":39},{"ruleId":"134","severity":1,"message":"156","line":3,"column":41,"nodeType":"136","messageId":"137","endLine":3,"endColumn":44},{"ruleId":"134","severity":1,"message":"157","line":3,"column":46,"nodeType":"136","messageId":"137","endLine":3,"endColumn":51},{"ruleId":"134","severity":1,"message":"158","line":4,"column":8,"nodeType":"136","messageId":"137","endLine":4,"endColumn":13},{"ruleId":"159","severity":1,"message":"160","line":8,"column":5,"nodeType":"161","messageId":"162","endLine":11,"endColumn":6},{"ruleId":"134","severity":1,"message":"146","line":13,"column":13,"nodeType":"136","messageId":"137","endLine":13,"endColumn":21},{"ruleId":"134","severity":1,"message":"151","line":35,"column":13,"nodeType":"136","messageId":"137","endLine":35,"endColumn":16},{"ruleId":"141","severity":1,"message":"142","line":58,"column":22,"nodeType":"140","endLine":58,"endColumn":57},{"ruleId":"163","severity":1,"message":"164","line":75,"column":17,"nodeType":"140","endLine":75,"endColumn":134},{"ruleId":"165","severity":1,"message":"166","line":28,"column":17,"nodeType":"140","endLine":32,"endColumn":18},{"ruleId":"167","severity":1,"message":"168","line":39,"column":15,"nodeType":"140","endLine":39,"endColumn":46},{"ruleId":"141","severity":1,"message":"142","line":41,"column":17,"nodeType":"140","endLine":41,"endColumn":63},{"ruleId":"134","severity":1,"message":"169","line":2,"column":17,"nodeType":"136","messageId":"137","endLine":2,"endColumn":26},{"ruleId":"134","severity":1,"message":"170","line":2,"column":28,"nodeType":"136","messageId":"137","endLine":2,"endColumn":36},{"ruleId":"134","severity":1,"message":"171","line":3,"column":8,"nodeType":"136","messageId":"137","endLine":3,"endColumn":25},{"ruleId":"134","severity":1,"message":"172","line":4,"column":8,"nodeType":"136","messageId":"137","endLine":4,"endColumn":17},{"ruleId":"134","severity":1,"message":"173","line":6,"column":10,"nodeType":"136","messageId":"137","endLine":6,"endColumn":15},{"ruleId":"134","severity":1,"message":"174","line":7,"column":8,"nodeType":"136","messageId":"137","endLine":7,"endColumn":12},{"ruleId":"134","severity":1,"message":"175","line":8,"column":8,"nodeType":"136","messageId":"137","endLine":8,"endColumn":19},{"ruleId":"134","severity":1,"message":"152","line":9,"column":8,"nodeType":"136","messageId":"137","endLine":9,"endColumn":14},{"ruleId":"159","severity":1,"message":"160","line":12,"column":3,"nodeType":"161","messageId":"162","endLine":15,"endColumn":4},{"ruleId":"134","severity":1,"message":"135","line":4,"column":8,"nodeType":"136","messageId":"137","endLine":4,"endColumn":15},{"ruleId":"134","severity":1,"message":"152","line":2,"column":10,"nodeType":"136","messageId":"137","endLine":2,"endColumn":16},{"ruleId":"134","severity":1,"message":"153","line":2,"column":18,"nodeType":"136","messageId":"137","endLine":2,"endColumn":23},{"ruleId":"134","severity":1,"message":"154","line":2,"column":25,"nodeType":"136","messageId":"137","endLine":2,"endColumn":34},{"ruleId":"134","severity":1,"message":"176","line":2,"column":8,"nodeType":"136","messageId":"137","endLine":2,"endColumn":15},{"ruleId":"138","severity":1,"message":"139","line":56,"column":9,"nodeType":"140","endLine":56,"endColumn":63},{"ruleId":"177","severity":1,"message":"178","line":58,"column":13,"nodeType":"140","endLine":62,"endColumn":15},{"ruleId":"138","severity":1,"message":"139","line":69,"column":9,"nodeType":"140","endLine":69,"endColumn":71},{"ruleId":"134","severity":1,"message":"179","line":3,"column":10,"nodeType":"136","messageId":"137","endLine":3,"endColumn":16},{"ruleId":"159","severity":1,"message":"160","line":6,"column":5,"nodeType":"161","messageId":"162","endLine":8,"endColumn":6},{"ruleId":"134","severity":1,"message":"173","line":4,"column":10,"nodeType":"136","messageId":"137","endLine":4,"endColumn":15},{"ruleId":"141","severity":1,"message":"142","line":17,"column":13,"nodeType":"140","endLine":17,"endColumn":46},{"ruleId":"177","severity":1,"message":"178","line":34,"column":11,"nodeType":"140","endLine":34,"endColumn":73},{"ruleId":"134","severity":1,"message":"146","line":49,"column":9,"nodeType":"136","messageId":"137","endLine":49,"endColumn":17},{"ruleId":"134","severity":1,"message":"151","line":63,"column":9,"nodeType":"136","messageId":"137","endLine":63,"endColumn":12},"no-native-reassign",["180"],"no-negated-in-lhs",["181"],"no-unused-vars","'i18next' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'Backend' is defined but never used.","'LanguageDetector' is defined but never used.","'Language' is assigned a value but never used.","'response' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'res' is assigned a value but never used.","'Button' is defined but never used.","'Modal' is defined but never used.","'Container' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'Image' is defined but never used.","'close' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","'useEffect' is defined but never used.","'useState' is defined but never used.","'ReactHTMLDatalist' is defined but never used.","'MovieList' is defined but never used.","'Route' is defined but never used.","'Form' is defined but never used.","'FormControl' is defined but never used.","'profile' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","'Helmet' is defined but never used.","no-global-assign","no-unsafe-negation"]